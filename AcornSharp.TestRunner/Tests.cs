using System.Collections.Generic;
using AcornSharp.Nodes;

namespace AcornSharp.TestRunner
{
    internal static class Tests
    {
        public static void Run()
        {
            Program.test("this\n", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(ThisExpressionNode),
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 4
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 4
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 2,
                        column = 0
                    }
                }
            });

            Program.test("null\n", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(LiteralNode),
                            value = null,
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 4
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 4
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 2,
                        column = 0
                    }
                }
            });

            Program.test("\n    42\n\n", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(LiteralNode),
                            value = 42,
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 2,
                                    column = 4
                                },
                                end = new TestNode
                                {
                                    line = 2,
                                    column = 6
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 2,
                                column = 4
                            },
                            end = new TestNode
                            {
                                line = 2,
                                column = 6
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 4,
                        column = 0
                    }
                }
            });

            Program.test("/foobar/", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(LiteralNode),
                            regex = new TestNode
                            {
                                pattern = "foobar",
                                flags = ""
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 8
                                }
                            }
                        }
                    }
                }
            });

            Program.test("/[a-z]/g", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(LiteralNode),
                            regex = new TestNode
                            {
                                pattern = "[a-z]",
                                flags = "g"
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 8
                                }
                            }
                        }
                    }
                }
            });

            Program.test("(1 + 2 ) * 3", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(BinaryExpressionNode),
                            left = new TestNode
                            {
                                type = typeof(BinaryExpressionNode),
                                left = new TestNode
                                {
                                    type = typeof(LiteralNode),
                                    value = 1,
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 1
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 2
                                        }
                                    }
                                },
                                @operator = "+",
                                right = new TestNode
                                {
                                    type = typeof(LiteralNode),
                                    value = 2,
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 5
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 6
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 1
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 6
                                    }
                                }
                            },
                            @operator = "*",
                            right = new TestNode
                            {
                                type = typeof(LiteralNode),
                                value = 3,
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 11
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 12
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 12
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 12
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 12
                    }
                }
            });

            Program.test("(1 + 2 ) * 3", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(BinaryExpressionNode),
                            left = new TestNode
                            {
                                type = typeof(ParenthesisedExpressionNode),
                                expression = new TestNode
                                {
                                    type = typeof(BinaryExpressionNode),
                                    left = new TestNode
                                    {
                                        type = typeof(LiteralNode),
                                        value = 1,
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 1
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 2
                                            }
                                        }
                                    },
                                    @operator = "+",
                                    right = new TestNode
                                    {
                                        type = typeof(LiteralNode),
                                        value = 2,
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 5
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 6
                                            }
                                        }
                                    },
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 1
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 6
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 8
                                    }
                                }
                            },
                            @operator = "*",
                            right = new TestNode
                            {
                                type = typeof(LiteralNode),
                                value = 3,
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 11
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 12
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 12
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 12
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 12
                    }
                }
            }, new TestOptions
            {
                locations = true,
                preserveParens = true
            });

            Program.test("(x = 23)", new TestNode
            {
                body = new TestNode[]
                {
                    new TestNode
                    {
                        expression = new TestNode
                        {
                            type = typeof(ParenthesisedExpressionNode),
                            expression = new TestNode
                            {
                                type = typeof(AssignmentExpressionNode),
                                @operator = "=",
                                left = new TestNode
                                {
                                    name = "x",
                                    type = typeof(IdentifierNode),
                                },
                                right = new TestNode
                                {
                                    value = 23,
                                    raw = "23",
                                    type = typeof(LiteralNode),
                                },
                            },
                        },
                        type = typeof(ExpressionStatementNode),
                    }
                },
                type = typeof(ProgramNode),
            }, new TestOptions
            {
                preserveParens = true
            });

            Program.test("x = []", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(AssignmentExpressionNode),
                            @operator = "=",
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 1
                                    }
                                }
                            },
                            right = new TestNode
                            {
                                type = typeof(ArrayExpressionNode),
                                elements = new TestNode[0],
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 4
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 6
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 6
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 6
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 6
                    }
                }
            });

            Program.test("x = [ ]", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(AssignmentExpressionNode),
                            @operator = "=",
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 1
                                    }
                                }
                            },
                            right = new TestNode
                            {
                                type = typeof(ArrayExpressionNode),
                                elements = new TestNode[0],
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 4
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 7
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 7
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 7
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 7
                    }
                }
            });

            Program.test("x = [ 42 ]", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(AssignmentExpressionNode),
                            @operator = "=",
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 1
                                    }
                                }
                            },
                            right = new TestNode
                            {
                                type = typeof(ArrayExpressionNode),
                                elements = new TestNode[]
                                {
                                    new TestNode
                                    {
                                        type = typeof(LiteralNode),
                                        value = 42,
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 6
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 8
                                            }
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 4
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 10
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 10
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 10
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 10
                    }
                }
            });

            Program.test("x = [ 42, ]", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(AssignmentExpressionNode),
                            @operator = "=",
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 1
                                    }
                                }
                            },
                            right = new TestNode
                            {
                                type = typeof(ArrayExpressionNode),
                                elements = new TestNode[]
                                {
                                    new TestNode
                                    {
                                        type = typeof(LiteralNode),
                                        value = 42,
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 6
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 8
                                            }
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 4
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 11
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 11
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 11
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 11
                    }
                }
            });

            Program.test("x = [ ,, 42 ]", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(AssignmentExpressionNode),
                            @operator = "=",
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 1
                                    }
                                }
                            },
                            right = new TestNode
                            {
                                type = typeof(ArrayExpressionNode),
                                elements = new TestNode[]
                                {
                                    null,
                                    null,
                                    new TestNode
                                    {
                                        type = typeof(LiteralNode),
                                        value = 42,
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 9
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 11
                                            }
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 4
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 13
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 13
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 13
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 13
                    }
                }
            });

            Program.test("x = [ 1, 2, 3, ]", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(AssignmentExpressionNode),
                            @operator = "=",
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 1
                                    }
                                }
                            },
                            right = new TestNode
                            {
                                type = typeof(ArrayExpressionNode),
                                elements = new TestNode[]
                                {
                                    new TestNode
                                    {
                                        type = typeof(LiteralNode),
                                        value = 1,
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 6
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 7
                                            }
                                        }
                                    },
                                    new TestNode
                                    {
                                        type = typeof(LiteralNode),
                                        value = 2,
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 9
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 10
                                            }
                                        }
                                    },
                                    new TestNode
                                    {
                                        type = typeof(LiteralNode),
                                        value = 3,
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 12
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 13
                                            }
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 4
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 16
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 16
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 16
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 16
                    }
                }
            });

            Program.test("x = [ 1, 2,, 3, ]", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(AssignmentExpressionNode),
                            @operator = "=",
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 1
                                    }
                                }
                            },
                            right = new TestNode
                            {
                                type = typeof(ArrayExpressionNode),
                                elements = new TestNode[]
                                {
                                    new TestNode
                                    {
                                        type = typeof(LiteralNode),
                                        value = 1,
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 6
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 7
                                            }
                                        }
                                    },
                                    new TestNode
                                    {
                                        type = typeof(LiteralNode),
                                        value = 2,
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 9
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 10
                                            }
                                        }
                                    },
                                    null,
                                    new TestNode
                                    {
                                        type = typeof(LiteralNode),
                                        value = 3,
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 13
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 14
                                            }
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 4
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 17
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 17
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 17
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 17
                    }
                }
            });

            Program.test("日本語 = []", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(AssignmentExpressionNode),
                            @operator = "=",
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "日本語",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 3
                                    }
                                }
                            },
                            right = new TestNode
                            {
                                type = typeof(ArrayExpressionNode),
                                elements = new TestNode[0],
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 6
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 8
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 8
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 8
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 8
                    }
                }
            });

            Program.test("T‿ = []", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(AssignmentExpressionNode),
                            @operator = "=",
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "T‿",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 2
                                    }
                                }
                            },
                            right = new TestNode
                            {
                                type = typeof(ArrayExpressionNode),
                                elements = new TestNode[0],
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 5
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 7
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 7
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 7
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 7
                    }
                }
            });

            Program.test("T‌ = []", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(AssignmentExpressionNode),
                            @operator = "=",
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "T‌",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 2
                                    }
                                }
                            },
                            right = new TestNode
                            {
                                type = typeof(ArrayExpressionNode),
                                elements = new TestNode[0],
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 5
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 7
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 7
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 7
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 7
                    }
                }
            });

            Program.test("T‍ = []", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(AssignmentExpressionNode),
                            @operator = "=",
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "T‍",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 2
                                    }
                                }
                            },
                            right = new TestNode
                            {
                                type = typeof(ArrayExpressionNode),
                                elements = new TestNode[0],
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 5
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 7
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 7
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 7
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 7
                    }
                }
            });

            Program.test("ⅣⅡ = []", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(AssignmentExpressionNode),
                            @operator = "=",
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "ⅣⅡ",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 2
                                    }
                                }
                            },
                            right = new TestNode
                            {
                                type = typeof(ArrayExpressionNode),
                                elements = new TestNode[0],
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 5
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 7
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 7
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 7
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 7
                    }
                }
            });

            Program.test("ⅣⅡ = []", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(AssignmentExpressionNode),
                            @operator = "=",
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "ⅣⅡ",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 2
                                    }
                                }
                            },
                            right = new TestNode
                            {
                                type = typeof(ArrayExpressionNode),
                                elements = new TestNode[0],
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 5
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 7
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 7
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 7
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 7
                    }
                }
            });

            Program.test("x = {}", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(AssignmentExpressionNode),
                            @operator = "=",
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 1
                                    }
                                }
                            },
                            right = new TestNode
                            {
                                type = typeof(ObjectExpressionNode),
                                properties = new TestNode[0],
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 4
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 6
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 6
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 6
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 6
                    }
                }
            });

            Program.test("x = { }", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(AssignmentExpressionNode),
                            @operator = "=",
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 1
                                    }
                                }
                            },
                            right = new TestNode
                            {
                                type = typeof(ObjectExpressionNode),
                                properties = new TestNode[0],
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 4
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 7
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 7
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 7
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 7
                    }
                }
            });

            Program.test("x = { answer: 42 }", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(AssignmentExpressionNode),
                            @operator = "=",
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 1
                                    }
                                }
                            },
                            right = new TestNode
                            {
                                type = typeof(ObjectExpressionNode),
                                properties = new TestNode[]
                                {
                                    new TestNode
                                    {
                                        type = typeof(PropertyNode),
                                        key = new TestNode
                                        {
                                            type = typeof(IdentifierNode),
                                            name = "answer",
                                            loc = new TestNode
                                            {
                                                start = new TestNode
                                                {
                                                    line = 1,
                                                    column = 6
                                                },
                                                end = new TestNode
                                                {
                                                    line = 1,
                                                    column = 12
                                                }
                                            }
                                        },
                                        value = new TestNode
                                        {
                                            type = typeof(LiteralNode),
                                            value = 42,
                                            loc = new TestNode
                                            {
                                                start = new TestNode
                                                {
                                                    line = 1,
                                                    column = 14
                                                },
                                                end = new TestNode
                                                {
                                                    line = 1,
                                                    column = 16
                                                }
                                            }
                                        },
                                        kind = PropertyKind.Init,
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 4
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 18
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 18
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 18
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 18
                    }
                }
            });

            Program.test("x = { if: 42 }", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(AssignmentExpressionNode),
                            @operator = "=",
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 1
                                    }
                                }
                            },
                            right = new TestNode
                            {
                                type = typeof(ObjectExpressionNode),
                                properties = new TestNode[]
                                {
                                    new TestNode
                                    {
                                        type = typeof(PropertyNode),
                                        key = new TestNode
                                        {
                                            type = typeof(IdentifierNode),
                                            name = "if",
                                            loc = new TestNode
                                            {
                                                start = new TestNode
                                                {
                                                    line = 1,
                                                    column = 6
                                                },
                                                end = new TestNode
                                                {
                                                    line = 1,
                                                    column = 8
                                                }
                                            }
                                        },
                                        value = new TestNode
                                        {
                                            type = typeof(LiteralNode),
                                            value = 42,
                                            loc = new TestNode
                                            {
                                                start = new TestNode
                                                {
                                                    line = 1,
                                                    column = 10
                                                },
                                                end = new TestNode
                                                {
                                                    line = 1,
                                                    column = 12
                                                }
                                            }
                                        },
                                        kind = PropertyKind.Init,
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 4
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 14
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 14
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 14
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 14
                    }
                }
            });

            Program.test("x = { true: 42 }", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(AssignmentExpressionNode),
                            @operator = "=",
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 1
                                    }
                                }
                            },
                            right = new TestNode
                            {
                                type = typeof(ObjectExpressionNode),
                                properties = new TestNode[]
                                {
                                    new TestNode
                                    {
                                        type = typeof(PropertyNode),
                                        key = new TestNode
                                        {
                                            type = typeof(IdentifierNode),
                                            name = "true",
                                            loc = new TestNode
                                            {
                                                start = new TestNode
                                                {
                                                    line = 1,
                                                    column = 6
                                                },
                                                end = new TestNode
                                                {
                                                    line = 1,
                                                    column = 10
                                                }
                                            }
                                        },
                                        value = new TestNode
                                        {
                                            type = typeof(LiteralNode),
                                            value = 42,
                                            loc = new TestNode
                                            {
                                                start = new TestNode
                                                {
                                                    line = 1,
                                                    column = 12
                                                },
                                                end = new TestNode
                                                {
                                                    line = 1,
                                                    column = 14
                                                }
                                            }
                                        },
                                        kind = PropertyKind.Init,
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 4
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 16
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 16
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 16
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 16
                    }
                }
            });

            Program.test("x = { false: 42 }", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(AssignmentExpressionNode),
                            @operator = "=",
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 1
                                    }
                                }
                            },
                            right = new TestNode
                            {
                                type = typeof(ObjectExpressionNode),
                                properties = new TestNode[]
                                {
                                    new TestNode
                                    {
                                        type = typeof(PropertyNode),
                                        key = new TestNode
                                        {
                                            type = typeof(IdentifierNode),
                                            name = "false",
                                            loc = new TestNode
                                            {
                                                start = new TestNode
                                                {
                                                    line = 1,
                                                    column = 6
                                                },
                                                end = new TestNode
                                                {
                                                    line = 1,
                                                    column = 11
                                                }
                                            }
                                        },
                                        value = new TestNode
                                        {
                                            type = typeof(LiteralNode),
                                            value = 42,
                                            loc = new TestNode
                                            {
                                                start = new TestNode
                                                {
                                                    line = 1,
                                                    column = 13
                                                },
                                                end = new TestNode
                                                {
                                                    line = 1,
                                                    column = 15
                                                }
                                            }
                                        },
                                        kind = PropertyKind.Init,
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 4
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 17
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 17
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 17
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 17
                    }
                }
            });

            Program.test("x = { null: 42 }", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(AssignmentExpressionNode),
                            @operator = "=",
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 1
                                    }
                                }
                            },
                            right = new TestNode
                            {
                                type = typeof(ObjectExpressionNode),
                                properties = new TestNode[]
                                {
                                    new TestNode
                                    {
                                        type = typeof(PropertyNode),
                                        key = new TestNode
                                        {
                                            type = typeof(IdentifierNode),
                                            name = "null",
                                            loc = new TestNode
                                            {
                                                start = new TestNode
                                                {
                                                    line = 1,
                                                    column = 6
                                                },
                                                end = new TestNode
                                                {
                                                    line = 1,
                                                    column = 10
                                                }
                                            }
                                        },
                                        value = new TestNode
                                        {
                                            type = typeof(LiteralNode),
                                            value = 42,
                                            loc = new TestNode
                                            {
                                                start = new TestNode
                                                {
                                                    line = 1,
                                                    column = 12
                                                },
                                                end = new TestNode
                                                {
                                                    line = 1,
                                                    column = 14
                                                }
                                            }
                                        },
                                        kind = PropertyKind.Init,
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 4
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 16
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 16
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 16
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 16
                    }
                }
            });

            Program.test("x = { \"answer\": 42 }", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(AssignmentExpressionNode),
                            @operator = "=",
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 1
                                    }
                                }
                            },
                            right = new TestNode
                            {
                                type = typeof(ObjectExpressionNode),
                                properties = new TestNode[]
                                {
                                    new TestNode
                                    {
                                        type = typeof(PropertyNode),
                                        key = new TestNode
                                        {
                                            type = typeof(LiteralNode),
                                            value = "answer",
                                            loc = new TestNode
                                            {
                                                start = new TestNode
                                                {
                                                    line = 1,
                                                    column = 6
                                                },
                                                end = new TestNode
                                                {
                                                    line = 1,
                                                    column = 14
                                                }
                                            }
                                        },
                                        value = new TestNode
                                        {
                                            type = typeof(LiteralNode),
                                            value = 42,
                                            loc = new TestNode
                                            {
                                                start = new TestNode
                                                {
                                                    line = 1,
                                                    column = 16
                                                },
                                                end = new TestNode
                                                {
                                                    line = 1,
                                                    column = 18
                                                }
                                            }
                                        },
                                        kind = PropertyKind.Init,
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 4
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 20
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 20
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 20
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 20
                    }
                }
            });

            Program.test("x = { x: 1, x: 2 }", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(AssignmentExpressionNode),
                            @operator = "=",
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 1
                                    }
                                }
                            },
                            right = new TestNode
                            {
                                type = typeof(ObjectExpressionNode),
                                properties = new TestNode[]
                                {
                                    new TestNode
                                    {
                                        type = typeof(PropertyNode),
                                        key = new TestNode
                                        {
                                            type = typeof(IdentifierNode),
                                            name = "x",
                                            loc = new TestNode
                                            {
                                                start = new TestNode
                                                {
                                                    line = 1,
                                                    column = 6
                                                },
                                                end = new TestNode
                                                {
                                                    line = 1,
                                                    column = 7
                                                }
                                            }
                                        },
                                        value = new TestNode
                                        {
                                            type = typeof(LiteralNode),
                                            value = 1,
                                            loc = new TestNode
                                            {
                                                start = new TestNode
                                                {
                                                    line = 1,
                                                    column = 9
                                                },
                                                end = new TestNode
                                                {
                                                    line = 1,
                                                    column = 10
                                                }
                                            }
                                        },
                                        kind = PropertyKind.Init,
                                    },
                                    new TestNode
                                    {
                                        type = typeof(PropertyNode),
                                        key = new TestNode
                                        {
                                            type = typeof(IdentifierNode),
                                            name = "x",
                                            loc = new TestNode
                                            {
                                                start = new TestNode
                                                {
                                                    line = 1,
                                                    column = 12
                                                },
                                                end = new TestNode
                                                {
                                                    line = 1,
                                                    column = 13
                                                }
                                            }
                                        },
                                        value = new TestNode
                                        {
                                            type = typeof(LiteralNode),
                                            value = 2,
                                            loc = new TestNode
                                            {
                                                start = new TestNode
                                                {
                                                    line = 1,
                                                    column = 15
                                                },
                                                end = new TestNode
                                                {
                                                    line = 1,
                                                    column = 16
                                                }
                                            }
                                        },
                                        kind = PropertyKind.Init,
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 4
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 18
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 18
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 18
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 18
                    }
                }
            });

            Program.test("x = { get width() { return m_width } }", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(AssignmentExpressionNode),
                            @operator = "=",
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 1
                                    }
                                }
                            },
                            right = new TestNode
                            {
                                type = typeof(ObjectExpressionNode),
                                properties = new TestNode[]
                                {
                                    new TestNode
                                    {
                                        type = typeof(PropertyNode),
                                        key = new TestNode
                                        {
                                            type = typeof(IdentifierNode),
                                            name = "width",
                                            loc = new TestNode
                                            {
                                                start = new TestNode
                                                {
                                                    line = 1,
                                                    column = 10
                                                },
                                                end = new TestNode
                                                {
                                                    line = 1,
                                                    column = 15
                                                }
                                            }
                                        },
                                        kind = PropertyKind.Get,
                                        value = new TestNode
                                        {
                                            type = typeof(FunctionExpressionNode),
                                            id = null,
                                            @params = new TestNode[0],
                                            body = new TestNode
                                            {
                                                type = typeof(BlockStatementNode),
                                                body = new TestNode[]
                                                {
                                                    new TestNode
                                                    {
                                                        type = typeof(ReturnStatementNode),
                                                        argument = new TestNode
                                                        {
                                                            type = typeof(IdentifierNode),
                                                            name = "m_width",
                                                            loc = new TestNode
                                                            {
                                                                start = new TestNode
                                                                {
                                                                    line = 1,
                                                                    column = 27
                                                                },
                                                                end = new TestNode
                                                                {
                                                                    line = 1,
                                                                    column = 34
                                                                }
                                                            }
                                                        },
                                                        loc = new TestNode
                                                        {
                                                            start = new TestNode
                                                            {
                                                                line = 1,
                                                                column = 20
                                                            },
                                                            end = new TestNode
                                                            {
                                                                line = 1,
                                                                column = 34
                                                            }
                                                        }
                                                    }
                                                },
                                                loc = new TestNode
                                                {
                                                    start = new TestNode
                                                    {
                                                        line = 1,
                                                        column = 18
                                                    },
                                                    end = new TestNode
                                                    {
                                                        line = 1,
                                                        column = 36
                                                    }
                                                }
                                            },
                                            loc = new TestNode
                                            {
                                                start = new TestNode
                                                {
                                                    line = 1,
                                                    column = 15
                                                },
                                                end = new TestNode
                                                {
                                                    line = 1,
                                                    column = 36
                                                }
                                            }
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 4
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 38
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 38
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 38
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 38
                    }
                }
            });

            Program.test("x = { get undef() {} }", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(AssignmentExpressionNode),
                            @operator = "=",
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 1
                                    }
                                }
                            },
                            right = new TestNode
                            {
                                type = typeof(ObjectExpressionNode),
                                properties = new TestNode[]
                                {
                                    new TestNode
                                    {
                                        type = typeof(PropertyNode),
                                        key = new TestNode
                                        {
                                            type = typeof(IdentifierNode),
                                            name = "undef",
                                            loc = new TestNode
                                            {
                                                start = new TestNode
                                                {
                                                    line = 1,
                                                    column = 10
                                                },
                                                end = new TestNode
                                                {
                                                    line = 1,
                                                    column = 15
                                                }
                                            }
                                        },
                                        kind = PropertyKind.Get,
                                        value = new TestNode
                                        {
                                            type = typeof(FunctionExpressionNode),
                                            id = null,
                                            @params = new TestNode[0],
                                            body = new TestNode
                                            {
                                                type = typeof(BlockStatementNode),
                                                body = new TestNode[0],
                                                loc = new TestNode
                                                {
                                                    start = new TestNode
                                                    {
                                                        line = 1,
                                                        column = 18
                                                    },
                                                    end = new TestNode
                                                    {
                                                        line = 1,
                                                        column = 20
                                                    }
                                                }
                                            },
                                            loc = new TestNode
                                            {
                                                start = new TestNode
                                                {
                                                    line = 1,
                                                    column = 15
                                                },
                                                end = new TestNode
                                                {
                                                    line = 1,
                                                    column = 20
                                                }
                                            }
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 4
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 22
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 22
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 22
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 22
                    }
                }
            });

            Program.test("x = { get if() {} }", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(AssignmentExpressionNode),
                            @operator = "=",
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 1
                                    }
                                }
                            },
                            right = new TestNode
                            {
                                type = typeof(ObjectExpressionNode),
                                properties = new TestNode[]
                                {
                                    new TestNode
                                    {
                                        type = typeof(PropertyNode),
                                        key = new TestNode
                                        {
                                            type = typeof(IdentifierNode),
                                            name = "if",
                                            loc = new TestNode
                                            {
                                                start = new TestNode
                                                {
                                                    line = 1,
                                                    column = 10
                                                },
                                                end = new TestNode
                                                {
                                                    line = 1,
                                                    column = 12
                                                }
                                            }
                                        },
                                        kind = PropertyKind.Get,
                                        value = new TestNode
                                        {
                                            type = typeof(FunctionExpressionNode),
                                            id = null,
                                            @params = new TestNode[0],
                                            body = new TestNode
                                            {
                                                type = typeof(BlockStatementNode),
                                                body = new TestNode[0],
                                                loc = new TestNode
                                                {
                                                    start = new TestNode
                                                    {
                                                        line = 1,
                                                        column = 15
                                                    },
                                                    end = new TestNode
                                                    {
                                                        line = 1,
                                                        column = 17
                                                    }
                                                }
                                            },
                                            loc = new TestNode
                                            {
                                                start = new TestNode
                                                {
                                                    line = 1,
                                                    column = 12
                                                },
                                                end = new TestNode
                                                {
                                                    line = 1,
                                                    column = 17
                                                }
                                            }
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 4
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 19
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 19
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 19
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 19
                    }
                }
            });

            Program.test("x = { get true() {} }", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(AssignmentExpressionNode),
                            @operator = "=",
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 1
                                    }
                                }
                            },
                            right = new TestNode
                            {
                                type = typeof(ObjectExpressionNode),
                                properties = new TestNode[]
                                {
                                    new TestNode
                                    {
                                        type = typeof(PropertyNode),
                                        key = new TestNode
                                        {
                                            type = typeof(IdentifierNode),
                                            name = "true",
                                            loc = new TestNode
                                            {
                                                start = new TestNode
                                                {
                                                    line = 1,
                                                    column = 10
                                                },
                                                end = new TestNode
                                                {
                                                    line = 1,
                                                    column = 14
                                                }
                                            }
                                        },
                                        kind = PropertyKind.Get,
                                        value = new TestNode
                                        {
                                            type = typeof(FunctionExpressionNode),
                                            id = null,
                                            @params = new TestNode[0],
                                            body = new TestNode
                                            {
                                                type = typeof(BlockStatementNode),
                                                body = new TestNode[0],
                                                loc = new TestNode
                                                {
                                                    start = new TestNode
                                                    {
                                                        line = 1,
                                                        column = 17
                                                    },
                                                    end = new TestNode
                                                    {
                                                        line = 1,
                                                        column = 19
                                                    }
                                                }
                                            },
                                            loc = new TestNode
                                            {
                                                start = new TestNode
                                                {
                                                    line = 1,
                                                    column = 14
                                                },
                                                end = new TestNode
                                                {
                                                    line = 1,
                                                    column = 19
                                                }
                                            }
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 4
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 21
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 21
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 21
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 21
                    }
                }
            });

            Program.test("x = { get false() {} }", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(AssignmentExpressionNode),
                            @operator = "=",
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 1
                                    }
                                }
                            },
                            right = new TestNode
                            {
                                type = typeof(ObjectExpressionNode),
                                properties = new TestNode[]
                                {
                                    new TestNode
                                    {
                                        type = typeof(PropertyNode),
                                        key = new TestNode
                                        {
                                            type = typeof(IdentifierNode),
                                            name = "false",
                                            loc = new TestNode
                                            {
                                                start = new TestNode
                                                {
                                                    line = 1,
                                                    column = 10
                                                },
                                                end = new TestNode
                                                {
                                                    line = 1,
                                                    column = 15
                                                }
                                            }
                                        },
                                        kind = PropertyKind.Get,
                                        value = new TestNode
                                        {
                                            type = typeof(FunctionExpressionNode),
                                            id = null,
                                            @params = new TestNode[0],
                                            body = new TestNode
                                            {
                                                type = typeof(BlockStatementNode),
                                                body = new TestNode[0],
                                                loc = new TestNode
                                                {
                                                    start = new TestNode
                                                    {
                                                        line = 1,
                                                        column = 18
                                                    },
                                                    end = new TestNode
                                                    {
                                                        line = 1,
                                                        column = 20
                                                    }
                                                }
                                            },
                                            loc = new TestNode
                                            {
                                                start = new TestNode
                                                {
                                                    line = 1,
                                                    column = 15
                                                },
                                                end = new TestNode
                                                {
                                                    line = 1,
                                                    column = 20
                                                }
                                            }
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 4
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 22
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 22
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 22
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 22
                    }
                }
            });

            Program.test("x = { get null() {} }", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(AssignmentExpressionNode),
                            @operator = "=",
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 1
                                    }
                                }
                            },
                            right = new TestNode
                            {
                                type = typeof(ObjectExpressionNode),
                                properties = new TestNode[]
                                {
                                    new TestNode
                                    {
                                        type = typeof(PropertyNode),
                                        key = new TestNode
                                        {
                                            type = typeof(IdentifierNode),
                                            name = "null",
                                            loc = new TestNode
                                            {
                                                start = new TestNode
                                                {
                                                    line = 1,
                                                    column = 10
                                                },
                                                end = new TestNode
                                                {
                                                    line = 1,
                                                    column = 14
                                                }
                                            }
                                        },
                                        kind = PropertyKind.Get,
                                        value = new TestNode
                                        {
                                            type = typeof(FunctionExpressionNode),
                                            id = null,
                                            @params = new TestNode[0],
                                            body = new TestNode
                                            {
                                                type = typeof(BlockStatementNode),
                                                body = new TestNode[0],
                                                loc = new TestNode
                                                {
                                                    start = new TestNode
                                                    {
                                                        line = 1,
                                                        column = 17
                                                    },
                                                    end = new TestNode
                                                    {
                                                        line = 1,
                                                        column = 19
                                                    }
                                                }
                                            },
                                            loc = new TestNode
                                            {
                                                start = new TestNode
                                                {
                                                    line = 1,
                                                    column = 14
                                                },
                                                end = new TestNode
                                                {
                                                    line = 1,
                                                    column = 19
                                                }
                                            }
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 4
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 21
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 21
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 21
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 21
                    }
                }
            });

            Program.test("x = { get \"undef\"() {} }", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(AssignmentExpressionNode),
                            @operator = "=",
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 1
                                    }
                                }
                            },
                            right = new TestNode
                            {
                                type = typeof(ObjectExpressionNode),
                                properties = new TestNode[]
                                {
                                    new TestNode
                                    {
                                        type = typeof(PropertyNode),
                                        key = new TestNode
                                        {
                                            type = typeof(LiteralNode),
                                            value = "undef",
                                            loc = new TestNode
                                            {
                                                start = new TestNode
                                                {
                                                    line = 1,
                                                    column = 10
                                                },
                                                end = new TestNode
                                                {
                                                    line = 1,
                                                    column = 17
                                                }
                                            }
                                        },
                                        kind = PropertyKind.Get,
                                        value = new TestNode
                                        {
                                            type = typeof(FunctionExpressionNode),
                                            id = null,
                                            @params = new TestNode[0],
                                            body = new TestNode
                                            {
                                                type = typeof(BlockStatementNode),
                                                body = new TestNode[0],
                                                loc = new TestNode
                                                {
                                                    start = new TestNode
                                                    {
                                                        line = 1,
                                                        column = 20
                                                    },
                                                    end = new TestNode
                                                    {
                                                        line = 1,
                                                        column = 22
                                                    }
                                                }
                                            },
                                            loc = new TestNode
                                            {
                                                start = new TestNode
                                                {
                                                    line = 1,
                                                    column = 17
                                                },
                                                end = new TestNode
                                                {
                                                    line = 1,
                                                    column = 22
                                                }
                                            }
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 4
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 24
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 24
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 24
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 24
                    }
                }
            });

            Program.test("x = { get 10() {} }", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(AssignmentExpressionNode),
                            @operator = "=",
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 1
                                    }
                                }
                            },
                            right = new TestNode
                            {
                                type = typeof(ObjectExpressionNode),
                                properties = new TestNode[]
                                {
                                    new TestNode
                                    {
                                        type = typeof(PropertyNode),
                                        key = new TestNode
                                        {
                                            type = typeof(LiteralNode),
                                            value = 10,
                                            loc = new TestNode
                                            {
                                                start = new TestNode
                                                {
                                                    line = 1,
                                                    column = 10
                                                },
                                                end = new TestNode
                                                {
                                                    line = 1,
                                                    column = 12
                                                }
                                            }
                                        },
                                        kind = PropertyKind.Get,
                                        value = new TestNode
                                        {
                                            type = typeof(FunctionExpressionNode),
                                            id = null,
                                            @params = new TestNode[0],
                                            body = new TestNode
                                            {
                                                type = typeof(BlockStatementNode),
                                                body = new TestNode[0],
                                                loc = new TestNode
                                                {
                                                    start = new TestNode
                                                    {
                                                        line = 1,
                                                        column = 15
                                                    },
                                                    end = new TestNode
                                                    {
                                                        line = 1,
                                                        column = 17
                                                    }
                                                }
                                            },
                                            loc = new TestNode
                                            {
                                                start = new TestNode
                                                {
                                                    line = 1,
                                                    column = 12
                                                },
                                                end = new TestNode
                                                {
                                                    line = 1,
                                                    column = 17
                                                }
                                            }
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 4
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 19
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 19
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 19
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 19
                    }
                }
            });

            Program.test("x = { set width(w) { m_width = w } }", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(AssignmentExpressionNode),
                            @operator = "=",
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 1
                                    }
                                }
                            },
                            right = new TestNode
                            {
                                type = typeof(ObjectExpressionNode),
                                properties = new TestNode[]
                                {
                                    new TestNode
                                    {
                                        type = typeof(PropertyNode),
                                        key = new TestNode
                                        {
                                            type = typeof(IdentifierNode),
                                            name = "width",
                                            loc = new TestNode
                                            {
                                                start = new TestNode
                                                {
                                                    line = 1,
                                                    column = 10
                                                },
                                                end = new TestNode
                                                {
                                                    line = 1,
                                                    column = 15
                                                }
                                            }
                                        },
                                        kind = PropertyKind.Set,
                                        value = new TestNode
                                        {
                                            type = typeof(FunctionExpressionNode),
                                            id = null,
                                            @params = new TestNode[]
                                            {
                                                new TestNode
                                                {
                                                    type = typeof(IdentifierNode),
                                                    name = "w",
                                                    loc = new TestNode
                                                    {
                                                        start = new TestNode
                                                        {
                                                            line = 1,
                                                            column = 16
                                                        },
                                                        end = new TestNode
                                                        {
                                                            line = 1,
                                                            column = 17
                                                        }
                                                    }
                                                }
                                            },
                                            body = new TestNode
                                            {
                                                type = typeof(BlockStatementNode),
                                                body = new TestNode[]
                                                {
                                                    new TestNode
                                                    {
                                                        type = typeof(ExpressionStatementNode),
                                                        expression = new TestNode
                                                        {
                                                            type = typeof(AssignmentExpressionNode),
                                                            @operator = "=",
                                                            left = new TestNode
                                                            {
                                                                type = typeof(IdentifierNode),
                                                                name = "m_width",
                                                                loc = new TestNode
                                                                {
                                                                    start = new TestNode
                                                                    {
                                                                        line = 1,
                                                                        column = 21
                                                                    },
                                                                    end = new TestNode
                                                                    {
                                                                        line = 1,
                                                                        column = 28
                                                                    }
                                                                }
                                                            },
                                                            right = new TestNode
                                                            {
                                                                type = typeof(IdentifierNode),
                                                                name = "w",
                                                                loc = new TestNode
                                                                {
                                                                    start = new TestNode
                                                                    {
                                                                        line = 1,
                                                                        column = 31
                                                                    },
                                                                    end = new TestNode
                                                                    {
                                                                        line = 1,
                                                                        column = 32
                                                                    }
                                                                }
                                                            },
                                                            loc = new TestNode
                                                            {
                                                                start = new TestNode
                                                                {
                                                                    line = 1,
                                                                    column = 21
                                                                },
                                                                end = new TestNode
                                                                {
                                                                    line = 1,
                                                                    column = 32
                                                                }
                                                            }
                                                        },
                                                        loc = new TestNode
                                                        {
                                                            start = new TestNode
                                                            {
                                                                line = 1,
                                                                column = 21
                                                            },
                                                            end = new TestNode
                                                            {
                                                                line = 1,
                                                                column = 32
                                                            }
                                                        }
                                                    }
                                                },
                                                loc = new TestNode
                                                {
                                                    start = new TestNode
                                                    {
                                                        line = 1,
                                                        column = 19
                                                    },
                                                    end = new TestNode
                                                    {
                                                        line = 1,
                                                        column = 34
                                                    }
                                                }
                                            },
                                            loc = new TestNode
                                            {
                                                start = new TestNode
                                                {
                                                    line = 1,
                                                    column = 15
                                                },
                                                end = new TestNode
                                                {
                                                    line = 1,
                                                    column = 34
                                                }
                                            }
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 4
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 36
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 36
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 36
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 36
                    }
                }
            });

            Program.test("x = { set if(w) { m_if = w } }", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(AssignmentExpressionNode),
                            @operator = "=",
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 1
                                    }
                                }
                            },
                            right = new TestNode
                            {
                                type = typeof(ObjectExpressionNode),
                                properties = new TestNode[]
                                {
                                    new TestNode
                                    {
                                        type = typeof(PropertyNode),
                                        key = new TestNode
                                        {
                                            type = typeof(IdentifierNode),
                                            name = "if",
                                            loc = new TestNode
                                            {
                                                start = new TestNode
                                                {
                                                    line = 1,
                                                    column = 10
                                                },
                                                end = new TestNode
                                                {
                                                    line = 1,
                                                    column = 12
                                                }
                                            }
                                        },
                                        kind = PropertyKind.Set,
                                        value = new TestNode
                                        {
                                            type = typeof(FunctionExpressionNode),
                                            id = null,
                                            @params = new TestNode[]
                                            {
                                                new TestNode
                                                {
                                                    type = typeof(IdentifierNode),
                                                    name = "w",
                                                    loc = new TestNode
                                                    {
                                                        start = new TestNode
                                                        {
                                                            line = 1,
                                                            column = 13
                                                        },
                                                        end = new TestNode
                                                        {
                                                            line = 1,
                                                            column = 14
                                                        }
                                                    }
                                                }
                                            },
                                            body = new TestNode
                                            {
                                                type = typeof(BlockStatementNode),
                                                body = new TestNode[]
                                                {
                                                    new TestNode
                                                    {
                                                        type = typeof(ExpressionStatementNode),
                                                        expression = new TestNode
                                                        {
                                                            type = typeof(AssignmentExpressionNode),
                                                            @operator = "=",
                                                            left = new TestNode
                                                            {
                                                                type = typeof(IdentifierNode),
                                                                name = "m_if",
                                                                loc = new TestNode
                                                                {
                                                                    start = new TestNode
                                                                    {
                                                                        line = 1,
                                                                        column = 18
                                                                    },
                                                                    end = new TestNode
                                                                    {
                                                                        line = 1,
                                                                        column = 22
                                                                    }
                                                                }
                                                            },
                                                            right = new TestNode
                                                            {
                                                                type = typeof(IdentifierNode),
                                                                name = "w",
                                                                loc = new TestNode
                                                                {
                                                                    start = new TestNode
                                                                    {
                                                                        line = 1,
                                                                        column = 25
                                                                    },
                                                                    end = new TestNode
                                                                    {
                                                                        line = 1,
                                                                        column = 26
                                                                    }
                                                                }
                                                            },
                                                            loc = new TestNode
                                                            {
                                                                start = new TestNode
                                                                {
                                                                    line = 1,
                                                                    column = 18
                                                                },
                                                                end = new TestNode
                                                                {
                                                                    line = 1,
                                                                    column = 26
                                                                }
                                                            }
                                                        },
                                                        loc = new TestNode
                                                        {
                                                            start = new TestNode
                                                            {
                                                                line = 1,
                                                                column = 18
                                                            },
                                                            end = new TestNode
                                                            {
                                                                line = 1,
                                                                column = 26
                                                            }
                                                        }
                                                    }
                                                },
                                                loc = new TestNode
                                                {
                                                    start = new TestNode
                                                    {
                                                        line = 1,
                                                        column = 16
                                                    },
                                                    end = new TestNode
                                                    {
                                                        line = 1,
                                                        column = 28
                                                    }
                                                }
                                            },
                                            loc = new TestNode
                                            {
                                                start = new TestNode
                                                {
                                                    line = 1,
                                                    column = 12
                                                },
                                                end = new TestNode
                                                {
                                                    line = 1,
                                                    column = 28
                                                }
                                            }
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 4
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 30
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 30
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 30
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 30
                    }
                }
            });

            Program.test("x = { set true(w) { m_true = w } }", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(AssignmentExpressionNode),
                            @operator = "=",
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 1
                                    }
                                }
                            },
                            right = new TestNode
                            {
                                type = typeof(ObjectExpressionNode),
                                properties = new TestNode[]
                                {
                                    new TestNode
                                    {
                                        type = typeof(PropertyNode),
                                        key = new TestNode
                                        {
                                            type = typeof(IdentifierNode),
                                            name = "true",
                                            loc = new TestNode
                                            {
                                                start = new TestNode
                                                {
                                                    line = 1,
                                                    column = 10
                                                },
                                                end = new TestNode
                                                {
                                                    line = 1,
                                                    column = 14
                                                }
                                            }
                                        },
                                        kind = PropertyKind.Set,
                                        value = new TestNode
                                        {
                                            type = typeof(FunctionExpressionNode),
                                            id = null,
                                            @params = new TestNode[]
                                            {
                                                new TestNode
                                                {
                                                    type = typeof(IdentifierNode),
                                                    name = "w",
                                                    loc = new TestNode
                                                    {
                                                        start = new TestNode
                                                        {
                                                            line = 1,
                                                            column = 15
                                                        },
                                                        end = new TestNode
                                                        {
                                                            line = 1,
                                                            column = 16
                                                        }
                                                    }
                                                }
                                            },
                                            body = new TestNode
                                            {
                                                type = typeof(BlockStatementNode),
                                                body = new TestNode[]
                                                {
                                                    new TestNode
                                                    {
                                                        type = typeof(ExpressionStatementNode),
                                                        expression = new TestNode
                                                        {
                                                            type = typeof(AssignmentExpressionNode),
                                                            @operator = "=",
                                                            left = new TestNode
                                                            {
                                                                type = typeof(IdentifierNode),
                                                                name = "m_true",
                                                                loc = new TestNode
                                                                {
                                                                    start = new TestNode
                                                                    {
                                                                        line = 1,
                                                                        column = 20
                                                                    },
                                                                    end = new TestNode
                                                                    {
                                                                        line = 1,
                                                                        column = 26
                                                                    }
                                                                }
                                                            },
                                                            right = new TestNode
                                                            {
                                                                type = typeof(IdentifierNode),
                                                                name = "w",
                                                                loc = new TestNode
                                                                {
                                                                    start = new TestNode
                                                                    {
                                                                        line = 1,
                                                                        column = 29
                                                                    },
                                                                    end = new TestNode
                                                                    {
                                                                        line = 1,
                                                                        column = 30
                                                                    }
                                                                }
                                                            },
                                                            loc = new TestNode
                                                            {
                                                                start = new TestNode
                                                                {
                                                                    line = 1,
                                                                    column = 20
                                                                },
                                                                end = new TestNode
                                                                {
                                                                    line = 1,
                                                                    column = 30
                                                                }
                                                            }
                                                        },
                                                        loc = new TestNode
                                                        {
                                                            start = new TestNode
                                                            {
                                                                line = 1,
                                                                column = 20
                                                            },
                                                            end = new TestNode
                                                            {
                                                                line = 1,
                                                                column = 30
                                                            }
                                                        }
                                                    }
                                                },
                                                loc = new TestNode
                                                {
                                                    start = new TestNode
                                                    {
                                                        line = 1,
                                                        column = 18
                                                    },
                                                    end = new TestNode
                                                    {
                                                        line = 1,
                                                        column = 32
                                                    }
                                                }
                                            },
                                            loc = new TestNode
                                            {
                                                start = new TestNode
                                                {
                                                    line = 1,
                                                    column = 14
                                                },
                                                end = new TestNode
                                                {
                                                    line = 1,
                                                    column = 32
                                                }
                                            }
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 4
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 34
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 34
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 34
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 34
                    }
                }
            });

            Program.test("x = { set false(w) { m_false = w } }", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(AssignmentExpressionNode),
                            @operator = "=",
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 1
                                    }
                                }
                            },
                            right = new TestNode
                            {
                                type = typeof(ObjectExpressionNode),
                                properties = new TestNode[]
                                {
                                    new TestNode
                                    {
                                        type = typeof(PropertyNode),
                                        key = new TestNode
                                        {
                                            type = typeof(IdentifierNode),
                                            name = "false",
                                            loc = new TestNode
                                            {
                                                start = new TestNode
                                                {
                                                    line = 1,
                                                    column = 10
                                                },
                                                end = new TestNode
                                                {
                                                    line = 1,
                                                    column = 15
                                                }
                                            }
                                        },
                                        kind = PropertyKind.Set,
                                        value = new TestNode
                                        {
                                            type = typeof(FunctionExpressionNode),
                                            id = null,
                                            @params = new TestNode[]
                                            {
                                                new TestNode
                                                {
                                                    type = typeof(IdentifierNode),
                                                    name = "w",
                                                    loc = new TestNode
                                                    {
                                                        start = new TestNode
                                                        {
                                                            line = 1,
                                                            column = 16
                                                        },
                                                        end = new TestNode
                                                        {
                                                            line = 1,
                                                            column = 17
                                                        }
                                                    }
                                                }
                                            },
                                            body = new TestNode
                                            {
                                                type = typeof(BlockStatementNode),
                                                body = new TestNode[]
                                                {
                                                    new TestNode
                                                    {
                                                        type = typeof(ExpressionStatementNode),
                                                        expression = new TestNode
                                                        {
                                                            type = typeof(AssignmentExpressionNode),
                                                            @operator = "=",
                                                            left = new TestNode
                                                            {
                                                                type = typeof(IdentifierNode),
                                                                name = "m_false",
                                                                loc = new TestNode
                                                                {
                                                                    start = new TestNode
                                                                    {
                                                                        line = 1,
                                                                        column = 21
                                                                    },
                                                                    end = new TestNode
                                                                    {
                                                                        line = 1,
                                                                        column = 28
                                                                    }
                                                                }
                                                            },
                                                            right = new TestNode
                                                            {
                                                                type = typeof(IdentifierNode),
                                                                name = "w",
                                                                loc = new TestNode
                                                                {
                                                                    start = new TestNode
                                                                    {
                                                                        line = 1,
                                                                        column = 31
                                                                    },
                                                                    end = new TestNode
                                                                    {
                                                                        line = 1,
                                                                        column = 32
                                                                    }
                                                                }
                                                            },
                                                            loc = new TestNode
                                                            {
                                                                start = new TestNode
                                                                {
                                                                    line = 1,
                                                                    column = 21
                                                                },
                                                                end = new TestNode
                                                                {
                                                                    line = 1,
                                                                    column = 32
                                                                }
                                                            }
                                                        },
                                                        loc = new TestNode
                                                        {
                                                            start = new TestNode
                                                            {
                                                                line = 1,
                                                                column = 21
                                                            },
                                                            end = new TestNode
                                                            {
                                                                line = 1,
                                                                column = 32
                                                            }
                                                        }
                                                    }
                                                },
                                                loc = new TestNode
                                                {
                                                    start = new TestNode
                                                    {
                                                        line = 1,
                                                        column = 19
                                                    },
                                                    end = new TestNode
                                                    {
                                                        line = 1,
                                                        column = 34
                                                    }
                                                }
                                            },
                                            loc = new TestNode
                                            {
                                                start = new TestNode
                                                {
                                                    line = 1,
                                                    column = 15
                                                },
                                                end = new TestNode
                                                {
                                                    line = 1,
                                                    column = 34
                                                }
                                            }
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 4
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 36
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 36
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 36
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 36
                    }
                }
            });

            Program.test("x = { set null(w) { m_null = w } }", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(AssignmentExpressionNode),
                            @operator = "=",
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 1
                                    }
                                }
                            },
                            right = new TestNode
                            {
                                type = typeof(ObjectExpressionNode),
                                properties = new TestNode[]
                                {
                                    new TestNode
                                    {
                                        type = typeof(PropertyNode),
                                        key = new TestNode
                                        {
                                            type = typeof(IdentifierNode),
                                            name = "null",
                                            loc = new TestNode
                                            {
                                                start = new TestNode
                                                {
                                                    line = 1,
                                                    column = 10
                                                },
                                                end = new TestNode
                                                {
                                                    line = 1,
                                                    column = 14
                                                }
                                            }
                                        },
                                        kind = PropertyKind.Set,
                                        value = new TestNode
                                        {
                                            type = typeof(FunctionExpressionNode),
                                            id = null,
                                            @params = new TestNode[]
                                            {
                                                new TestNode
                                                {
                                                    type = typeof(IdentifierNode),
                                                    name = "w",
                                                    loc = new TestNode
                                                    {
                                                        start = new TestNode
                                                        {
                                                            line = 1,
                                                            column = 15
                                                        },
                                                        end = new TestNode
                                                        {
                                                            line = 1,
                                                            column = 16
                                                        }
                                                    }
                                                }
                                            },
                                            body = new TestNode
                                            {
                                                type = typeof(BlockStatementNode),
                                                body = new TestNode[]
                                                {
                                                    new TestNode
                                                    {
                                                        type = typeof(ExpressionStatementNode),
                                                        expression = new TestNode
                                                        {
                                                            type = typeof(AssignmentExpressionNode),
                                                            @operator = "=",
                                                            left = new TestNode
                                                            {
                                                                type = typeof(IdentifierNode),
                                                                name = "m_null",
                                                                loc = new TestNode
                                                                {
                                                                    start = new TestNode
                                                                    {
                                                                        line = 1,
                                                                        column = 20
                                                                    },
                                                                    end = new TestNode
                                                                    {
                                                                        line = 1,
                                                                        column = 26
                                                                    }
                                                                }
                                                            },
                                                            right = new TestNode
                                                            {
                                                                type = typeof(IdentifierNode),
                                                                name = "w",
                                                                loc = new TestNode
                                                                {
                                                                    start = new TestNode
                                                                    {
                                                                        line = 1,
                                                                        column = 29
                                                                    },
                                                                    end = new TestNode
                                                                    {
                                                                        line = 1,
                                                                        column = 30
                                                                    }
                                                                }
                                                            },
                                                            loc = new TestNode
                                                            {
                                                                start = new TestNode
                                                                {
                                                                    line = 1,
                                                                    column = 20
                                                                },
                                                                end = new TestNode
                                                                {
                                                                    line = 1,
                                                                    column = 30
                                                                }
                                                            }
                                                        },
                                                        loc = new TestNode
                                                        {
                                                            start = new TestNode
                                                            {
                                                                line = 1,
                                                                column = 20
                                                            },
                                                            end = new TestNode
                                                            {
                                                                line = 1,
                                                                column = 30
                                                            }
                                                        }
                                                    }
                                                },
                                                loc = new TestNode
                                                {
                                                    start = new TestNode
                                                    {
                                                        line = 1,
                                                        column = 18
                                                    },
                                                    end = new TestNode
                                                    {
                                                        line = 1,
                                                        column = 32
                                                    }
                                                }
                                            },
                                            loc = new TestNode
                                            {
                                                start = new TestNode
                                                {
                                                    line = 1,
                                                    column = 14
                                                },
                                                end = new TestNode
                                                {
                                                    line = 1,
                                                    column = 32
                                                }
                                            }
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 4
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 34
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 34
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 34
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 34
                    }
                }
            });

            Program.test("x = { set \"null\"(w) { m_null = w } }", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(AssignmentExpressionNode),
                            @operator = "=",
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 1
                                    }
                                }
                            },
                            right = new TestNode
                            {
                                type = typeof(ObjectExpressionNode),
                                properties = new TestNode[]
                                {
                                    new TestNode
                                    {
                                        type = typeof(PropertyNode),
                                        key = new TestNode
                                        {
                                            type = typeof(LiteralNode),
                                            value = "null",
                                            loc = new TestNode
                                            {
                                                start = new TestNode
                                                {
                                                    line = 1,
                                                    column = 10
                                                },
                                                end = new TestNode
                                                {
                                                    line = 1,
                                                    column = 16
                                                }
                                            }
                                        },
                                        kind = PropertyKind.Set,
                                        value = new TestNode
                                        {
                                            type = typeof(FunctionExpressionNode),
                                            id = null,
                                            @params = new TestNode[]
                                            {
                                                new TestNode
                                                {
                                                    type = typeof(IdentifierNode),
                                                    name = "w",
                                                    loc = new TestNode
                                                    {
                                                        start = new TestNode
                                                        {
                                                            line = 1,
                                                            column = 17
                                                        },
                                                        end = new TestNode
                                                        {
                                                            line = 1,
                                                            column = 18
                                                        }
                                                    }
                                                }
                                            },
                                            body = new TestNode
                                            {
                                                type = typeof(BlockStatementNode),
                                                body = new TestNode[]
                                                {
                                                    new TestNode
                                                    {
                                                        type = typeof(ExpressionStatementNode),
                                                        expression = new TestNode
                                                        {
                                                            type = typeof(AssignmentExpressionNode),
                                                            @operator = "=",
                                                            left = new TestNode
                                                            {
                                                                type = typeof(IdentifierNode),
                                                                name = "m_null",
                                                                loc = new TestNode
                                                                {
                                                                    start = new TestNode
                                                                    {
                                                                        line = 1,
                                                                        column = 22
                                                                    },
                                                                    end = new TestNode
                                                                    {
                                                                        line = 1,
                                                                        column = 28
                                                                    }
                                                                }
                                                            },
                                                            right = new TestNode
                                                            {
                                                                type = typeof(IdentifierNode),
                                                                name = "w",
                                                                loc = new TestNode
                                                                {
                                                                    start = new TestNode
                                                                    {
                                                                        line = 1,
                                                                        column = 31
                                                                    },
                                                                    end = new TestNode
                                                                    {
                                                                        line = 1,
                                                                        column = 32
                                                                    }
                                                                }
                                                            },
                                                            loc = new TestNode
                                                            {
                                                                start = new TestNode
                                                                {
                                                                    line = 1,
                                                                    column = 22
                                                                },
                                                                end = new TestNode
                                                                {
                                                                    line = 1,
                                                                    column = 32
                                                                }
                                                            }
                                                        },
                                                        loc = new TestNode
                                                        {
                                                            start = new TestNode
                                                            {
                                                                line = 1,
                                                                column = 22
                                                            },
                                                            end = new TestNode
                                                            {
                                                                line = 1,
                                                                column = 32
                                                            }
                                                        }
                                                    }
                                                },
                                                loc = new TestNode
                                                {
                                                    start = new TestNode
                                                    {
                                                        line = 1,
                                                        column = 20
                                                    },
                                                    end = new TestNode
                                                    {
                                                        line = 1,
                                                        column = 34
                                                    }
                                                }
                                            },
                                            loc = new TestNode
                                            {
                                                start = new TestNode
                                                {
                                                    line = 1,
                                                    column = 16
                                                },
                                                end = new TestNode
                                                {
                                                    line = 1,
                                                    column = 34
                                                }
                                            }
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 4
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 36
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 36
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 36
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 36
                    }
                }
            });

            Program.test("x = { set 10(w) { m_null = w } }", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(AssignmentExpressionNode),
                            @operator = "=",
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 1
                                    }
                                }
                            },
                            right = new TestNode
                            {
                                type = typeof(ObjectExpressionNode),
                                properties = new TestNode[]
                                {
                                    new TestNode
                                    {
                                        type = typeof(PropertyNode),
                                        key = new TestNode
                                        {
                                            type = typeof(LiteralNode),
                                            value = 10,
                                            loc = new TestNode
                                            {
                                                start = new TestNode
                                                {
                                                    line = 1,
                                                    column = 10
                                                },
                                                end = new TestNode
                                                {
                                                    line = 1,
                                                    column = 12
                                                }
                                            }
                                        },
                                        kind = PropertyKind.Set,
                                        value = new TestNode
                                        {
                                            type = typeof(FunctionExpressionNode),
                                            id = null,
                                            @params = new TestNode[]
                                            {
                                                new TestNode
                                                {
                                                    type = typeof(IdentifierNode),
                                                    name = "w",
                                                    loc = new TestNode
                                                    {
                                                        start = new TestNode
                                                        {
                                                            line = 1,
                                                            column = 13
                                                        },
                                                        end = new TestNode
                                                        {
                                                            line = 1,
                                                            column = 14
                                                        }
                                                    }
                                                }
                                            },
                                            body = new TestNode
                                            {
                                                type = typeof(BlockStatementNode),
                                                body = new TestNode[]
                                                {
                                                    new TestNode
                                                    {
                                                        type = typeof(ExpressionStatementNode),
                                                        expression = new TestNode
                                                        {
                                                            type = typeof(AssignmentExpressionNode),
                                                            @operator = "=",
                                                            left = new TestNode
                                                            {
                                                                type = typeof(IdentifierNode),
                                                                name = "m_null",
                                                                loc = new TestNode
                                                                {
                                                                    start = new TestNode
                                                                    {
                                                                        line = 1,
                                                                        column = 18
                                                                    },
                                                                    end = new TestNode
                                                                    {
                                                                        line = 1,
                                                                        column = 24
                                                                    }
                                                                }
                                                            },
                                                            right = new TestNode
                                                            {
                                                                type = typeof(IdentifierNode),
                                                                name = "w",
                                                                loc = new TestNode
                                                                {
                                                                    start = new TestNode
                                                                    {
                                                                        line = 1,
                                                                        column = 27
                                                                    },
                                                                    end = new TestNode
                                                                    {
                                                                        line = 1,
                                                                        column = 28
                                                                    }
                                                                }
                                                            },
                                                            loc = new TestNode
                                                            {
                                                                start = new TestNode
                                                                {
                                                                    line = 1,
                                                                    column = 18
                                                                },
                                                                end = new TestNode
                                                                {
                                                                    line = 1,
                                                                    column = 28
                                                                }
                                                            }
                                                        },
                                                        loc = new TestNode
                                                        {
                                                            start = new TestNode
                                                            {
                                                                line = 1,
                                                                column = 18
                                                            },
                                                            end = new TestNode
                                                            {
                                                                line = 1,
                                                                column = 28
                                                            }
                                                        }
                                                    }
                                                },
                                                loc = new TestNode
                                                {
                                                    start = new TestNode
                                                    {
                                                        line = 1,
                                                        column = 16
                                                    },
                                                    end = new TestNode
                                                    {
                                                        line = 1,
                                                        column = 30
                                                    }
                                                }
                                            },
                                            loc = new TestNode
                                            {
                                                start = new TestNode
                                                {
                                                    line = 1,
                                                    column = 12
                                                },
                                                end = new TestNode
                                                {
                                                    line = 1,
                                                    column = 30
                                                }
                                            }
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 4
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 32
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 32
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 32
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 32
                    }
                }
            });

            Program.test("x = { get: 42 }", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(AssignmentExpressionNode),
                            @operator = "=",
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 1
                                    }
                                }
                            },
                            right = new TestNode
                            {
                                type = typeof(ObjectExpressionNode),
                                properties = new TestNode[]
                                {
                                    new TestNode
                                    {
                                        type = typeof(PropertyNode),
                                        key = new TestNode
                                        {
                                            type = typeof(IdentifierNode),
                                            name = "get",
                                            loc = new TestNode
                                            {
                                                start = new TestNode
                                                {
                                                    line = 1,
                                                    column = 6
                                                },
                                                end = new TestNode
                                                {
                                                    line = 1,
                                                    column = 9
                                                }
                                            }
                                        },
                                        value = new TestNode
                                        {
                                            type = typeof(LiteralNode),
                                            value = 42,
                                            loc = new TestNode
                                            {
                                                start = new TestNode
                                                {
                                                    line = 1,
                                                    column = 11
                                                },
                                                end = new TestNode
                                                {
                                                    line = 1,
                                                    column = 13
                                                }
                                            }
                                        },
                                        kind = PropertyKind.Init,
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 4
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 15
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 15
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 15
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 15
                    }
                }
            });

            Program.test("x = { set: 43 }", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(AssignmentExpressionNode),
                            @operator = "=",
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 1
                                    }
                                }
                            },
                            right = new TestNode
                            {
                                type = typeof(ObjectExpressionNode),
                                properties = new TestNode[]
                                {
                                    new TestNode
                                    {
                                        type = typeof(PropertyNode),
                                        key = new TestNode
                                        {
                                            type = typeof(IdentifierNode),
                                            name = "set",
                                            loc = new TestNode
                                            {
                                                start = new TestNode
                                                {
                                                    line = 1,
                                                    column = 6
                                                },
                                                end = new TestNode
                                                {
                                                    line = 1,
                                                    column = 9
                                                }
                                            }
                                        },
                                        value = new TestNode
                                        {
                                            type = typeof(LiteralNode),
                                            value = 43,
                                            loc = new TestNode
                                            {
                                                start = new TestNode
                                                {
                                                    line = 1,
                                                    column = 11
                                                },
                                                end = new TestNode
                                                {
                                                    line = 1,
                                                    column = 13
                                                }
                                            }
                                        },
                                        kind = PropertyKind.Init,
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 4
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 15
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 15
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 15
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 15
                    }
                }
            });

            Program.test("/* block comment */ 42", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(LiteralNode),
                            value = 42,
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 20
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 22
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 20
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 22
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 22
                    }
                }
            });

            Program.test("42 /*The*/ /*Answer*/", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(LiteralNode),
                            value = 42,
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 2
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 2
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 21
                    }
                }
            });

            Program.test("42 /*the*/ /*answer*/", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(LiteralNode),
                            value = 42,
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 2
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 2
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 21
                    }
                }
            });

            Program.test("/* multiline\ncomment\nshould\nbe\nignored */ 42", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(LiteralNode),
                            value = 42,
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 5,
                                    column = 11
                                },
                                end = new TestNode
                                {
                                    line = 5,
                                    column = 13
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 5,
                                column = 11
                            },
                            end = new TestNode
                            {
                                line = 5,
                                column = 13
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 5,
                        column = 13
                    }
                }
            });

            Program.test("/*a\r\nb*/ 42", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(LiteralNode),
                            value = 42,
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 2,
                                    column = 4
                                },
                                end = new TestNode
                                {
                                    line = 2,
                                    column = 6
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 2,
                                column = 4
                            },
                            end = new TestNode
                            {
                                line = 2,
                                column = 6
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 2,
                        column = 6
                    }
                }
            });

            Program.test("/*a\rb*/ 42", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(LiteralNode),
                            value = 42,
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 2,
                                    column = 4
                                },
                                end = new TestNode
                                {
                                    line = 2,
                                    column = 6
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 2,
                                column = 4
                            },
                            end = new TestNode
                            {
                                line = 2,
                                column = 6
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 2,
                        column = 6
                    }
                }
            });

            Program.test("/*a\nb*/ 42", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(LiteralNode),
                            value = 42,
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 2,
                                    column = 4
                                },
                                end = new TestNode
                                {
                                    line = 2,
                                    column = 6
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 2,
                                column = 4
                            },
                            end = new TestNode
                            {
                                line = 2,
                                column = 6
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 2,
                        column = 6
                    }
                }
            });

            Program.test("/*a\nc*/ 42", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(LiteralNode),
                            value = 42,
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 2,
                                    column = 4
                                },
                                end = new TestNode
                                {
                                    line = 2,
                                    column = 6
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 2,
                                column = 4
                            },
                            end = new TestNode
                            {
                                line = 2,
                                column = 6
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 2,
                        column = 6
                    }
                }
            });

            Program.test("// line comment\n42", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(LiteralNode),
                            value = 42,
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 2,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 2,
                                    column = 2
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 2,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 2,
                                column = 2
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 2,
                        column = 2
                    }
                }
            });

            Program.test("42 // line comment", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(LiteralNode),
                            value = 42,
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 2
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 2
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 18
                    }
                }
            });

            Program.test("// Hello, world!\n42", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(LiteralNode),
                            value = 42,
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 2,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 2,
                                    column = 2
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 2,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 2,
                                column = 2
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 2,
                        column = 2
                    }
                }
            });

            Program.test("// Hello, world!\n", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[0],
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 2,
                        column = 0
                    }
                }
            });

            Program.test("// Hallo, world!\n", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[0],
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 2,
                        column = 0
                    }
                }
            });

            Program.test("//\n42", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(LiteralNode),
                            value = 42,
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 2,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 2,
                                    column = 2
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 2,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 2,
                                column = 2
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 2,
                        column = 2
                    }
                }
            });

            Program.test("//", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[0],
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 2
                    }
                }
            });

            Program.test("// ", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[0],
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 3
                    }
                }
            });

            Program.test("/**/42", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(LiteralNode),
                            value = 42,
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 4
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 6
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 4
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 6
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 6
                    }
                }
            });

            Program.test("// Hello, world!\n\n//   Another hello\n42", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(LiteralNode),
                            value = 42,
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 4,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 4,
                                    column = 2
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 4,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 4,
                                column = 2
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 4,
                        column = 2
                    }
                }
            });

            Program.test("if (x) { // Some comment\ndoThat(); }", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(IfStatementNode),
                        test = new TestNode
                        {
                            type = typeof(IdentifierNode),
                            name = "x",
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 4
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 5
                                }
                            }
                        },
                        consequent = new TestNode
                        {
                            type = typeof(BlockStatementNode),
                            body = new TestNode[]
                            {
                                new TestNode
                                {
                                    type = typeof(ExpressionStatementNode),
                                    expression = new TestNode
                                    {
                                        type = typeof(CallExpressionNode),
                                        callee = new TestNode
                                        {
                                            type = typeof(IdentifierNode),
                                            name = "doThat",
                                            loc = new TestNode
                                            {
                                                start = new TestNode
                                                {
                                                    line = 2,
                                                    column = 0
                                                },
                                                end = new TestNode
                                                {
                                                    line = 2,
                                                    column = 6
                                                }
                                            }
                                        },
                                        arguments = new TestNode[0],
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 2,
                                                column = 0
                                            },
                                            end = new TestNode
                                            {
                                                line = 2,
                                                column = 8
                                            }
                                        }
                                    },
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 2,
                                            column = 0
                                        },
                                        end = new TestNode
                                        {
                                            line = 2,
                                            column = 9
                                        }
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 7
                                },
                                end = new TestNode
                                {
                                    line = 2,
                                    column = 11
                                }
                            }
                        },
                        alternate = null,
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 2,
                                column = 11
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 2,
                        column = 11
                    }
                }
            });

            Program.test("switch (answer) { case 42: /* perfect */ bingo() }", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(SwitchStatementNode),
                        discriminant = new TestNode
                        {
                            type = typeof(IdentifierNode),
                            name = "answer",
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 8
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 14
                                }
                            }
                        },
                        cases = new TestNode[]
                        {
                            new TestNode
                            {
                                type = typeof(SwitchCaseNode),
                                consequent = new TestNode[]
                                {
                                    new TestNode
                                    {
                                        type = typeof(ExpressionStatementNode),
                                        expression = new TestNode
                                        {
                                            type = typeof(CallExpressionNode),
                                            callee = new TestNode
                                            {
                                                type = typeof(IdentifierNode),
                                                name = "bingo",
                                                loc = new TestNode
                                                {
                                                    start = new TestNode
                                                    {
                                                        line = 1,
                                                        column = 41
                                                    },
                                                    end = new TestNode
                                                    {
                                                        line = 1,
                                                        column = 46
                                                    }
                                                }
                                            },
                                            arguments = new TestNode[0],
                                            loc = new TestNode
                                            {
                                                start = new TestNode
                                                {
                                                    line = 1,
                                                    column = 41
                                                },
                                                end = new TestNode
                                                {
                                                    line = 1,
                                                    column = 48
                                                }
                                            }
                                        },
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 41
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 48
                                            }
                                        }
                                    }
                                },
                                test = new TestNode
                                {
                                    type = typeof(LiteralNode),
                                    value = 42,
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 23
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 25
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 18
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 48
                                    }
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 50
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 50
                    }
                }
            });

            Program.test("0", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(LiteralNode),
                            value = 0,
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 1
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 1
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 1
                    }
                }
            });

            Program.test("3", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(LiteralNode),
                            value = 3,
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 1
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 1
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 1
                    }
                }
            });

            Program.test("5", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(LiteralNode),
                            value = 5,
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 1
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 1
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 1
                    }
                }
            });

            Program.test("42", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(LiteralNode),
                            value = 42,
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 2
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 2
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 2
                    }
                }
            });

            Program.test(".14", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(LiteralNode),
                            value = 0.14,
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 3
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 3
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 3
                    }
                }
            });

            Program.test("3.14159", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(LiteralNode),
                            value = 3.14159,
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 7
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 7
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 7
                    }
                }
            });

            Program.test("6.02214179e+23", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(LiteralNode),
                            value = 6.02214179e+23,
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 14
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 14
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 14
                    }
                }
            });

            Program.test("1.492417830e-10", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(LiteralNode),
                            value = 1.49241783e-10,
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 15
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 15
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 15
                    }
                }
            });

            Program.test("0x0", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(LiteralNode),
                            value = 0,
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 3
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 3
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 3
                    }
                }
            });

            Program.test("0e+100", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(LiteralNode),
                            value = 0,
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 6
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 6
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 6
                    }
                }
            });

            Program.test("0xabc", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(LiteralNode),
                            value = 2748,
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 5
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 5
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 5
                    }
                }
            });

            Program.test("0xdef", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(LiteralNode),
                            value = 3567,
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 5
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 5
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 5
                    }
                }
            });

            Program.test("0X1A", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(LiteralNode),
                            value = 26,
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 4
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 4
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 4
                    }
                }
            });

            Program.test("0x10", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(LiteralNode),
                            value = 16,
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 4
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 4
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 4
                    }
                }
            });

            Program.test("0x100", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(LiteralNode),
                            value = 256,
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 5
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 5
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 5
                    }
                }
            });

            Program.test("0X04", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(LiteralNode),
                            value = 4,
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 4
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 4
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 4
                    }
                }
            });

            Program.test("02", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(LiteralNode),
                            value = 2,
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 2
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 2
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 2
                    }
                }
            });

            Program.test("012", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(LiteralNode),
                            value = 10,
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 3
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 3
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 3
                    }
                }
            });

            Program.test("0012", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(LiteralNode),
                            value = 10,
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 4
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 4
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 4
                    }
                }
            });

            Program.test("\"Hello\"", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(LiteralNode),
                            value = "Hello",
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 7
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 7
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 7
                    }
                }
            });

            Program.test("\"\\n\\r\\t\\v\\b\\f\\\\\\'\\\"\\0\"", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(LiteralNode),
                            value = "\n\r\t\u000b\b\f\\'\"\u0000",
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 22
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 22
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 22
                    }
                }
            });

            Program.test("\"\\u0061\"", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(LiteralNode),
                            value = "a",
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 8
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 8
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 8
                    }
                }
            });

            Program.test("\"\\x61\"", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(LiteralNode),
                            value = "a",
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 6
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 6
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 6
                    }
                }
            });

            Program.test("\"Hello\\nworld\"", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(LiteralNode),
                            value = "Hello\nworld",
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 14
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 14
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 14
                    }
                }
            });

            Program.test("\"Hello\\\nworld\"", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(LiteralNode),
                            value = "Helloworld",
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 2,
                                    column = 6
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 2,
                                column = 6
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 2,
                        column = 6
                    }
                }
            });

            Program.test("\"Hello\\02World\"", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(LiteralNode),
                            value = "Hello\u0002World",
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 15
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 15
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 15
                    }
                }
            });

            Program.test("\"Hello\\012World\"", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(LiteralNode),
                            value = "Hello\nWorld",
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 16
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 16
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 16
                    }
                }
            });

            Program.test("\"Hello\\122World\"", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(LiteralNode),
                            value = "HelloRWorld",
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 16
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 16
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 16
                    }
                }
            });

            Program.test("\"Hello\\0122World\"", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(LiteralNode),
                            value = "Hello\n2World",
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 17
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 17
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 17
                    }
                }
            });

            Program.test("\"Hello\\312World\"", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(LiteralNode),
                            value = "HelloÊWorld",
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 16
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 16
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 16
                    }
                }
            });

            Program.test("\"Hello\\412World\"", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(LiteralNode),
                            value = "Hello!2World",
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 16
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 16
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 16
                    }
                }
            });

            Program.test("\"Hello\\812World\"", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(LiteralNode),
                            value = "Hello812World",
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 16
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 16
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 16
                    }
                }
            });

            Program.test("\"Hello\\712World\"", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(LiteralNode),
                            value = "Hello92World",
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 16
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 16
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 16
                    }
                }
            });

            Program.test("\"Hello\\0World\"", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(LiteralNode),
                            value = "Hello\u0000World",
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 14
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 14
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 14
                    }
                }
            });

            Program.test("\"Hello\\\r\nworld\"", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(LiteralNode),
                            value = "Helloworld",
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 2,
                                    column = 6
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 2,
                                column = 6
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 2,
                        column = 6
                    }
                }
            });

            Program.test("\"Hello\\1World\"", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(LiteralNode),
                            value = "Hello\u0001World",
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 14
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 14
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 14
                    }
                }
            });

            Program.test("var x = /[a-z]/i", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(VariableDeclarationNode),
                        declarations = new TestNode[]
                        {
                            new TestNode
                            {
                                type = typeof(VariableDeclaratorNode),
                                id = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "x",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 4
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 5
                                        }
                                    }
                                },
                                init = new TestNode
                                {
                                    type = typeof(LiteralNode),
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 8
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 16
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 4
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 16
                                    }
                                }
                            }
                        },
                        kind = PropertyKind.Var,
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 16
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 16
                    }
                }
            });

            Program.test("var x = /[x-z]/i", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(VariableDeclarationNode),
                        declarations = new TestNode[]
                        {
                            new TestNode
                            {
                                type = typeof(VariableDeclaratorNode),
                                id = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "x",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 4
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 5
                                        }
                                    }
                                },
                                init = new TestNode
                                {
                                    type = typeof(LiteralNode),
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 8
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 16
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 4
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 16
                                    }
                                }
                            }
                        },
                        kind = PropertyKind.Var,
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 16
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 16
                    }
                }
            });

            Program.test("var x = /[a-c]/i", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(VariableDeclarationNode),
                        declarations = new TestNode[]
                        {
                            new TestNode
                            {
                                type = typeof(VariableDeclaratorNode),
                                id = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "x",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 4
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 5
                                        }
                                    }
                                },
                                init = new TestNode
                                {
                                    type = typeof(LiteralNode),
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 8
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 16
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 4
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 16
                                    }
                                }
                            }
                        },
                        kind = PropertyKind.Var,
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 16
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 16
                    }
                }
            });

            Program.test("var x = /[P QR]/i", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(VariableDeclarationNode),
                        declarations = new TestNode[]
                        {
                            new TestNode
                            {
                                type = typeof(VariableDeclaratorNode),
                                id = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "x",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 4
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 5
                                        }
                                    }
                                },
                                init = new TestNode
                                {
                                    type = typeof(LiteralNode),
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 8
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 17
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 4
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 17
                                    }
                                }
                            }
                        },
                        kind = PropertyKind.Var,
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 17
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 17
                    }
                }
            });

            Program.test("var x = /foo\\/bar/", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(VariableDeclarationNode),
                        declarations = new TestNode[]
                        {
                            new TestNode
                            {
                                type = typeof(VariableDeclaratorNode),
                                id = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "x",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 4
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 5
                                        }
                                    }
                                },
                                init = new TestNode
                                {
                                    type = typeof(LiteralNode),
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 8
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 18
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 4
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 18
                                    }
                                }
                            }
                        },
                        kind = PropertyKind.Var,
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 18
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 18
                    }
                }
            });

            Program.test("var x = /=([^=\\s])+/g", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(VariableDeclarationNode),
                        declarations = new TestNode[]
                        {
                            new TestNode
                            {
                                type = typeof(VariableDeclaratorNode),
                                id = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "x",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 4
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 5
                                        }
                                    }
                                },
                                init = new TestNode
                                {
                                    type = typeof(LiteralNode),
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 8
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 21
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 4
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 21
                                    }
                                }
                            }
                        },
                        kind = PropertyKind.Var,
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 21
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 21
                    }
                }
            });

            Program.testFail("var x = /[P QR]/\\u0067", "Unexpected token (1:16)");

            Program.test("new Button", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(NewExpressionNode),
                            callee = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "Button",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 4
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 10
                                    }
                                }
                            },
                            arguments = new TestNode[0],
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 10
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 10
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 10
                    }
                }
            });

            Program.test("new Button()", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(NewExpressionNode),
                            callee = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "Button",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 4
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 10
                                    }
                                }
                            },
                            arguments = new TestNode[0],
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 12
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 12
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 12
                    }
                }
            });

            Program.test("new new foo", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(NewExpressionNode),
                            callee = new TestNode
                            {
                                type = typeof(NewExpressionNode),
                                callee = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "foo",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 8
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 11
                                        }
                                    }
                                },
                                arguments = new TestNode[0],
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 4
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 11
                                    }
                                }
                            },
                            arguments = new TestNode[0],
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 11
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 11
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 11
                    }
                }
            });

            Program.test("new new foo()", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(NewExpressionNode),
                            callee = new TestNode
                            {
                                type = typeof(NewExpressionNode),
                                callee = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "foo",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 8
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 11
                                        }
                                    }
                                },
                                arguments = new TestNode[0],
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 4
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 13
                                    }
                                }
                            },
                            arguments = new TestNode[0],
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 13
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 13
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 13
                    }
                }
            });

            Program.test("new foo().bar()", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(CallExpressionNode),
                            callee = new TestNode
                            {
                                type = typeof(MemberExpressionNode),
                                @object = new TestNode
                                {
                                    type = typeof(NewExpressionNode),
                                    callee = new TestNode
                                    {
                                        type = typeof(IdentifierNode),
                                        name = "foo",
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 4
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 7
                                            }
                                        }
                                    },
                                    arguments = new TestNode[0],
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 0
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 9
                                        }
                                    }
                                },
                                property = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "bar",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 10
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 13
                                        }
                                    }
                                },
                                computed = false,
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 13
                                    }
                                }
                            },
                            arguments = new TestNode[0],
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 15
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 15
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 15
                    }
                }
            });

            Program.test("new foo[bar]", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(NewExpressionNode),
                            callee = new TestNode
                            {
                                type = typeof(MemberExpressionNode),
                                @object = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "foo",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 4
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 7
                                        }
                                    }
                                },
                                property = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "bar",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 8
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 11
                                        }
                                    }
                                },
                                computed = true,
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 4
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 12
                                    }
                                }
                            },
                            arguments = new TestNode[0],
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 12
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 12
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 12
                    }
                }
            });

            Program.test("new foo.bar()", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(NewExpressionNode),
                            callee = new TestNode
                            {
                                type = typeof(MemberExpressionNode),
                                @object = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "foo",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 4
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 7
                                        }
                                    }
                                },
                                property = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "bar",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 8
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 11
                                        }
                                    }
                                },
                                computed = false,
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 4
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 11
                                    }
                                }
                            },
                            arguments = new TestNode[0],
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 13
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 13
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 13
                    }
                }
            });

            Program.test("( new foo).bar()", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(CallExpressionNode),
                            callee = new TestNode
                            {
                                type = typeof(MemberExpressionNode),
                                @object = new TestNode
                                {
                                    type = typeof(NewExpressionNode),
                                    callee = new TestNode
                                    {
                                        type = typeof(IdentifierNode),
                                        name = "foo",
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 6
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 9
                                            }
                                        }
                                    },
                                    arguments = new TestNode[0],
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 2
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 9
                                        }
                                    }
                                },
                                property = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "bar",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 11
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 14
                                        }
                                    }
                                },
                                computed = false,
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 14
                                    }
                                }
                            },
                            arguments = new TestNode[0],
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 16
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 16
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 16
                    }
                }
            });

            Program.test("foo(bar, baz)", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(CallExpressionNode),
                            callee = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "foo",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 3
                                    }
                                }
                            },
                            arguments = new TestNode[]
                            {
                                new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "bar",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 4
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 7
                                        }
                                    }
                                },
                                new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "baz",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 9
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 12
                                        }
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 13
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 13
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 13
                    }
                }
            });

            Program.test("(    foo  )()", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(CallExpressionNode),
                            callee = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "foo",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 5
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 8
                                    }
                                }
                            },
                            arguments = new TestNode[0],
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 13
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 13
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 13
                    }
                }
            });

            Program.test("universe.milkyway", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(MemberExpressionNode),
                            @object = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "universe",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 8
                                    }
                                }
                            },
                            property = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "milkyway",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 9
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 17
                                    }
                                }
                            },
                            computed = false,
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 17
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 17
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 17
                    }
                }
            });

            Program.test("universe.milkyway.solarsystem", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(MemberExpressionNode),
                            @object = new TestNode
                            {
                                type = typeof(MemberExpressionNode),
                                @object = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "universe",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 0
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 8
                                        }
                                    }
                                },
                                property = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "milkyway",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 9
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 17
                                        }
                                    }
                                },
                                computed = false,
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 17
                                    }
                                }
                            },
                            property = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "solarsystem",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 18
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 29
                                    }
                                }
                            },
                            computed = false,
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 29
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 29
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 29
                    }
                }
            });

            Program.test("universe.milkyway.solarsystem.Earth", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(MemberExpressionNode),
                            @object = new TestNode
                            {
                                type = typeof(MemberExpressionNode),
                                @object = new TestNode
                                {
                                    type = typeof(MemberExpressionNode),
                                    @object = new TestNode
                                    {
                                        type = typeof(IdentifierNode),
                                        name = "universe",
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 0
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 8
                                            }
                                        }
                                    },
                                    property = new TestNode
                                    {
                                        type = typeof(IdentifierNode),
                                        name = "milkyway",
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 9
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 17
                                            }
                                        }
                                    },
                                    computed = false,
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 0
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 17
                                        }
                                    }
                                },
                                property = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "solarsystem",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 18
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 29
                                        }
                                    }
                                },
                                computed = false,
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 29
                                    }
                                }
                            },
                            property = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "Earth",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 30
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 35
                                    }
                                }
                            },
                            computed = false,
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 35
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 35
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 35
                    }
                }
            });

            Program.test("universe[galaxyName, otherUselessName]", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(MemberExpressionNode),
                            @object = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "universe",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 8
                                    }
                                }
                            },
                            property = new TestNode
                            {
                                type = typeof(SequenceExpressionNode),
                                expressions = new TestNode[]
                                {
                                    new TestNode
                                    {
                                        type = typeof(IdentifierNode),
                                        name = "galaxyName",
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 9
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 19
                                            }
                                        }
                                    },
                                    new TestNode
                                    {
                                        type = typeof(IdentifierNode),
                                        name = "otherUselessName",
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 21
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 37
                                            }
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 9
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 37
                                    }
                                }
                            },
                            computed = true,
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 38
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 38
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 38
                    }
                }
            });

            Program.test("universe[galaxyName]", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(MemberExpressionNode),
                            @object = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "universe",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 8
                                    }
                                }
                            },
                            property = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "galaxyName",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 9
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 19
                                    }
                                }
                            },
                            computed = true,
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 20
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 20
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 20
                    }
                }
            });

            Program.test("universe[42].galaxies", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(MemberExpressionNode),
                            @object = new TestNode
                            {
                                type = typeof(MemberExpressionNode),
                                @object = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "universe",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 0
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 8
                                        }
                                    }
                                },
                                property = new TestNode
                                {
                                    type = typeof(LiteralNode),
                                    value = 42,
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 9
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 11
                                        }
                                    }
                                },
                                computed = true,
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 12
                                    }
                                }
                            },
                            property = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "galaxies",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 13
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 21
                                    }
                                }
                            },
                            computed = false,
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 21
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 21
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 21
                    }
                }
            });

            Program.test("universe(42).galaxies", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(MemberExpressionNode),
                            @object = new TestNode
                            {
                                type = typeof(CallExpressionNode),
                                callee = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "universe",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 0
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 8
                                        }
                                    }
                                },
                                arguments = new TestNode[]
                                {
                                    new TestNode
                                    {
                                        type = typeof(LiteralNode),
                                        value = 42,
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 9
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 11
                                            }
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 12
                                    }
                                }
                            },
                            property = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "galaxies",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 13
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 21
                                    }
                                }
                            },
                            computed = false,
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 21
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 21
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 21
                    }
                }
            });

            Program.test("universe(42).galaxies(14, 3, 77).milkyway", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(MemberExpressionNode),
                            @object = new TestNode
                            {
                                type = typeof(CallExpressionNode),
                                callee = new TestNode
                                {
                                    type = typeof(MemberExpressionNode),
                                    @object = new TestNode
                                    {
                                        type = typeof(CallExpressionNode),
                                        callee = new TestNode
                                        {
                                            type = typeof(IdentifierNode),
                                            name = "universe",
                                            loc = new TestNode
                                            {
                                                start = new TestNode
                                                {
                                                    line = 1,
                                                    column = 0
                                                },
                                                end = new TestNode
                                                {
                                                    line = 1,
                                                    column = 8
                                                }
                                            }
                                        },
                                        arguments = new TestNode[]
                                        {
                                            new TestNode
                                            {
                                                type = typeof(LiteralNode),
                                                value = 42,
                                                loc = new TestNode
                                                {
                                                    start = new TestNode
                                                    {
                                                        line = 1,
                                                        column = 9
                                                    },
                                                    end = new TestNode
                                                    {
                                                        line = 1,
                                                        column = 11
                                                    }
                                                }
                                            }
                                        },
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 0
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 12
                                            }
                                        }
                                    },
                                    property = new TestNode
                                    {
                                        type = typeof(IdentifierNode),
                                        name = "galaxies",
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 13
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 21
                                            }
                                        }
                                    },
                                    computed = false,
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 0
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 21
                                        }
                                    }
                                },
                                arguments = new TestNode[]
                                {
                                    new TestNode
                                    {
                                        type = typeof(LiteralNode),
                                        value = 14,
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 22
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 24
                                            }
                                        }
                                    },
                                    new TestNode
                                    {
                                        type = typeof(LiteralNode),
                                        value = 3,
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 26
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 27
                                            }
                                        }
                                    },
                                    new TestNode
                                    {
                                        type = typeof(LiteralNode),
                                        value = 77,
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 29
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 31
                                            }
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 32
                                    }
                                }
                            },
                            property = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "milkyway",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 33
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 41
                                    }
                                }
                            },
                            computed = false,
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 41
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 41
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 41
                    }
                }
            });

            Program.test("earth.asia.Indonesia.prepareForElection(2014)", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(CallExpressionNode),
                            callee = new TestNode
                            {
                                type = typeof(MemberExpressionNode),
                                @object = new TestNode
                                {
                                    type = typeof(MemberExpressionNode),
                                    @object = new TestNode
                                    {
                                        type = typeof(MemberExpressionNode),
                                        @object = new TestNode
                                        {
                                            type = typeof(IdentifierNode),
                                            name = "earth",
                                            loc = new TestNode
                                            {
                                                start = new TestNode
                                                {
                                                    line = 1,
                                                    column = 0
                                                },
                                                end = new TestNode
                                                {
                                                    line = 1,
                                                    column = 5
                                                }
                                            }
                                        },
                                        property = new TestNode
                                        {
                                            type = typeof(IdentifierNode),
                                            name = "asia",
                                            loc = new TestNode
                                            {
                                                start = new TestNode
                                                {
                                                    line = 1,
                                                    column = 6
                                                },
                                                end = new TestNode
                                                {
                                                    line = 1,
                                                    column = 10
                                                }
                                            }
                                        },
                                        computed = false,
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 0
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 10
                                            }
                                        }
                                    },
                                    property = new TestNode
                                    {
                                        type = typeof(IdentifierNode),
                                        name = "Indonesia",
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 11
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 20
                                            }
                                        }
                                    },
                                    computed = false,
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 0
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 20
                                        }
                                    }
                                },
                                property = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "prepareForElection",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 21
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 39
                                        }
                                    }
                                },
                                computed = false,
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 39
                                    }
                                }
                            },
                            arguments = new TestNode[]
                            {
                                new TestNode
                                {
                                    type = typeof(LiteralNode),
                                    value = 2014,
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 40
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 44
                                        }
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 45
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 45
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 45
                    }
                }
            });

            Program.test("universe.if", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(MemberExpressionNode),
                            @object = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "universe",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 8
                                    }
                                }
                            },
                            property = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "if",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 9
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 11
                                    }
                                }
                            },
                            computed = false,
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 11
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 11
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 11
                    }
                }
            });

            Program.test("universe.true", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(MemberExpressionNode),
                            @object = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "universe",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 8
                                    }
                                }
                            },
                            property = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "true",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 9
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 13
                                    }
                                }
                            },
                            computed = false,
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 13
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 13
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 13
                    }
                }
            });

            Program.test("universe.false", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(MemberExpressionNode),
                            @object = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "universe",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 8
                                    }
                                }
                            },
                            property = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "false",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 9
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 14
                                    }
                                }
                            },
                            computed = false,
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 14
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 14
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 14
                    }
                }
            });

            Program.test("universe.null", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(MemberExpressionNode),
                            @object = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "universe",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 8
                                    }
                                }
                            },
                            property = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "null",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 9
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 13
                                    }
                                }
                            },
                            computed = false,
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 13
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 13
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 13
                    }
                }
            });

            Program.test("x++", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(UpdateExpressionNode),
                            @operator = "++",
                            prefix = false,
                            argument = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 1
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 3
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 3
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 3
                    }
                }
            });

            Program.test("x--", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(UpdateExpressionNode),
                            @operator = "--",
                            prefix = false,
                            argument = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 1
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 3
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 3
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 3
                    }
                }
            });

            Program.test("eval++", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(UpdateExpressionNode),
                            @operator = "++",
                            prefix = false,
                            argument = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "eval",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 4
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 6
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 6
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 6
                    }
                }
            });

            Program.test("eval--", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(UpdateExpressionNode),
                            @operator = "--",
                            prefix = false,
                            argument = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "eval",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 4
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 6
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 6
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 6
                    }
                }
            });

            Program.test("arguments++", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(UpdateExpressionNode),
                            @operator = "++",
                            prefix = false,
                            argument = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "arguments",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 9
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 11
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 11
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 11
                    }
                }
            });

            Program.test("arguments--", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(UpdateExpressionNode),
                            @operator = "--",
                            prefix = false,
                            argument = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "arguments",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 9
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 11
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 11
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 11
                    }
                }
            });

            Program.test("++x", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(UpdateExpressionNode),
                            @operator = "++",
                            prefix = true,
                            argument = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 2
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 3
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 3
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 3
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 3
                    }
                }
            });

            Program.test("--x", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(UpdateExpressionNode),
                            @operator = "--",
                            prefix = true,
                            argument = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 2
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 3
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 3
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 3
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 3
                    }
                }
            });

            Program.test("++eval", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(UpdateExpressionNode),
                            @operator = "++",
                            prefix = true,
                            argument = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "eval",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 2
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 6
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 6
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 6
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 6
                    }
                }
            });

            Program.test("--eval", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(UpdateExpressionNode),
                            @operator = "--",
                            prefix = true,
                            argument = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "eval",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 2
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 6
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 6
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 6
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 6
                    }
                }
            });

            Program.test("++arguments", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(UpdateExpressionNode),
                            @operator = "++",
                            prefix = true,
                            argument = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "arguments",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 2
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 11
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 11
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 11
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 11
                    }
                }
            });

            Program.test("--arguments", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(UpdateExpressionNode),
                            @operator = "--",
                            prefix = true,
                            argument = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "arguments",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 2
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 11
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 11
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 11
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 11
                    }
                }
            });

            Program.test("+x", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(UnaryExpressionNode),
                            @operator = "+",
                            prefix = true,
                            argument = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 1
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 2
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 2
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 2
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 2
                    }
                }
            });

            Program.test("-x", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(UnaryExpressionNode),
                            @operator = "-",
                            prefix = true,
                            argument = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 1
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 2
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 2
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 2
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 2
                    }
                }
            });

            Program.test("~x", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(UnaryExpressionNode),
                            @operator = "~",
                            prefix = true,
                            argument = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 1
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 2
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 2
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 2
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 2
                    }
                }
            });

            Program.test("!x", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(UnaryExpressionNode),
                            @operator = "!",
                            prefix = true,
                            argument = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 1
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 2
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 2
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 2
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 2
                    }
                }
            });

            Program.test("void x", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(UnaryExpressionNode),
                            @operator = "void",
                            prefix = true,
                            argument = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 5
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 6
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 6
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 6
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 6
                    }
                }
            });

            Program.test("delete x", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(UnaryExpressionNode),
                            @operator = "delete",
                            prefix = true,
                            argument = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 7
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 8
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 8
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 8
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 8
                    }
                }
            });

            Program.test("typeof x", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(UnaryExpressionNode),
                            @operator = "typeof",
                            prefix = true,
                            argument = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 7
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 8
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 8
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 8
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 8
                    }
                }
            });

            Program.test("x * y", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(BinaryExpressionNode),
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 1
                                    }
                                }
                            },
                            @operator = "*",
                            right = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "y",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 4
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 5
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 5
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 5
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 5
                    }
                }
            });

            Program.test("x / y", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(BinaryExpressionNode),
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 1
                                    }
                                }
                            },
                            @operator = "/",
                            right = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "y",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 4
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 5
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 5
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 5
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 5
                    }
                }
            });

            Program.test("x % y", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(BinaryExpressionNode),
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 1
                                    }
                                }
                            },
                            @operator = "%",
                            right = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "y",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 4
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 5
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 5
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 5
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 5
                    }
                }
            });

            Program.test("x + y", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(BinaryExpressionNode),
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 1
                                    }
                                }
                            },
                            @operator = "+",
                            right = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "y",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 4
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 5
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 5
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 5
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 5
                    }
                }
            });

            Program.test("x - y", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(BinaryExpressionNode),
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 1
                                    }
                                }
                            },
                            @operator = "-",
                            right = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "y",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 4
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 5
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 5
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 5
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 5
                    }
                }
            });

            Program.test("x << y", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(BinaryExpressionNode),
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 1
                                    }
                                }
                            },
                            @operator = "<<",
                            right = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "y",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 5
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 6
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 6
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 6
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 6
                    }
                }
            });

            Program.test("x >> y", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(BinaryExpressionNode),
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 1
                                    }
                                }
                            },
                            @operator = ">>",
                            right = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "y",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 5
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 6
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 6
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 6
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 6
                    }
                }
            });

            Program.test("x >>> y", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(BinaryExpressionNode),
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 1
                                    }
                                }
                            },
                            @operator = ">>>",
                            right = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "y",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 6
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 7
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 7
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 7
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 7
                    }
                }
            });

            Program.test("x < y", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(BinaryExpressionNode),
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 1
                                    }
                                }
                            },
                            @operator = "<",
                            right = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "y",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 4
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 5
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 5
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 5
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 5
                    }
                }
            });

            Program.test("x > y", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(BinaryExpressionNode),
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 1
                                    }
                                }
                            },
                            @operator = ">",
                            right = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "y",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 4
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 5
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 5
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 5
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 5
                    }
                }
            });

            Program.test("x <= y", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(BinaryExpressionNode),
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 1
                                    }
                                }
                            },
                            @operator = "<=",
                            right = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "y",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 5
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 6
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 6
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 6
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 6
                    }
                }
            });

            Program.test("x >= y", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(BinaryExpressionNode),
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 1
                                    }
                                }
                            },
                            @operator = ">=",
                            right = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "y",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 5
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 6
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 6
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 6
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 6
                    }
                }
            });

            Program.test("x in y", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(BinaryExpressionNode),
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 1
                                    }
                                }
                            },
                            @operator = "in",
                            right = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "y",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 5
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 6
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 6
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 6
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 6
                    }
                }
            });

            Program.test("x instanceof y", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(BinaryExpressionNode),
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 1
                                    }
                                }
                            },
                            @operator = "instanceof",
                            right = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "y",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 13
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 14
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 14
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 14
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 14
                    }
                }
            });

            Program.test("x < y < z", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(BinaryExpressionNode),
                            left = new TestNode
                            {
                                type = typeof(BinaryExpressionNode),
                                left = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "x",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 0
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 1
                                        }
                                    }
                                },
                                @operator = "<",
                                right = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "y",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 4
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 5
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 5
                                    }
                                }
                            },
                            @operator = "<",
                            right = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "z",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 8
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 9
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 9
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 9
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 9
                    }
                }
            });

            Program.test("x == y", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(BinaryExpressionNode),
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 1
                                    }
                                }
                            },
                            @operator = "==",
                            right = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "y",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 5
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 6
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 6
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 6
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 6
                    }
                }
            });

            Program.test("x != y", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(BinaryExpressionNode),
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 1
                                    }
                                }
                            },
                            @operator = "!=",
                            right = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "y",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 5
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 6
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 6
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 6
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 6
                    }
                }
            });

            Program.test("x === y", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(BinaryExpressionNode),
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 1
                                    }
                                }
                            },
                            @operator = "===",
                            right = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "y",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 6
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 7
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 7
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 7
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 7
                    }
                }
            });

            Program.test("x !== y", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(BinaryExpressionNode),
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 1
                                    }
                                }
                            },
                            @operator = "!==",
                            right = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "y",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 6
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 7
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 7
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 7
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 7
                    }
                }
            });

            Program.test("x & y", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(BinaryExpressionNode),
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 1
                                    }
                                }
                            },
                            @operator = "&",
                            right = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "y",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 4
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 5
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 5
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 5
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 5
                    }
                }
            });

            Program.test("x ^ y", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(BinaryExpressionNode),
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 1
                                    }
                                }
                            },
                            @operator = "^",
                            right = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "y",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 4
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 5
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 5
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 5
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 5
                    }
                }
            });

            Program.test("x | y", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(BinaryExpressionNode),
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 1
                                    }
                                }
                            },
                            @operator = "|",
                            right = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "y",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 4
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 5
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 5
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 5
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 5
                    }
                }
            });

            Program.test("x + y + z", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(BinaryExpressionNode),
                            left = new TestNode
                            {
                                type = typeof(BinaryExpressionNode),
                                left = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "x",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 0
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 1
                                        }
                                    }
                                },
                                @operator = "+",
                                right = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "y",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 4
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 5
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 5
                                    }
                                }
                            },
                            @operator = "+",
                            right = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "z",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 8
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 9
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 9
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 9
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 9
                    }
                }
            });

            Program.test("x - y + z", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(BinaryExpressionNode),
                            left = new TestNode
                            {
                                type = typeof(BinaryExpressionNode),
                                left = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "x",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 0
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 1
                                        }
                                    }
                                },
                                @operator = "-",
                                right = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "y",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 4
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 5
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 5
                                    }
                                }
                            },
                            @operator = "+",
                            right = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "z",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 8
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 9
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 9
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 9
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 9
                    }
                }
            });

            Program.test("x + y - z", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(BinaryExpressionNode),
                            left = new TestNode
                            {
                                type = typeof(BinaryExpressionNode),
                                left = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "x",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 0
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 1
                                        }
                                    }
                                },
                                @operator = "+",
                                right = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "y",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 4
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 5
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 5
                                    }
                                }
                            },
                            @operator = "-",
                            right = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "z",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 8
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 9
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 9
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 9
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 9
                    }
                }
            });

            Program.test("x - y - z", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(BinaryExpressionNode),
                            left = new TestNode
                            {
                                type = typeof(BinaryExpressionNode),
                                left = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "x",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 0
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 1
                                        }
                                    }
                                },
                                @operator = "-",
                                right = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "y",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 4
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 5
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 5
                                    }
                                }
                            },
                            @operator = "-",
                            right = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "z",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 8
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 9
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 9
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 9
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 9
                    }
                }
            });

            Program.test("x + y * z", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(BinaryExpressionNode),
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 1
                                    }
                                }
                            },
                            @operator = "+",
                            right = new TestNode
                            {
                                type = typeof(BinaryExpressionNode),
                                left = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "y",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 4
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 5
                                        }
                                    }
                                },
                                @operator = "*",
                                right = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "z",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 8
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 9
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 4
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 9
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 9
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 9
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 9
                    }
                }
            });

            Program.test("x + y / z", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(BinaryExpressionNode),
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 1
                                    }
                                }
                            },
                            @operator = "+",
                            right = new TestNode
                            {
                                type = typeof(BinaryExpressionNode),
                                left = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "y",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 4
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 5
                                        }
                                    }
                                },
                                @operator = "/",
                                right = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "z",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 8
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 9
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 4
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 9
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 9
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 9
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 9
                    }
                }
            });

            Program.test("x - y % z", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(BinaryExpressionNode),
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 1
                                    }
                                }
                            },
                            @operator = "-",
                            right = new TestNode
                            {
                                type = typeof(BinaryExpressionNode),
                                left = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "y",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 4
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 5
                                        }
                                    }
                                },
                                @operator = "%",
                                right = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "z",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 8
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 9
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 4
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 9
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 9
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 9
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 9
                    }
                }
            });

            Program.test("x * y * z", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(BinaryExpressionNode),
                            left = new TestNode
                            {
                                type = typeof(BinaryExpressionNode),
                                left = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "x",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 0
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 1
                                        }
                                    }
                                },
                                @operator = "*",
                                right = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "y",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 4
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 5
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 5
                                    }
                                }
                            },
                            @operator = "*",
                            right = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "z",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 8
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 9
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 9
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 9
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 9
                    }
                }
            });

            Program.test("x * y / z", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(BinaryExpressionNode),
                            left = new TestNode
                            {
                                type = typeof(BinaryExpressionNode),
                                left = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "x",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 0
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 1
                                        }
                                    }
                                },
                                @operator = "*",
                                right = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "y",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 4
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 5
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 5
                                    }
                                }
                            },
                            @operator = "/",
                            right = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "z",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 8
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 9
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 9
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 9
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 9
                    }
                }
            });

            Program.test("x * y % z", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(BinaryExpressionNode),
                            left = new TestNode
                            {
                                type = typeof(BinaryExpressionNode),
                                left = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "x",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 0
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 1
                                        }
                                    }
                                },
                                @operator = "*",
                                right = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "y",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 4
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 5
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 5
                                    }
                                }
                            },
                            @operator = "%",
                            right = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "z",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 8
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 9
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 9
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 9
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 9
                    }
                }
            });

            Program.test("x % y * z", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(BinaryExpressionNode),
                            left = new TestNode
                            {
                                type = typeof(BinaryExpressionNode),
                                left = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "x",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 0
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 1
                                        }
                                    }
                                },
                                @operator = "%",
                                right = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "y",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 4
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 5
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 5
                                    }
                                }
                            },
                            @operator = "*",
                            right = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "z",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 8
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 9
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 9
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 9
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 9
                    }
                }
            });

            Program.test("x << y << z", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(BinaryExpressionNode),
                            left = new TestNode
                            {
                                type = typeof(BinaryExpressionNode),
                                left = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "x",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 0
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 1
                                        }
                                    }
                                },
                                @operator = "<<",
                                right = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "y",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 5
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 6
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 6
                                    }
                                }
                            },
                            @operator = "<<",
                            right = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "z",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 10
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 11
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 11
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 11
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 11
                    }
                }
            });

            Program.test("x | y | z", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(BinaryExpressionNode),
                            left = new TestNode
                            {
                                type = typeof(BinaryExpressionNode),
                                left = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "x",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 0
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 1
                                        }
                                    }
                                },
                                @operator = "|",
                                right = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "y",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 4
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 5
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 5
                                    }
                                }
                            },
                            @operator = "|",
                            right = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "z",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 8
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 9
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 9
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 9
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 9
                    }
                }
            });

            Program.test("x & y & z", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(BinaryExpressionNode),
                            left = new TestNode
                            {
                                type = typeof(BinaryExpressionNode),
                                left = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "x",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 0
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 1
                                        }
                                    }
                                },
                                @operator = "&",
                                right = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "y",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 4
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 5
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 5
                                    }
                                }
                            },
                            @operator = "&",
                            right = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "z",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 8
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 9
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 9
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 9
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 9
                    }
                }
            });

            Program.test("x ^ y ^ z", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(BinaryExpressionNode),
                            left = new TestNode
                            {
                                type = typeof(BinaryExpressionNode),
                                left = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "x",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 0
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 1
                                        }
                                    }
                                },
                                @operator = "^",
                                right = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "y",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 4
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 5
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 5
                                    }
                                }
                            },
                            @operator = "^",
                            right = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "z",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 8
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 9
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 9
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 9
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 9
                    }
                }
            });

            Program.test("x & y | z", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(BinaryExpressionNode),
                            left = new TestNode
                            {
                                type = typeof(BinaryExpressionNode),
                                left = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "x",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 0
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 1
                                        }
                                    }
                                },
                                @operator = "&",
                                right = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "y",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 4
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 5
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 5
                                    }
                                }
                            },
                            @operator = "|",
                            right = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "z",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 8
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 9
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 9
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 9
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 9
                    }
                }
            });

            Program.test("x | y ^ z", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(BinaryExpressionNode),
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 1
                                    }
                                }
                            },
                            @operator = "|",
                            right = new TestNode
                            {
                                type = typeof(BinaryExpressionNode),
                                left = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "y",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 4
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 5
                                        }
                                    }
                                },
                                @operator = "^",
                                right = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "z",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 8
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 9
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 4
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 9
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 9
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 9
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 9
                    }
                }
            });

            Program.test("x | y & z", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(BinaryExpressionNode),
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 1
                                    }
                                }
                            },
                            @operator = "|",
                            right = new TestNode
                            {
                                type = typeof(BinaryExpressionNode),
                                left = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "y",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 4
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 5
                                        }
                                    }
                                },
                                @operator = "&",
                                right = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "z",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 8
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 9
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 4
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 9
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 9
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 9
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 9
                    }
                }
            });

            Program.test("x || y", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(LogicalExpressionNode),
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 1
                                    }
                                }
                            },
                            @operator = "||",
                            right = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "y",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 5
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 6
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 6
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 6
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 6
                    }
                }
            });

            Program.test("x && y", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(LogicalExpressionNode),
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 1
                                    }
                                }
                            },
                            @operator = "&&",
                            right = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "y",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 5
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 6
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 6
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 6
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 6
                    }
                }
            });

            Program.test("x || y || z", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(LogicalExpressionNode),
                            left = new TestNode
                            {
                                type = typeof(LogicalExpressionNode),
                                left = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "x",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 0
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 1
                                        }
                                    }
                                },
                                @operator = "||",
                                right = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "y",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 5
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 6
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 6
                                    }
                                }
                            },
                            @operator = "||",
                            right = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "z",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 10
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 11
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 11
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 11
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 11
                    }
                }
            });

            Program.test("x && y && z", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(LogicalExpressionNode),
                            left = new TestNode
                            {
                                type = typeof(LogicalExpressionNode),
                                left = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "x",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 0
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 1
                                        }
                                    }
                                },
                                @operator = "&&",
                                right = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "y",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 5
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 6
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 6
                                    }
                                }
                            },
                            @operator = "&&",
                            right = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "z",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 10
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 11
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 11
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 11
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 11
                    }
                }
            });

            Program.test("x || y && z", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(LogicalExpressionNode),
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 1
                                    }
                                }
                            },
                            @operator = "||",
                            right = new TestNode
                            {
                                type = typeof(LogicalExpressionNode),
                                left = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "y",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 5
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 6
                                        }
                                    }
                                },
                                @operator = "&&",
                                right = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "z",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 10
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 11
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 5
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 11
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 11
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 11
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 11
                    }
                }
            });

            Program.test("x || y ^ z", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(LogicalExpressionNode),
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 1
                                    }
                                }
                            },
                            @operator = "||",
                            right = new TestNode
                            {
                                type = typeof(BinaryExpressionNode),
                                left = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "y",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 5
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 6
                                        }
                                    }
                                },
                                @operator = "^",
                                right = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "z",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 9
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 10
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 5
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 10
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 10
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 10
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 10
                    }
                }
            });

            Program.test("y ? 1 : 2", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(ConditionalExpressionNode),
                            test = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "y",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 1
                                    }
                                }
                            },
                            consequent = new TestNode
                            {
                                type = typeof(LiteralNode),
                                value = 1,
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 4
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 5
                                    }
                                }
                            },
                            alternate = new TestNode
                            {
                                type = typeof(LiteralNode),
                                value = 2,
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 8
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 9
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 9
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 9
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 9
                    }
                }
            });

            Program.test("x && y ? 1 : 2", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(ConditionalExpressionNode),
                            test = new TestNode
                            {
                                type = typeof(LogicalExpressionNode),
                                left = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "x",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 0
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 1
                                        }
                                    }
                                },
                                @operator = "&&",
                                right = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "y",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 5
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 6
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 6
                                    }
                                }
                            },
                            consequent = new TestNode
                            {
                                type = typeof(LiteralNode),
                                value = 1,
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 9
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 10
                                    }
                                }
                            },
                            alternate = new TestNode
                            {
                                type = typeof(LiteralNode),
                                value = 2,
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 13
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 14
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 14
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 14
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 14
                    }
                }
            });

            Program.test("x = 42", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(AssignmentExpressionNode),
                            @operator = "=",
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 1
                                    }
                                }
                            },
                            right = new TestNode
                            {
                                type = typeof(LiteralNode),
                                value = 42,
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 4
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 6
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 6
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 6
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 6
                    }
                }
            });

            Program.test("eval = 42", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(AssignmentExpressionNode),
                            @operator = "=",
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "eval",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 4
                                    }
                                }
                            },
                            right = new TestNode
                            {
                                type = typeof(LiteralNode),
                                value = 42,
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 7
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 9
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 9
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 9
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 9
                    }
                }
            });

            Program.test("arguments = 42", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(AssignmentExpressionNode),
                            @operator = "=",
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "arguments",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 9
                                    }
                                }
                            },
                            right = new TestNode
                            {
                                type = typeof(LiteralNode),
                                value = 42,
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 12
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 14
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 14
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 14
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 14
                    }
                }
            });

            Program.test("x *= 42", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(AssignmentExpressionNode),
                            @operator = "*=",
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 1
                                    }
                                }
                            },
                            right = new TestNode
                            {
                                type = typeof(LiteralNode),
                                value = 42,
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 5
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 7
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 7
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 7
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 7
                    }
                }
            });

            Program.test("x /= 42", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(AssignmentExpressionNode),
                            @operator = "/=",
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 1
                                    }
                                }
                            },
                            right = new TestNode
                            {
                                type = typeof(LiteralNode),
                                value = 42,
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 5
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 7
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 7
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 7
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 7
                    }
                }
            });

            Program.test("x %= 42", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(AssignmentExpressionNode),
                            @operator = "%=",
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 1
                                    }
                                }
                            },
                            right = new TestNode
                            {
                                type = typeof(LiteralNode),
                                value = 42,
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 5
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 7
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 7
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 7
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 7
                    }
                }
            });

            Program.test("x += 42", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(AssignmentExpressionNode),
                            @operator = "+=",
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 1
                                    }
                                }
                            },
                            right = new TestNode
                            {
                                type = typeof(LiteralNode),
                                value = 42,
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 5
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 7
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 7
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 7
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 7
                    }
                }
            });

            Program.test("x -= 42", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(AssignmentExpressionNode),
                            @operator = "-=",
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 1
                                    }
                                }
                            },
                            right = new TestNode
                            {
                                type = typeof(LiteralNode),
                                value = 42,
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 5
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 7
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 7
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 7
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 7
                    }
                }
            });

            Program.test("x <<= 42", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(AssignmentExpressionNode),
                            @operator = "<<=",
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 1
                                    }
                                }
                            },
                            right = new TestNode
                            {
                                type = typeof(LiteralNode),
                                value = 42,
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 6
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 8
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 8
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 8
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 8
                    }
                }
            });

            Program.test("x >>= 42", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(AssignmentExpressionNode),
                            @operator = ">>=",
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 1
                                    }
                                }
                            },
                            right = new TestNode
                            {
                                type = typeof(LiteralNode),
                                value = 42,
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 6
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 8
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 8
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 8
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 8
                    }
                }
            });

            Program.test("x >>>= 42", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(AssignmentExpressionNode),
                            @operator = ">>>=",
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 1
                                    }
                                }
                            },
                            right = new TestNode
                            {
                                type = typeof(LiteralNode),
                                value = 42,
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 7
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 9
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 9
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 9
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 9
                    }
                }
            });

            Program.test("x &= 42", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(AssignmentExpressionNode),
                            @operator = "&=",
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 1
                                    }
                                }
                            },
                            right = new TestNode
                            {
                                type = typeof(LiteralNode),
                                value = 42,
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 5
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 7
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 7
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 7
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 7
                    }
                }
            });

            Program.test("x ^= 42", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(AssignmentExpressionNode),
                            @operator = "^=",
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 1
                                    }
                                }
                            },
                            right = new TestNode
                            {
                                type = typeof(LiteralNode),
                                value = 42,
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 5
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 7
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 7
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 7
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 7
                    }
                }
            });

            Program.test("x |= 42", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(AssignmentExpressionNode),
                            @operator = "|=",
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 1
                                    }
                                }
                            },
                            right = new TestNode
                            {
                                type = typeof(LiteralNode),
                                value = 42,
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 5
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 7
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 7
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 7
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 7
                    }
                }
            });

            Program.test("{ foo }", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(BlockStatementNode),
                        body = new TestNode[]
                        {
                            new TestNode
                            {
                                type = typeof(ExpressionStatementNode),
                                expression = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "foo",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 2
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 5
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 2
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 5
                                    }
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 7
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 7
                    }
                }
            });

            Program.test("{ doThis(); doThat(); }", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(BlockStatementNode),
                        body = new TestNode[]
                        {
                            new TestNode
                            {
                                type = typeof(ExpressionStatementNode),
                                expression = new TestNode
                                {
                                    type = typeof(CallExpressionNode),
                                    callee = new TestNode
                                    {
                                        type = typeof(IdentifierNode),
                                        name = "doThis",
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 2
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 8
                                            }
                                        }
                                    },
                                    arguments = new TestNode[0],
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 2
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 10
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 2
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 11
                                    }
                                }
                            },
                            new TestNode
                            {
                                type = typeof(ExpressionStatementNode),
                                expression = new TestNode
                                {
                                    type = typeof(CallExpressionNode),
                                    callee = new TestNode
                                    {
                                        type = typeof(IdentifierNode),
                                        name = "doThat",
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 12
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 18
                                            }
                                        }
                                    },
                                    arguments = new TestNode[0],
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 12
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 20
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 12
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 21
                                    }
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 23
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 23
                    }
                }
            });

            Program.test("{}", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(BlockStatementNode),
                        body = new TestNode[0],
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 2
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 2
                    }
                }
            });

            Program.test("var x", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(VariableDeclarationNode),
                        declarations = new TestNode[]
                        {
                            new TestNode
                            {
                                type = typeof(VariableDeclaratorNode),
                                id = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "x",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 4
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 5
                                        }
                                    }
                                },
                                init = null,
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 4
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 5
                                    }
                                }
                            }
                        },
                        kind = PropertyKind.Var,
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 5
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 5
                    }
                }
            });

            Program.test("var await", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(VariableDeclarationNode),
                        declarations = new TestNode[]
                        {
                            new TestNode
                            {
                                type = typeof(VariableDeclaratorNode),
                                id = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "await",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 4
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 9
                                        }
                                    }
                                },
                                init = null,
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 4
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 9
                                    }
                                }
                            }
                        },
                        kind = PropertyKind.Var,
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 9
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 9
                    }
                }
            });

            Program.test("var x, y;", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(VariableDeclarationNode),
                        declarations = new TestNode[]
                        {
                            new TestNode
                            {
                                type = typeof(VariableDeclaratorNode),
                                id = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "x",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 4
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 5
                                        }
                                    }
                                },
                                init = null,
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 4
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 5
                                    }
                                }
                            },
                            new TestNode
                            {
                                type = typeof(VariableDeclaratorNode),
                                id = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "y",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 7
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 8
                                        }
                                    }
                                },
                                init = null,
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 7
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 8
                                    }
                                }
                            }
                        },
                        kind = PropertyKind.Var,
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 9
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 9
                    }
                }
            });

            Program.test("var x = 42", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(VariableDeclarationNode),
                        declarations = new TestNode[]
                        {
                            new TestNode
                            {
                                type = typeof(VariableDeclaratorNode),
                                id = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "x",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 4
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 5
                                        }
                                    }
                                },
                                init = new TestNode
                                {
                                    type = typeof(LiteralNode),
                                    value = 42,
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 8
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 10
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 4
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 10
                                    }
                                }
                            }
                        },
                        kind = PropertyKind.Var,
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 10
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 10
                    }
                }
            });

            Program.test("var eval = 42, arguments = 42", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(VariableDeclarationNode),
                        declarations = new TestNode[]
                        {
                            new TestNode
                            {
                                type = typeof(VariableDeclaratorNode),
                                id = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "eval",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 4
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 8
                                        }
                                    }
                                },
                                init = new TestNode
                                {
                                    type = typeof(LiteralNode),
                                    value = 42,
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 11
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 13
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 4
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 13
                                    }
                                }
                            },
                            new TestNode
                            {
                                type = typeof(VariableDeclaratorNode),
                                id = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "arguments",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 15
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 24
                                        }
                                    }
                                },
                                init = new TestNode
                                {
                                    type = typeof(LiteralNode),
                                    value = 42,
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 27
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 29
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 15
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 29
                                    }
                                }
                            }
                        },
                        kind = PropertyKind.Var,
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 29
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 29
                    }
                }
            });

            Program.test("var x = 14, y = 3, z = 1977", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(VariableDeclarationNode),
                        declarations = new TestNode[]
                        {
                            new TestNode
                            {
                                type = typeof(VariableDeclaratorNode),
                                id = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "x",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 4
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 5
                                        }
                                    }
                                },
                                init = new TestNode
                                {
                                    type = typeof(LiteralNode),
                                    value = 14,
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 8
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 10
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 4
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 10
                                    }
                                }
                            },
                            new TestNode
                            {
                                type = typeof(VariableDeclaratorNode),
                                id = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "y",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 12
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 13
                                        }
                                    }
                                },
                                init = new TestNode
                                {
                                    type = typeof(LiteralNode),
                                    value = 3,
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 16
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 17
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 12
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 17
                                    }
                                }
                            },
                            new TestNode
                            {
                                type = typeof(VariableDeclaratorNode),
                                id = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "z",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 19
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 20
                                        }
                                    }
                                },
                                init = new TestNode
                                {
                                    type = typeof(LiteralNode),
                                    value = 1977,
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 23
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 27
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 19
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 27
                                    }
                                }
                            }
                        },
                        kind = PropertyKind.Var,
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 27
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 27
                    }
                }
            });

            Program.test("var implements, interface, package", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(VariableDeclarationNode),
                        declarations = new TestNode[]
                        {
                            new TestNode
                            {
                                type = typeof(VariableDeclaratorNode),
                                id = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "implements",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 4
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 14
                                        }
                                    }
                                },
                                init = null,
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 4
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 14
                                    }
                                }
                            },
                            new TestNode
                            {
                                type = typeof(VariableDeclaratorNode),
                                id = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "interface",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 16
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 25
                                        }
                                    }
                                },
                                init = null,
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 16
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 25
                                    }
                                }
                            },
                            new TestNode
                            {
                                type = typeof(VariableDeclaratorNode),
                                id = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "package",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 27
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 34
                                        }
                                    }
                                },
                                init = null,
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 27
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 34
                                    }
                                }
                            }
                        },
                        kind = PropertyKind.Var,
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 34
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 34
                    }
                }
            });

            Program.test("var private, protected, public, static", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(VariableDeclarationNode),
                        declarations = new TestNode[]
                        {
                            new TestNode
                            {
                                type = typeof(VariableDeclaratorNode),
                                id = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "private",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 4
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 11
                                        }
                                    }
                                },
                                init = null,
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 4
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 11
                                    }
                                }
                            },
                            new TestNode
                            {
                                type = typeof(VariableDeclaratorNode),
                                id = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "protected",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 13
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 22
                                        }
                                    }
                                },
                                init = null,
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 13
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 22
                                    }
                                }
                            },
                            new TestNode
                            {
                                type = typeof(VariableDeclaratorNode),
                                id = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "public",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 24
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 30
                                        }
                                    }
                                },
                                init = null,
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 24
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 30
                                    }
                                }
                            },
                            new TestNode
                            {
                                type = typeof(VariableDeclaratorNode),
                                id = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "static",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 32
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 38
                                        }
                                    }
                                },
                                init = null,
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 32
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 38
                                    }
                                }
                            }
                        },
                        kind = PropertyKind.Var,
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 38
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 38
                    }
                }
            });

            Program.test(";", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(EmptyStatementNode),
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 1
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 1
                    }
                }
            });

            Program.test("x", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(IdentifierNode),
                            name = "x",
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 1
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 1
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 1
                    }
                }
            });

            Program.test("x, y", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(SequenceExpressionNode),
                            expressions = new TestNode[]
                            {
                                new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "x",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 0
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 1
                                        }
                                    }
                                },
                                new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "y",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 3
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 4
                                        }
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 4
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 4
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 4
                    }
                }
            });

            Program.test("\\u0061", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(IdentifierNode),
                            name = "a",
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 6
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 6
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 6
                    }
                }
            });

            Program.test("a\\u0061", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(IdentifierNode),
                            name = "aa",
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 7
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 7
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 7
                    }
                }
            });

            Program.test("if (morning) goodMorning()", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(IfStatementNode),
                        test = new TestNode
                        {
                            type = typeof(IdentifierNode),
                            name = "morning",
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 4
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 11
                                }
                            }
                        },
                        consequent = new TestNode
                        {
                            type = typeof(ExpressionStatementNode),
                            expression = new TestNode
                            {
                                type = typeof(CallExpressionNode),
                                callee = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "goodMorning",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 13
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 24
                                        }
                                    }
                                },
                                arguments = new TestNode[0],
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 13
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 26
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 13
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 26
                                }
                            }
                        },
                        alternate = null,
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 26
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 26
                    }
                }
            });

            Program.test("if (morning) (function(){})", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(IfStatementNode),
                        test = new TestNode
                        {
                            type = typeof(IdentifierNode),
                            name = "morning",
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 4
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 11
                                }
                            }
                        },
                        consequent = new TestNode
                        {
                            type = typeof(ExpressionStatementNode),
                            expression = new TestNode
                            {
                                type = typeof(FunctionExpressionNode),
                                id = null,
                                @params = new TestNode[0],
                                body = new TestNode
                                {
                                    type = typeof(BlockStatementNode),
                                    body = new TestNode[0],
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 24
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 26
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 14
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 26
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 13
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 27
                                }
                            }
                        },
                        alternate = null,
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 27
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 27
                    }
                }
            });

            Program.test("if (morning) var x = 0;", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(IfStatementNode),
                        test = new TestNode
                        {
                            type = typeof(IdentifierNode),
                            name = "morning",
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 4
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 11
                                }
                            }
                        },
                        consequent = new TestNode
                        {
                            type = typeof(VariableDeclarationNode),
                            declarations = new TestNode[]
                            {
                                new TestNode
                                {
                                    type = typeof(VariableDeclaratorNode),
                                    id = new TestNode
                                    {
                                        type = typeof(IdentifierNode),
                                        name = "x",
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 17
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 18
                                            }
                                        }
                                    },
                                    init = new TestNode
                                    {
                                        type = typeof(LiteralNode),
                                        value = 0,
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 21
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 22
                                            }
                                        }
                                    },
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 17
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 22
                                        }
                                    }
                                }
                            },
                            kind = PropertyKind.Var,
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 13
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 23
                                }
                            }
                        },
                        alternate = null,
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 23
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 23
                    }
                }
            });

            Program.test("if (morning) function a(){}", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(IfStatementNode),
                        test = new TestNode
                        {
                            type = typeof(IdentifierNode),
                            name = "morning",
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 4
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 11
                                }
                            }
                        },
                        consequent = new TestNode
                        {
                            type = typeof(FunctionDeclarationNode),
                            id = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "a",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 22
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 23
                                    }
                                }
                            },
                            @params = new TestNode[0],
                            body = new TestNode
                            {
                                type = typeof(BlockStatementNode),
                                body = new TestNode[0],
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 25
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 27
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 13
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 27
                                }
                            }
                        },
                        alternate = null,
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 27
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 27
                    }
                }
            });

            Program.test("if (morning) goodMorning(); else goodDay()", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(IfStatementNode),
                        test = new TestNode
                        {
                            type = typeof(IdentifierNode),
                            name = "morning",
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 4
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 11
                                }
                            }
                        },
                        consequent = new TestNode
                        {
                            type = typeof(ExpressionStatementNode),
                            expression = new TestNode
                            {
                                type = typeof(CallExpressionNode),
                                callee = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "goodMorning",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 13
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 24
                                        }
                                    }
                                },
                                arguments = new TestNode[0],
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 13
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 26
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 13
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 27
                                }
                            }
                        },
                        alternate = new TestNode
                        {
                            type = typeof(ExpressionStatementNode),
                            expression = new TestNode
                            {
                                type = typeof(CallExpressionNode),
                                callee = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "goodDay",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 33
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 40
                                        }
                                    }
                                },
                                arguments = new TestNode[0],
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 33
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 42
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 33
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 42
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 42
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 42
                    }
                }
            });

            Program.test("do keep(); while (true)", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(DoWhileStatementNode),
                        body = new TestNode
                        {
                            type = typeof(ExpressionStatementNode),
                            expression = new TestNode
                            {
                                type = typeof(CallExpressionNode),
                                callee = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "keep",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 3
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 7
                                        }
                                    }
                                },
                                arguments = new TestNode[0],
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 3
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 9
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 3
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 10
                                }
                            }
                        },
                        test = new TestNode
                        {
                            type = typeof(LiteralNode),
                            value = true,
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 18
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 22
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 23
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 23
                    }
                }
            });

            Program.test("do keep(); while (true);", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(DoWhileStatementNode),
                        body = new TestNode
                        {
                            type = typeof(ExpressionStatementNode),
                            expression = new TestNode
                            {
                                type = typeof(CallExpressionNode),
                                callee = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "keep",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 3
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 7
                                        }
                                    }
                                },
                                arguments = new TestNode[0],
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 3
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 9
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 3
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 10
                                }
                            }
                        },
                        test = new TestNode
                        {
                            type = typeof(LiteralNode),
                            value = true,
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 18
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 22
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 24
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 24
                    }
                }
            });

            Program.test("do { x++; y--; } while (x < 10)", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(DoWhileStatementNode),
                        body = new TestNode
                        {
                            type = typeof(BlockStatementNode),
                            body = new TestNode[]
                            {
                                new TestNode
                                {
                                    type = typeof(ExpressionStatementNode),
                                    expression = new TestNode
                                    {
                                        type = typeof(UpdateExpressionNode),
                                        @operator = "++",
                                        prefix = false,
                                        argument = new TestNode
                                        {
                                            type = typeof(IdentifierNode),
                                            name = "x",
                                            loc = new TestNode
                                            {
                                                start = new TestNode
                                                {
                                                    line = 1,
                                                    column = 5
                                                },
                                                end = new TestNode
                                                {
                                                    line = 1,
                                                    column = 6
                                                }
                                            }
                                        },
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 5
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 8
                                            }
                                        }
                                    },
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 5
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 9
                                        }
                                    }
                                },
                                new TestNode
                                {
                                    type = typeof(ExpressionStatementNode),
                                    expression = new TestNode
                                    {
                                        type = typeof(UpdateExpressionNode),
                                        @operator = "--",
                                        prefix = false,
                                        argument = new TestNode
                                        {
                                            type = typeof(IdentifierNode),
                                            name = "y",
                                            loc = new TestNode
                                            {
                                                start = new TestNode
                                                {
                                                    line = 1,
                                                    column = 10
                                                },
                                                end = new TestNode
                                                {
                                                    line = 1,
                                                    column = 11
                                                }
                                            }
                                        },
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 10
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 13
                                            }
                                        }
                                    },
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 10
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 14
                                        }
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 3
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 16
                                }
                            }
                        },
                        test = new TestNode
                        {
                            type = typeof(BinaryExpressionNode),
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 24
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 25
                                    }
                                }
                            },
                            @operator = "<",
                            right = new TestNode
                            {
                                type = typeof(LiteralNode),
                                value = 10,
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 28
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 30
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 24
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 30
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 31
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 31
                    }
                }
            });

            Program.test("{ do { } while (false);false }", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(BlockStatementNode),
                        body = new TestNode[]
                        {
                            new TestNode
                            {
                                type = typeof(DoWhileStatementNode),
                                body = new TestNode
                                {
                                    type = typeof(BlockStatementNode),
                                    body = new TestNode[0],
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 5
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 8
                                        }
                                    }
                                },
                                test = new TestNode
                                {
                                    type = typeof(LiteralNode),
                                    value = false,
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 16
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 21
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 2
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 23
                                    }
                                }
                            },
                            new TestNode
                            {
                                type = typeof(ExpressionStatementNode),
                                expression = new TestNode
                                {
                                    type = typeof(LiteralNode),
                                    value = false,
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 23
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 28
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 23
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 28
                                    }
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 30
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 30
                    }
                }
            });

            Program.test("while (true) doSomething()", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(WhileStatementNode),
                        test = new TestNode
                        {
                            type = typeof(LiteralNode),
                            value = true,
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 7
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 11
                                }
                            }
                        },
                        body = new TestNode
                        {
                            type = typeof(ExpressionStatementNode),
                            expression = new TestNode
                            {
                                type = typeof(CallExpressionNode),
                                callee = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "doSomething",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 13
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 24
                                        }
                                    }
                                },
                                arguments = new TestNode[0],
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 13
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 26
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 13
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 26
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 26
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 26
                    }
                }
            });

            Program.test("while (x < 10) { x++; y--; }", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(WhileStatementNode),
                        test = new TestNode
                        {
                            type = typeof(BinaryExpressionNode),
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 7
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 8
                                    }
                                }
                            },
                            @operator = "<",
                            right = new TestNode
                            {
                                type = typeof(LiteralNode),
                                value = 10,
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 11
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 13
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 7
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 13
                                }
                            }
                        },
                        body = new TestNode
                        {
                            type = typeof(BlockStatementNode),
                            body = new TestNode[]
                            {
                                new TestNode
                                {
                                    type = typeof(ExpressionStatementNode),
                                    expression = new TestNode
                                    {
                                        type = typeof(UpdateExpressionNode),
                                        @operator = "++",
                                        prefix = false,
                                        argument = new TestNode
                                        {
                                            type = typeof(IdentifierNode),
                                            name = "x",
                                            loc = new TestNode
                                            {
                                                start = new TestNode
                                                {
                                                    line = 1,
                                                    column = 17
                                                },
                                                end = new TestNode
                                                {
                                                    line = 1,
                                                    column = 18
                                                }
                                            }
                                        },
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 17
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 20
                                            }
                                        }
                                    },
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 17
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 21
                                        }
                                    }
                                },
                                new TestNode
                                {
                                    type = typeof(ExpressionStatementNode),
                                    expression = new TestNode
                                    {
                                        type = typeof(UpdateExpressionNode),
                                        @operator = "--",
                                        prefix = false,
                                        argument = new TestNode
                                        {
                                            type = typeof(IdentifierNode),
                                            name = "y",
                                            loc = new TestNode
                                            {
                                                start = new TestNode
                                                {
                                                    line = 1,
                                                    column = 22
                                                },
                                                end = new TestNode
                                                {
                                                    line = 1,
                                                    column = 23
                                                }
                                            }
                                        },
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 22
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 25
                                            }
                                        }
                                    },
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 22
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 26
                                        }
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 15
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 28
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 28
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 28
                    }
                }
            });

            Program.test("for(;;);", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ForStatementNode),
                        init = null,
                        test = null,
                        update = null,
                        body = new TestNode
                        {
                            type = typeof(EmptyStatementNode),
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 7
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 8
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 8
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 8
                    }
                }
            });

            Program.test("for(;;){}", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ForStatementNode),
                        init = null,
                        test = null,
                        update = null,
                        body = new TestNode
                        {
                            type = typeof(BlockStatementNode),
                            body = new TestNode[0],
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 7
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 9
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 9
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 9
                    }
                }
            });

            Program.test("for(x = 0;;);", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ForStatementNode),
                        init = new TestNode
                        {
                            type = typeof(AssignmentExpressionNode),
                            @operator = "=",
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 4
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 5
                                    }
                                }
                            },
                            right = new TestNode
                            {
                                type = typeof(LiteralNode),
                                value = 0,
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 8
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 9
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 4
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 9
                                }
                            }
                        },
                        test = null,
                        update = null,
                        body = new TestNode
                        {
                            type = typeof(EmptyStatementNode),
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 12
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 13
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 13
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 13
                    }
                }
            });

            Program.test("for(var x = 0;;);", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ForStatementNode),
                        init = new TestNode
                        {
                            type = typeof(VariableDeclarationNode),
                            declarations = new TestNode[]
                            {
                                new TestNode
                                {
                                    type = typeof(VariableDeclaratorNode),
                                    id = new TestNode
                                    {
                                        type = typeof(IdentifierNode),
                                        name = "x",
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 8
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 9
                                            }
                                        }
                                    },
                                    init = new TestNode
                                    {
                                        type = typeof(LiteralNode),
                                        value = 0,
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 12
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 13
                                            }
                                        }
                                    },
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 8
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 13
                                        }
                                    }
                                }
                            },
                            kind = PropertyKind.Var,
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 4
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 13
                                }
                            }
                        },
                        test = null,
                        update = null,
                        body = new TestNode
                        {
                            type = typeof(EmptyStatementNode),
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 16
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 17
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 17
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 17
                    }
                }
            });

            Program.test("for(var x = 0, y = 1;;);", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ForStatementNode),
                        init = new TestNode
                        {
                            type = typeof(VariableDeclarationNode),
                            declarations = new TestNode[]
                            {
                                new TestNode
                                {
                                    type = typeof(VariableDeclaratorNode),
                                    id = new TestNode
                                    {
                                        type = typeof(IdentifierNode),
                                        name = "x",
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 8
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 9
                                            }
                                        }
                                    },
                                    init = new TestNode
                                    {
                                        type = typeof(LiteralNode),
                                        value = 0,
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 12
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 13
                                            }
                                        }
                                    },
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 8
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 13
                                        }
                                    }
                                },
                                new TestNode
                                {
                                    type = typeof(VariableDeclaratorNode),
                                    id = new TestNode
                                    {
                                        type = typeof(IdentifierNode),
                                        name = "y",
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 15
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 16
                                            }
                                        }
                                    },
                                    init = new TestNode
                                    {
                                        type = typeof(LiteralNode),
                                        value = 1,
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 19
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 20
                                            }
                                        }
                                    },
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 15
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 20
                                        }
                                    }
                                }
                            },
                            kind = PropertyKind.Var,
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 4
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 20
                                }
                            }
                        },
                        test = null,
                        update = null,
                        body = new TestNode
                        {
                            type = typeof(EmptyStatementNode),
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 23
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 24
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 24
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 24
                    }
                }
            });

            Program.test("for(x = 0; x < 42;);", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ForStatementNode),
                        init = new TestNode
                        {
                            type = typeof(AssignmentExpressionNode),
                            @operator = "=",
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 4
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 5
                                    }
                                }
                            },
                            right = new TestNode
                            {
                                type = typeof(LiteralNode),
                                value = 0,
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 8
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 9
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 4
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 9
                                }
                            }
                        },
                        test = new TestNode
                        {
                            type = typeof(BinaryExpressionNode),
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 11
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 12
                                    }
                                }
                            },
                            @operator = "<",
                            right = new TestNode
                            {
                                type = typeof(LiteralNode),
                                value = 42,
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 15
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 17
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 11
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 17
                                }
                            }
                        },
                        update = null,
                        body = new TestNode
                        {
                            type = typeof(EmptyStatementNode),
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 19
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 20
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 20
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 20
                    }
                }
            });

            Program.test("for(x = 0; x < 42; x++);", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ForStatementNode),
                        init = new TestNode
                        {
                            type = typeof(AssignmentExpressionNode),
                            @operator = "=",
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 4
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 5
                                    }
                                }
                            },
                            right = new TestNode
                            {
                                type = typeof(LiteralNode),
                                value = 0,
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 8
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 9
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 4
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 9
                                }
                            }
                        },
                        test = new TestNode
                        {
                            type = typeof(BinaryExpressionNode),
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 11
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 12
                                    }
                                }
                            },
                            @operator = "<",
                            right = new TestNode
                            {
                                type = typeof(LiteralNode),
                                value = 42,
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 15
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 17
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 11
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 17
                                }
                            }
                        },
                        update = new TestNode
                        {
                            type = typeof(UpdateExpressionNode),
                            @operator = "++",
                            prefix = false,
                            argument = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 19
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 20
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 19
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 22
                                }
                            }
                        },
                        body = new TestNode
                        {
                            type = typeof(EmptyStatementNode),
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 23
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 24
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 24
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 24
                    }
                }
            });

            Program.test("for(x = 0; x < 42; x++) process(x);", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ForStatementNode),
                        init = new TestNode
                        {
                            type = typeof(AssignmentExpressionNode),
                            @operator = "=",
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 4
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 5
                                    }
                                }
                            },
                            right = new TestNode
                            {
                                type = typeof(LiteralNode),
                                value = 0,
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 8
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 9
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 4
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 9
                                }
                            }
                        },
                        test = new TestNode
                        {
                            type = typeof(BinaryExpressionNode),
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 11
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 12
                                    }
                                }
                            },
                            @operator = "<",
                            right = new TestNode
                            {
                                type = typeof(LiteralNode),
                                value = 42,
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 15
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 17
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 11
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 17
                                }
                            }
                        },
                        update = new TestNode
                        {
                            type = typeof(UpdateExpressionNode),
                            @operator = "++",
                            prefix = false,
                            argument = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 19
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 20
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 19
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 22
                                }
                            }
                        },
                        body = new TestNode
                        {
                            type = typeof(ExpressionStatementNode),
                            expression = new TestNode
                            {
                                type = typeof(CallExpressionNode),
                                callee = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "process",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 24
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 31
                                        }
                                    }
                                },
                                arguments = new TestNode[]
                                {
                                    new TestNode
                                    {
                                        type = typeof(IdentifierNode),
                                        name = "x",
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 32
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 33
                                            }
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 24
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 34
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 24
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 35
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 35
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 35
                    }
                }
            });

            Program.test("for(x in list) process(x);", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ForInStatementNode),
                        left = new TestNode
                        {
                            type = typeof(IdentifierNode),
                            name = "x",
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 4
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 5
                                }
                            }
                        },
                        right = new TestNode
                        {
                            type = typeof(IdentifierNode),
                            name = "list",
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 9
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 13
                                }
                            }
                        },
                        body = new TestNode
                        {
                            type = typeof(ExpressionStatementNode),
                            expression = new TestNode
                            {
                                type = typeof(CallExpressionNode),
                                callee = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "process",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 15
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 22
                                        }
                                    }
                                },
                                arguments = new TestNode[]
                                {
                                    new TestNode
                                    {
                                        type = typeof(IdentifierNode),
                                        name = "x",
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 23
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 24
                                            }
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 15
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 25
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 15
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 26
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 26
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 26
                    }
                }
            });

            Program.test("for (var x in list) process(x);", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ForInStatementNode),
                        left = new TestNode
                        {
                            type = typeof(VariableDeclarationNode),
                            declarations = new TestNode[]
                            {
                                new TestNode
                                {
                                    type = typeof(VariableDeclaratorNode),
                                    id = new TestNode
                                    {
                                        type = typeof(IdentifierNode),
                                        name = "x",
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 9
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 10
                                            }
                                        }
                                    },
                                    init = null,
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 9
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 10
                                        }
                                    }
                                }
                            },
                            kind = PropertyKind.Var,
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 5
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 10
                                }
                            }
                        },
                        right = new TestNode
                        {
                            type = typeof(IdentifierNode),
                            name = "list",
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 14
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 18
                                }
                            }
                        },
                        body = new TestNode
                        {
                            type = typeof(ExpressionStatementNode),
                            expression = new TestNode
                            {
                                type = typeof(CallExpressionNode),
                                callee = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "process",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 20
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 27
                                        }
                                    }
                                },
                                arguments = new TestNode[]
                                {
                                    new TestNode
                                    {
                                        type = typeof(IdentifierNode),
                                        name = "x",
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 28
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 29
                                            }
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 20
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 30
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 20
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 31
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 31
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 31
                    }
                }
            });
            Program.testFail("var x; for (x = 0 in list) process(x);", "Invalid assignment in for-in loop head (1:12)", new TestOptions
            {
                ecmaVersion = 6
            });
            Program.testFail("'use strict'; for (var x = 0 in list) process(x);", "Invalid assignment in for-in loop head (1:19)");
            Program.testFail("for (var [x] = 0 in list) process(x);", "Invalid assignment in for-in loop head (1:5)", new TestOptions
            {
                ecmaVersion = 6
            });

            Program.test("for (var x = 42 in list) process(x);", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ForInStatementNode),
                        left = new TestNode
                        {
                            type = typeof(VariableDeclarationNode),
                            declarations = new TestNode[]
                            {
                                new TestNode
                                {
                                    type = typeof(VariableDeclaratorNode),
                                    id = new TestNode
                                    {
                                        type = typeof(IdentifierNode),
                                        name = "x",
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 9
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 10
                                            }
                                        }
                                    },
                                    init = new TestNode
                                    {
                                        type = typeof(LiteralNode),
                                        value = 42,
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 13
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 15
                                            }
                                        }
                                    },
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 9
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 15
                                        }
                                    }
                                }
                            },
                            kind = PropertyKind.Var,
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 5
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 15
                                }
                            }
                        },
                        right = new TestNode
                        {
                            type = typeof(IdentifierNode),
                            name = "list",
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 19
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 23
                                }
                            }
                        },
                        body = new TestNode
                        {
                            type = typeof(ExpressionStatementNode),
                            expression = new TestNode
                            {
                                type = typeof(CallExpressionNode),
                                callee = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "process",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 25
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 32
                                        }
                                    }
                                },
                                arguments = new TestNode[]
                                {
                                    new TestNode
                                    {
                                        type = typeof(IdentifierNode),
                                        name = "x",
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 33
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 34
                                            }
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 25
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 35
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 25
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 36
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 36
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 36
                    }
                }
            });

            Program.test("for (var i = function() { return 10 in [] } in list) process(x);", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ForInStatementNode),
                        left = new TestNode
                        {
                            type = typeof(VariableDeclarationNode),
                            declarations = new TestNode[]
                            {
                                new TestNode
                                {
                                    type = typeof(VariableDeclaratorNode),
                                    id = new TestNode
                                    {
                                        type = typeof(IdentifierNode),
                                        name = "i",
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 9
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 10
                                            }
                                        }
                                    },
                                    init = new TestNode
                                    {
                                        type = typeof(FunctionExpressionNode),
                                        id = null,
                                        @params = new TestNode[0],
                                        body = new TestNode
                                        {
                                            type = typeof(BlockStatementNode),
                                            body = new TestNode[]
                                            {
                                                new TestNode
                                                {
                                                    type = typeof(ReturnStatementNode),
                                                    argument = new TestNode
                                                    {
                                                        type = typeof(BinaryExpressionNode),
                                                        left = new TestNode
                                                        {
                                                            type = typeof(LiteralNode),
                                                            value = 10,
                                                            loc = new TestNode
                                                            {
                                                                start = new TestNode
                                                                {
                                                                    line = 1,
                                                                    column = 33
                                                                },
                                                                end = new TestNode
                                                                {
                                                                    line = 1,
                                                                    column = 35
                                                                }
                                                            }
                                                        },
                                                        @operator = "in",
                                                        right = new TestNode
                                                        {
                                                            type = typeof(ArrayExpressionNode),
                                                            elements = new TestNode[0],
                                                            loc = new TestNode
                                                            {
                                                                start = new TestNode
                                                                {
                                                                    line = 1,
                                                                    column = 39
                                                                },
                                                                end = new TestNode
                                                                {
                                                                    line = 1,
                                                                    column = 41
                                                                }
                                                            }
                                                        },
                                                        loc = new TestNode
                                                        {
                                                            start = new TestNode
                                                            {
                                                                line = 1,
                                                                column = 33
                                                            },
                                                            end = new TestNode
                                                            {
                                                                line = 1,
                                                                column = 41
                                                            }
                                                        }
                                                    },
                                                    loc = new TestNode
                                                    {
                                                        start = new TestNode
                                                        {
                                                            line = 1,
                                                            column = 26
                                                        },
                                                        end = new TestNode
                                                        {
                                                            line = 1,
                                                            column = 41
                                                        }
                                                    }
                                                }
                                            },
                                            loc = new TestNode
                                            {
                                                start = new TestNode
                                                {
                                                    line = 1,
                                                    column = 24
                                                },
                                                end = new TestNode
                                                {
                                                    line = 1,
                                                    column = 43
                                                }
                                            }
                                        },
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 13
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 43
                                            }
                                        }
                                    },
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 9
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 43
                                        }
                                    }
                                }
                            },
                            kind = PropertyKind.Var,
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 5
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 43
                                }
                            }
                        },
                        right = new TestNode
                        {
                            type = typeof(IdentifierNode),
                            name = "list",
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 47
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 51
                                }
                            }
                        },
                        body = new TestNode
                        {
                            type = typeof(ExpressionStatementNode),
                            expression = new TestNode
                            {
                                type = typeof(CallExpressionNode),
                                callee = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "process",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 53
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 60
                                        }
                                    }
                                },
                                arguments = new TestNode[]
                                {
                                    new TestNode
                                    {
                                        type = typeof(IdentifierNode),
                                        name = "x",
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 61
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 62
                                            }
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 53
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 63
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 53
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 64
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 64
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 64
                    }
                }
            });

            Program.test("while (true) { continue; }", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(WhileStatementNode),
                        test = new TestNode
                        {
                            type = typeof(LiteralNode),
                            value = true,
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 7
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 11
                                }
                            }
                        },
                        body = new TestNode
                        {
                            type = typeof(BlockStatementNode),
                            body = new TestNode[]
                            {
                                new TestNode
                                {
                                    type = typeof(ContinueStatementNode),
                                    label = null,
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 15
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 24
                                        }
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 13
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 26
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 26
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 26
                    }
                }
            });

            Program.test("while (true) { continue }", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(WhileStatementNode),
                        test = new TestNode
                        {
                            type = typeof(LiteralNode),
                            value = true,
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 7
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 11
                                }
                            }
                        },
                        body = new TestNode
                        {
                            type = typeof(BlockStatementNode),
                            body = new TestNode[]
                            {
                                new TestNode
                                {
                                    type = typeof(ContinueStatementNode),
                                    label = null,
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 15
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 23
                                        }
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 13
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 25
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 25
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 25
                    }
                }
            });

            Program.test("done: while (true) { continue done }", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(LabelledStatementNode),
                        body = new TestNode
                        {
                            type = typeof(WhileStatementNode),
                            test = new TestNode
                            {
                                type = typeof(LiteralNode),
                                value = true,
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 13
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 17
                                    }
                                }
                            },
                            body = new TestNode
                            {
                                type = typeof(BlockStatementNode),
                                body = new TestNode[]
                                {
                                    new TestNode
                                    {
                                        type = typeof(ContinueStatementNode),
                                        label = new TestNode
                                        {
                                            type = typeof(IdentifierNode),
                                            name = "done",
                                            loc = new TestNode
                                            {
                                                start = new TestNode
                                                {
                                                    line = 1,
                                                    column = 30
                                                },
                                                end = new TestNode
                                                {
                                                    line = 1,
                                                    column = 34
                                                }
                                            }
                                        },
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 21
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 34
                                            }
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 19
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 36
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 6
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 36
                                }
                            }
                        },
                        label = new TestNode
                        {
                            type = typeof(IdentifierNode),
                            name = "done",
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 4
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 36
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 36
                    }
                }
            });

            Program.test("done: while (true) { continue done; }", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(LabelledStatementNode),
                        body = new TestNode
                        {
                            type = typeof(WhileStatementNode),
                            test = new TestNode
                            {
                                type = typeof(LiteralNode),
                                value = true,
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 13
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 17
                                    }
                                }
                            },
                            body = new TestNode
                            {
                                type = typeof(BlockStatementNode),
                                body = new TestNode[]
                                {
                                    new TestNode
                                    {
                                        type = typeof(ContinueStatementNode),
                                        label =  new TestNode {
                                            type = typeof(IdentifierNode),
                                            name = "done",
                                            loc = new TestNode
                                            {
                                                start = new TestNode
                                                {
                                                    line = 1,
                                                    column = 30
                                                },
                                                end = new TestNode
                                                {
                                                    line = 1,
                                                    column = 34
                                                }
                                            }
                                        },
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 21
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 35
                                            }
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 19
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 37
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 6
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 37
                                }
                            }
                        },
                        label =  new TestNode {
                            type = typeof(IdentifierNode),
                            name = "done",
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 4
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 37
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 37
                    }
                }
            });

            Program.test("while (true) { break }", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(WhileStatementNode),
                        test = new TestNode
                        {
                            type = typeof(LiteralNode),
                            value = true,
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 7
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 11
                                }
                            }
                        },
                        body = new TestNode
                        {
                            type = typeof(BlockStatementNode),
                            body = new TestNode[]
                            {
                                new TestNode
                                {
                                    type = typeof(BreakStatementNode),
                                    label = null,
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 15
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 20
                                        }
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 13
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 22
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 22
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 22
                    }
                }
            });

            Program.test("done: while (true) { break done }", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(LabelledStatementNode),
                        body = new TestNode
                        {
                            type = typeof(WhileStatementNode),
                            test = new TestNode
                            {
                                type = typeof(LiteralNode),
                                value = true,
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 13
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 17
                                    }
                                }
                            },
                            body = new TestNode
                            {
                                type = typeof(BlockStatementNode),
                                body = new TestNode[]
                                {
                                    new TestNode
                                    {
                                        type = typeof(BreakStatementNode),
                                        label =  new TestNode {
                                            type = typeof(IdentifierNode),
                                            name = "done",
                                            loc = new TestNode
                                            {
                                                start = new TestNode
                                                {
                                                    line = 1,
                                                    column = 27
                                                },
                                                end = new TestNode
                                                {
                                                    line = 1,
                                                    column = 31
                                                }
                                            }
                                        },
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 21
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 31
                                            }
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 19
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 33
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 6
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 33
                                }
                            }
                        },
                        label =  new TestNode {
                            type = typeof(IdentifierNode),
                            name = "done",
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 4
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 33
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 33
                    }
                }
            });

            Program.test("done: while (true) { break done; }", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(LabelledStatementNode),
                        body = new TestNode
                        {
                            type = typeof(WhileStatementNode),
                            test = new TestNode
                            {
                                type = typeof(LiteralNode),
                                value = true,
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 13
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 17
                                    }
                                }
                            },
                            body = new TestNode
                            {
                                type = typeof(BlockStatementNode),
                                body = new TestNode[]
                                {
                                    new TestNode
                                    {
                                        type = typeof(BreakStatementNode),
                                        label =  new TestNode {
                                            type = typeof(IdentifierNode),
                                            name = "done",
                                            loc = new TestNode
                                            {
                                                start = new TestNode
                                                {
                                                    line = 1,
                                                    column = 27
                                                },
                                                end = new TestNode
                                                {
                                                    line = 1,
                                                    column = 31
                                                }
                                            }
                                        },
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 21
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 32
                                            }
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 19
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 34
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 6
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 34
                                }
                            }
                        },
                        label =  new TestNode {
                            type = typeof(IdentifierNode),
                            name = "done",
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 4
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 34
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 34
                    }
                }
            });

            Program.test("done: switch (a) { default: break done }", new TestNode
            {
                type = typeof(ProgramNode),
                start = 0,
                end = 40,
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(LabelledStatementNode),
                        start = 0,
                        end = 40,
                        body = new TestNode
                        {
                            type = typeof(SwitchStatementNode),
                            start = 6,
                            end = 40,
                            discriminant = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                start = 14,
                                end = 15,
                                name = "a"
                            },
                            cases = new TestNode[]
                            {
                                new TestNode
                                {
                                    type = typeof(SwitchCaseNode),
                                    start = 19,
                                    end = 38,
                                    consequent = new TestNode[]
                                    {
                                        new TestNode
                                        {
                                            type = typeof(BreakStatementNode),
                                            start = 28,
                                            end = 38,
                                            label =  new TestNode {
                                                type = typeof(IdentifierNode),
                                                start = 34,
                                                end = 38,
                                                name = "done"
                                            }
                                        }
                                    },
                                    test = null
                                }
                            }
                        },
                        label =  new TestNode {
                            type = typeof(IdentifierNode),
                            start = 0,
                            end = 4,
                            name = "done"
                        }
                    }
                }
            });

            Program.test("target1: target2: while (true) { continue target1; }", new TestNode
            {
            });
            Program.test("target1: target2: target3: while (true) { continue target1; }", new TestNode
            {
            });

            Program.test("(function(){ return })", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(FunctionExpressionNode),
                            id = null,
                            @params = new TestNode[0],
                            body = new TestNode
                            {
                                type = typeof(BlockStatementNode),
                                body = new TestNode[]
                                {
                                    new TestNode
                                    {
                                        type = typeof(ReturnStatementNode),
                                        argument = null,
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 13
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 19
                                            }
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 11
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 21
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 1
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 21
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 22
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 22
                    }
                }
            });

            Program.test("(function(){ return; })", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(FunctionExpressionNode),
                            id = null,
                            @params = new TestNode[0],
                            body = new TestNode
                            {
                                type = typeof(BlockStatementNode),
                                body = new TestNode[]
                                {
                                    new TestNode
                                    {
                                        type = typeof(ReturnStatementNode),
                                        argument = null,
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 13
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 20
                                            }
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 11
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 22
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 1
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 22
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 23
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 23
                    }
                }
            });

            Program.test("(function(){ return x; })", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(FunctionExpressionNode),
                            id = null,
                            @params = new TestNode[0],
                            body = new TestNode
                            {
                                type = typeof(BlockStatementNode),
                                body = new TestNode[]
                                {
                                    new TestNode
                                    {
                                        type = typeof(ReturnStatementNode),
                                        argument = new TestNode
                                        {
                                            type = typeof(IdentifierNode),
                                            name = "x",
                                            loc = new TestNode
                                            {
                                                start = new TestNode
                                                {
                                                    line = 1,
                                                    column = 20
                                                },
                                                end = new TestNode
                                                {
                                                    line = 1,
                                                    column = 21
                                                }
                                            }
                                        },
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 13
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 22
                                            }
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 11
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 24
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 1
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 24
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 25
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 25
                    }
                }
            });

            Program.test("(function(){ return x * y })", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(FunctionExpressionNode),
                            id = null,
                            @params = new TestNode[0],
                            body = new TestNode
                            {
                                type = typeof(BlockStatementNode),
                                body = new TestNode[]
                                {
                                    new TestNode
                                    {
                                        type = typeof(ReturnStatementNode),
                                        argument = new TestNode
                                        {
                                            type = typeof(BinaryExpressionNode),
                                            left = new TestNode
                                            {
                                                type = typeof(IdentifierNode),
                                                name = "x",
                                                loc = new TestNode
                                                {
                                                    start = new TestNode
                                                    {
                                                        line = 1,
                                                        column = 20
                                                    },
                                                    end = new TestNode
                                                    {
                                                        line = 1,
                                                        column = 21
                                                    }
                                                }
                                            },
                                            @operator = "*",
                                            right = new TestNode
                                            {
                                                type = typeof(IdentifierNode),
                                                name = "y",
                                                loc = new TestNode
                                                {
                                                    start = new TestNode
                                                    {
                                                        line = 1,
                                                        column = 24
                                                    },
                                                    end = new TestNode
                                                    {
                                                        line = 1,
                                                        column = 25
                                                    }
                                                }
                                            },
                                            loc = new TestNode
                                            {
                                                start = new TestNode
                                                {
                                                    line = 1,
                                                    column = 20
                                                },
                                                end = new TestNode
                                                {
                                                    line = 1,
                                                    column = 25
                                                }
                                            }
                                        },
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 13
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 25
                                            }
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 11
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 27
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 1
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 27
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 28
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 28
                    }
                }
            });

            Program.test("with (x) foo = bar", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(WithStatementNode),
                        @object = new TestNode
                        {
                            type = typeof(IdentifierNode),
                            name = "x",
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 6
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 7
                                }
                            }
                        },
                        body = new TestNode
                        {
                            type = typeof(ExpressionStatementNode),
                            expression = new TestNode
                            {
                                type = typeof(AssignmentExpressionNode),
                                @operator = "=",
                                left = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "foo",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 9
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 12
                                        }
                                    }
                                },
                                right = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "bar",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 15
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 18
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 9
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 18
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 9
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 18
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 18
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 18
                    }
                }
            });

            Program.test("with (x) foo = bar;", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(WithStatementNode),
                        @object = new TestNode
                        {
                            type = typeof(IdentifierNode),
                            name = "x",
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 6
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 7
                                }
                            }
                        },
                        body = new TestNode
                        {
                            type = typeof(ExpressionStatementNode),
                            expression = new TestNode
                            {
                                type = typeof(AssignmentExpressionNode),
                                @operator = "=",
                                left = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "foo",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 9
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 12
                                        }
                                    }
                                },
                                right = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "bar",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 15
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 18
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 9
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 18
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 9
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 19
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 19
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 19
                    }
                }
            });

            // Test that innocuous string that evaluates to `use strict` is not promoted to
            // Use Strict directive.
            Program.test("'use\\x20strict'; with (x) foo = bar;", new TestNode
            {
            });

            // Test that innocuous string that evaluates to `use strict` is not promoted to
            // Use Strict directive.
            Program.test("\"use\\x20strict\"; with (x) foo = bar;", new TestNode
            {
            });

            Program.test("with (x) { foo = bar }", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(WithStatementNode),
                        @object = new TestNode
                        {
                            type = typeof(IdentifierNode),
                            name = "x",
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 6
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 7
                                }
                            }
                        },
                        body = new TestNode
                        {
                            type = typeof(BlockStatementNode),
                            body = new TestNode[]
                            {
                                new TestNode
                                {
                                    type = typeof(ExpressionStatementNode),
                                    expression = new TestNode
                                    {
                                        type = typeof(AssignmentExpressionNode),
                                        @operator = "=",
                                        left = new TestNode
                                        {
                                            type = typeof(IdentifierNode),
                                            name = "foo",
                                            loc = new TestNode
                                            {
                                                start = new TestNode
                                                {
                                                    line = 1,
                                                    column = 11
                                                },
                                                end = new TestNode
                                                {
                                                    line = 1,
                                                    column = 14
                                                }
                                            }
                                        },
                                        right = new TestNode
                                        {
                                            type = typeof(IdentifierNode),
                                            name = "bar",
                                            loc = new TestNode
                                            {
                                                start = new TestNode
                                                {
                                                    line = 1,
                                                    column = 17
                                                },
                                                end = new TestNode
                                                {
                                                    line = 1,
                                                    column = 20
                                                }
                                            }
                                        },
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 11
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 20
                                            }
                                        }
                                    },
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 11
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 20
                                        }
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 9
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 22
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 22
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 22
                    }
                }
            });

            Program.test("switch (x) {}", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(SwitchStatementNode),
                        discriminant = new TestNode
                        {
                            type = typeof(IdentifierNode),
                            name = "x",
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 8
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 9
                                }
                            }
                        },
                        cases = new TestNode[0],
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 13
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 13
                    }
                }
            });

            Program.test("switch (answer) { case 42: hi(); break; }", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(SwitchStatementNode),
                        discriminant = new TestNode
                        {
                            type = typeof(IdentifierNode),
                            name = "answer",
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 8
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 14
                                }
                            }
                        },
                        cases = new TestNode[]
                        {
                            new TestNode
                            {
                                type = typeof(SwitchCaseNode),
                                consequent = new TestNode[]
                                {
                                    new TestNode
                                    {
                                        type = typeof(ExpressionStatementNode),
                                        expression = new TestNode
                                        {
                                            type = typeof(CallExpressionNode),
                                            callee = new TestNode
                                            {
                                                type = typeof(IdentifierNode),
                                                name = "hi",
                                                loc = new TestNode
                                                {
                                                    start = new TestNode
                                                    {
                                                        line = 1,
                                                        column = 27
                                                    },
                                                    end = new TestNode
                                                    {
                                                        line = 1,
                                                        column = 29
                                                    }
                                                }
                                            },
                                            arguments = new TestNode[0],
                                            loc = new TestNode
                                            {
                                                start = new TestNode
                                                {
                                                    line = 1,
                                                    column = 27
                                                },
                                                end = new TestNode
                                                {
                                                    line = 1,
                                                    column = 31
                                                }
                                            }
                                        },
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 27
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 32
                                            }
                                        }
                                    },
                                    new TestNode
                                    {
                                        type = typeof(BreakStatementNode),
                                        label = null,
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 33
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 39
                                            }
                                        }
                                    }
                                },
                                test = new TestNode
                                {
                                    type = typeof(LiteralNode),
                                    value = 42,
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 23
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 25
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 18
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 39
                                    }
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 41
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 41
                    }
                }
            });

            Program.test("switch (answer) { case 42: hi(); break; default: break }", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(SwitchStatementNode),
                        discriminant = new TestNode
                        {
                            type = typeof(IdentifierNode),
                            name = "answer",
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 8
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 14
                                }
                            }
                        },
                        cases = new TestNode[]
                        {
                            new TestNode
                            {
                                type = typeof(SwitchCaseNode),
                                consequent = new TestNode[]
                                {
                                    new TestNode
                                    {
                                        type = typeof(ExpressionStatementNode),
                                        expression = new TestNode
                                        {
                                            type = typeof(CallExpressionNode),
                                            callee = new TestNode
                                            {
                                                type = typeof(IdentifierNode),
                                                name = "hi",
                                                loc = new TestNode
                                                {
                                                    start = new TestNode
                                                    {
                                                        line = 1,
                                                        column = 27
                                                    },
                                                    end = new TestNode
                                                    {
                                                        line = 1,
                                                        column = 29
                                                    }
                                                }
                                            },
                                            arguments = new TestNode[0],
                                            loc = new TestNode
                                            {
                                                start = new TestNode
                                                {
                                                    line = 1,
                                                    column = 27
                                                },
                                                end = new TestNode
                                                {
                                                    line = 1,
                                                    column = 31
                                                }
                                            }
                                        },
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 27
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 32
                                            }
                                        }
                                    },
                                    new TestNode
                                    {
                                        type = typeof(BreakStatementNode),
                                        label = null,
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 33
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 39
                                            }
                                        }
                                    }
                                },
                                test = new TestNode
                                {
                                    type = typeof(LiteralNode),
                                    value = 42,
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 23
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 25
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 18
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 39
                                    }
                                }
                            },
                            new TestNode
                            {
                                type = typeof(SwitchCaseNode),
                                consequent = new TestNode[]
                                {
                                    new TestNode
                                    {
                                        type = typeof(BreakStatementNode),
                                        label = null,
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 49
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 54
                                            }
                                        }
                                    }
                                },
                                test = null,
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 40
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 54
                                    }
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 56
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 56
                    }
                }
            });

            Program.test("start: for (;;) break start", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(LabelledStatementNode),
                        body = new TestNode
                        {
                            type = typeof(ForStatementNode),
                            init = null,
                            test = null,
                            update = null,
                            body = new TestNode
                            {
                                type = typeof(BreakStatementNode),
                                label =  new TestNode {
                                    type = typeof(IdentifierNode),
                                    name = "start",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 22
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 27
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 16
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 27
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 7
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 27
                                }
                            }
                        },
                        label =  new TestNode {
                            type = typeof(IdentifierNode),
                            name = "start",
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 5
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 27
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 27
                    }
                }
            });

            Program.test("start: while (true) break start", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(LabelledStatementNode),
                        body = new TestNode
                        {
                            type = typeof(WhileStatementNode),
                            test = new TestNode
                            {
                                type = typeof(LiteralNode),
                                value = true,
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 14
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 18
                                    }
                                }
                            },
                            body = new TestNode
                            {
                                type = typeof(BreakStatementNode),
                                label =  new TestNode {
                                    type = typeof(IdentifierNode),
                                    name = "start",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 26
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 31
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 20
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 31
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 7
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 31
                                }
                            }
                        },
                        label =  new TestNode {
                            type = typeof(IdentifierNode),
                            name = "start",
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 5
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 31
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 31
                    }
                }
            });

            Program.test("throw x;", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ThrowStatementNode),
                        argument = new TestNode
                        {
                            type = typeof(IdentifierNode),
                            name = "x",
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 6
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 7
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 8
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 8
                    }
                }
            });

            Program.test("throw x * y", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ThrowStatementNode),
                        argument = new TestNode
                        {
                            type = typeof(BinaryExpressionNode),
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 6
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 7
                                    }
                                }
                            },
                            @operator = "*",
                            right = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "y",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 10
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 11
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 6
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 11
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 11
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 11
                    }
                }
            });

            Program.test("throw { message: \"Error\" }", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ThrowStatementNode),
                        argument = new TestNode
                        {
                            type = typeof(ObjectExpressionNode),
                            properties = new TestNode[]
                            {
                                new TestNode
                                {
                                    type = typeof(PropertyNode),
                                    key = new TestNode
                                    {
                                        type = typeof(IdentifierNode),
                                        name = "message",
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 8
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 15
                                            }
                                        }
                                    },
                                    value = new TestNode
                                    {
                                        type = typeof(LiteralNode),
                                        value = "Error",
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 17
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 24
                                            }
                                        }
                                    },
                                    kind = PropertyKind.Init,
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 6
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 26
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 26
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 26
                    }
                }
            });

            Program.test("try { } catch (e) { }", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(TryStatementNode),
                        block = new TestNode
                        {
                            type = typeof(BlockStatementNode),
                            body = new TestNode[0],
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 4
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 7
                                }
                            }
                        },
                        handler = new TestNode
                        {
                            type = typeof(CatchClauseNode),
                            param =  new TestNode {
                                type = typeof(IdentifierNode),
                                name = "e",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 15
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 16
                                    }
                                }
                            },
                            body = new TestNode
                            {
                                type = typeof(BlockStatementNode),
                                body = new TestNode[0],
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 18
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 21
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 8
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 21
                                }
                            }
                        },
                        finaliser = null,
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 21
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 21
                    }
                }
            });

            Program.test("try { } catch (eval) { }", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(TryStatementNode),
                        block = new TestNode
                        {
                            type = typeof(BlockStatementNode),
                            body = new TestNode[0],
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 4
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 7
                                }
                            }
                        },
                        handler =
                            new TestNode
                            {
                                type = typeof(CatchClauseNode),
                                param =  new TestNode {
                                    type = typeof(IdentifierNode),
                                    name = "eval",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 15
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 19
                                        }
                                    }
                                },
                                body = new TestNode
                                {
                                    type = typeof(BlockStatementNode),
                                    body = new TestNode[0],
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 21
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 24
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 8
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 24
                                    }
                                }
                            },
                        finaliser = null,
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 24
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 24
                    }
                }
            });

            Program.test("try { } catch (arguments) { }", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(TryStatementNode),
                        block = new TestNode
                        {
                            type = typeof(BlockStatementNode),
                            body = new TestNode[0],
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 4
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 7
                                }
                            }
                        },
                        handler =
                            new TestNode
                            {
                                type = typeof(CatchClauseNode),
                                param =  new TestNode {
                                    type = typeof(IdentifierNode),
                                    name = "arguments",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 15
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 24
                                        }
                                    }
                                },
                                body = new TestNode
                                {
                                    type = typeof(BlockStatementNode),
                                    body = new TestNode[0],
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 26
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 29
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 8
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 29
                                    }
                                }
                            },
                        finaliser = null,
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 29
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 29
                    }
                }
            });

            Program.test("try { } catch (e) { say(e) }", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(TryStatementNode),
                        block = new TestNode
                        {
                            type = typeof(BlockStatementNode),
                            body = new TestNode[0],
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 4
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 7
                                }
                            }
                        },
                        handler =
                            new TestNode
                            {
                                type = typeof(CatchClauseNode),
                                param =  new TestNode {
                                    type = typeof(IdentifierNode),
                                    name = "e",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 15
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 16
                                        }
                                    }
                                },
                                body = new TestNode
                                {
                                    type = typeof(BlockStatementNode),
                                    body = new TestNode[]
                                    {
                                        new TestNode
                                        {
                                            type = typeof(ExpressionStatementNode),
                                            expression = new TestNode
                                            {
                                                type = typeof(CallExpressionNode),
                                                callee = new TestNode
                                                {
                                                    type = typeof(IdentifierNode),
                                                    name = "say",
                                                    loc = new TestNode
                                                    {
                                                        start = new TestNode
                                                        {
                                                            line = 1,
                                                            column = 20
                                                        },
                                                        end = new TestNode
                                                        {
                                                            line = 1,
                                                            column = 23
                                                        }
                                                    }
                                                },
                                                arguments = new TestNode[]
                                                {
                                                    new TestNode
                                                    {
                                                        type = typeof(IdentifierNode),
                                                        name = "e",
                                                        loc = new TestNode
                                                        {
                                                            start = new TestNode
                                                            {
                                                                line = 1,
                                                                column = 24
                                                            },
                                                            end = new TestNode
                                                            {
                                                                line = 1,
                                                                column = 25
                                                            }
                                                        }
                                                    }
                                                },
                                                loc = new TestNode
                                                {
                                                    start = new TestNode
                                                    {
                                                        line = 1,
                                                        column = 20
                                                    },
                                                    end = new TestNode
                                                    {
                                                        line = 1,
                                                        column = 26
                                                    }
                                                }
                                            },
                                            loc = new TestNode
                                            {
                                                start = new TestNode
                                                {
                                                    line = 1,
                                                    column = 20
                                                },
                                                end = new TestNode
                                                {
                                                    line = 1,
                                                    column = 26
                                                }
                                            }
                                        }
                                    },
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 18
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 28
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 8
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 28
                                    }
                                }
                            },
                        finaliser = null,
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 28
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 28
                    }
                }
            });

            Program.test("try { } finally { cleanup(stuff) }", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(TryStatementNode),
                        block = new TestNode
                        {
                            type = typeof(BlockStatementNode),
                            body = new TestNode[0],
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 4
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 7
                                }
                            }
                        },
                        handler = null,
                        finaliser = new TestNode
                        {
                            type = typeof(BlockStatementNode),
                            body = new TestNode[]
                            {
                                new TestNode
                                {
                                    type = typeof(ExpressionStatementNode),
                                    expression = new TestNode
                                    {
                                        type = typeof(CallExpressionNode),
                                        callee = new TestNode
                                        {
                                            type = typeof(IdentifierNode),
                                            name = "cleanup",
                                            loc = new TestNode
                                            {
                                                start = new TestNode
                                                {
                                                    line = 1,
                                                    column = 18
                                                },
                                                end = new TestNode
                                                {
                                                    line = 1,
                                                    column = 25
                                                }
                                            }
                                        },
                                        arguments = new TestNode[]
                                        {
                                            new TestNode
                                            {
                                                type = typeof(IdentifierNode),
                                                name = "stuff",
                                                loc = new TestNode
                                                {
                                                    start = new TestNode
                                                    {
                                                        line = 1,
                                                        column = 26
                                                    },
                                                    end = new TestNode
                                                    {
                                                        line = 1,
                                                        column = 31
                                                    }
                                                }
                                            }
                                        },
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 18
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 32
                                            }
                                        }
                                    },
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 18
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 32
                                        }
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 16
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 34
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 34
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 34
                    }
                }
            });

            Program.test("try { doThat(); } catch (e) { say(e) }", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(TryStatementNode),
                        block = new TestNode
                        {
                            type = typeof(BlockStatementNode),
                            body = new TestNode[]
                            {
                                new TestNode
                                {
                                    type = typeof(ExpressionStatementNode),
                                    expression = new TestNode
                                    {
                                        type = typeof(CallExpressionNode),
                                        callee = new TestNode
                                        {
                                            type = typeof(IdentifierNode),
                                            name = "doThat",
                                            loc = new TestNode
                                            {
                                                start = new TestNode
                                                {
                                                    line = 1,
                                                    column = 6
                                                },
                                                end = new TestNode
                                                {
                                                    line = 1,
                                                    column = 12
                                                }
                                            }
                                        },
                                        arguments = new TestNode[0],
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 6
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 14
                                            }
                                        }
                                    },
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 6
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 15
                                        }
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 4
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 17
                                }
                            }
                        },
                        handler =
                            new TestNode
                            {
                                type = typeof(CatchClauseNode),
                                param =  new TestNode {
                                    type = typeof(IdentifierNode),
                                    name = "e",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 25
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 26
                                        }
                                    }
                                },
                                body = new TestNode
                                {
                                    type = typeof(BlockStatementNode),
                                    body = new TestNode[]
                                    {
                                        new TestNode
                                        {
                                            type = typeof(ExpressionStatementNode),
                                            expression = new TestNode
                                            {
                                                type = typeof(CallExpressionNode),
                                                callee = new TestNode
                                                {
                                                    type = typeof(IdentifierNode),
                                                    name = "say",
                                                    loc = new TestNode
                                                    {
                                                        start = new TestNode
                                                        {
                                                            line = 1,
                                                            column = 30
                                                        },
                                                        end = new TestNode
                                                        {
                                                            line = 1,
                                                            column = 33
                                                        }
                                                    }
                                                },
                                                arguments = new TestNode[]
                                                {
                                                    new TestNode
                                                    {
                                                        type = typeof(IdentifierNode),
                                                        name = "e",
                                                        loc = new TestNode
                                                        {
                                                            start = new TestNode
                                                            {
                                                                line = 1,
                                                                column = 34
                                                            },
                                                            end = new TestNode
                                                            {
                                                                line = 1,
                                                                column = 35
                                                            }
                                                        }
                                                    }
                                                },
                                                loc = new TestNode
                                                {
                                                    start = new TestNode
                                                    {
                                                        line = 1,
                                                        column = 30
                                                    },
                                                    end = new TestNode
                                                    {
                                                        line = 1,
                                                        column = 36
                                                    }
                                                }
                                            },
                                            loc = new TestNode
                                            {
                                                start = new TestNode
                                                {
                                                    line = 1,
                                                    column = 30
                                                },
                                                end = new TestNode
                                                {
                                                    line = 1,
                                                    column = 36
                                                }
                                            }
                                        }
                                    },
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 28
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 38
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 18
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 38
                                    }
                                }
                            },
                        finaliser = null,
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 38
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 38
                    }
                }
            });

            Program.test("try { doThat(); } catch (e) { say(e) } finally { cleanup(stuff) }", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(TryStatementNode),
                        block = new TestNode
                        {
                            type = typeof(BlockStatementNode),
                            body = new TestNode[]
                            {
                                new TestNode
                                {
                                    type = typeof(ExpressionStatementNode),
                                    expression = new TestNode
                                    {
                                        type = typeof(CallExpressionNode),
                                        callee = new TestNode
                                        {
                                            type = typeof(IdentifierNode),
                                            name = "doThat",
                                            loc = new TestNode
                                            {
                                                start = new TestNode
                                                {
                                                    line = 1,
                                                    column = 6
                                                },
                                                end = new TestNode
                                                {
                                                    line = 1,
                                                    column = 12
                                                }
                                            }
                                        },
                                        arguments = new TestNode[0],
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 6
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 14
                                            }
                                        }
                                    },
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 6
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 15
                                        }
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 4
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 17
                                }
                            }
                        },
                        handler =
                            new TestNode
                            {
                                type = typeof(CatchClauseNode),
                                param =  new TestNode {
                                    type = typeof(IdentifierNode),
                                    name = "e",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 25
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 26
                                        }
                                    }
                                },
                                body = new TestNode
                                {
                                    type = typeof(BlockStatementNode),
                                    body = new TestNode[]
                                    {
                                        new TestNode
                                        {
                                            type = typeof(ExpressionStatementNode),
                                            expression = new TestNode
                                            {
                                                type = typeof(CallExpressionNode),
                                                callee = new TestNode
                                                {
                                                    type = typeof(IdentifierNode),
                                                    name = "say",
                                                    loc = new TestNode
                                                    {
                                                        start = new TestNode
                                                        {
                                                            line = 1,
                                                            column = 30
                                                        },
                                                        end = new TestNode
                                                        {
                                                            line = 1,
                                                            column = 33
                                                        }
                                                    }
                                                },
                                                arguments = new TestNode[]
                                                {
                                                    new TestNode
                                                    {
                                                        type = typeof(IdentifierNode),
                                                        name = "e",
                                                        loc = new TestNode
                                                        {
                                                            start = new TestNode
                                                            {
                                                                line = 1,
                                                                column = 34
                                                            },
                                                            end = new TestNode
                                                            {
                                                                line = 1,
                                                                column = 35
                                                            }
                                                        }
                                                    }
                                                },
                                                loc = new TestNode
                                                {
                                                    start = new TestNode
                                                    {
                                                        line = 1,
                                                        column = 30
                                                    },
                                                    end = new TestNode
                                                    {
                                                        line = 1,
                                                        column = 36
                                                    }
                                                }
                                            },
                                            loc = new TestNode
                                            {
                                                start = new TestNode
                                                {
                                                    line = 1,
                                                    column = 30
                                                },
                                                end = new TestNode
                                                {
                                                    line = 1,
                                                    column = 36
                                                }
                                            }
                                        }
                                    },
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 28
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 38
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 18
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 38
                                    }
                                }
                            },
                        finaliser = new TestNode
                        {
                            type = typeof(BlockStatementNode),
                            body = new TestNode[]
                            {
                                new TestNode
                                {
                                    type = typeof(ExpressionStatementNode),
                                    expression = new TestNode
                                    {
                                        type = typeof(CallExpressionNode),
                                        callee = new TestNode
                                        {
                                            type = typeof(IdentifierNode),
                                            name = "cleanup",
                                            loc = new TestNode
                                            {
                                                start = new TestNode
                                                {
                                                    line = 1,
                                                    column = 49
                                                },
                                                end = new TestNode
                                                {
                                                    line = 1,
                                                    column = 56
                                                }
                                            }
                                        },
                                        arguments = new TestNode[]
                                        {
                                            new TestNode
                                            {
                                                type = typeof(IdentifierNode),
                                                name = "stuff",
                                                loc = new TestNode
                                                {
                                                    start = new TestNode
                                                    {
                                                        line = 1,
                                                        column = 57
                                                    },
                                                    end = new TestNode
                                                    {
                                                        line = 1,
                                                        column = 62
                                                    }
                                                }
                                            }
                                        },
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 49
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 63
                                            }
                                        }
                                    },
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 49
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 63
                                        }
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 47
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 65
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 65
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 65
                    }
                }
            });

            Program.test("debugger;", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(DebuggerStatementNode),
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 9
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 9
                    }
                }
            });

            Program.test("function hello() { sayHi(); }", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(FunctionDeclarationNode),
                        id = new TestNode
                        {
                            type = typeof(IdentifierNode),
                            name = "hello",
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 9
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 14
                                }
                            }
                        },
                        @params = new TestNode[0],
                        body = new TestNode
                        {
                            type = typeof(BlockStatementNode),
                            body = new TestNode[]
                            {
                                new TestNode
                                {
                                    type = typeof(ExpressionStatementNode),
                                    expression = new TestNode
                                    {
                                        type = typeof(CallExpressionNode),
                                        callee = new TestNode
                                        {
                                            type = typeof(IdentifierNode),
                                            name = "sayHi",
                                            loc = new TestNode
                                            {
                                                start = new TestNode
                                                {
                                                    line = 1,
                                                    column = 19
                                                },
                                                end = new TestNode
                                                {
                                                    line = 1,
                                                    column = 24
                                                }
                                            }
                                        },
                                        arguments = new TestNode[0],
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 19
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 26
                                            }
                                        }
                                    },
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 19
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 27
                                        }
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 17
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 29
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 29
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 29
                    }
                }
            });

            Program.test("function eval() { }", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(FunctionDeclarationNode),
                        id = new TestNode
                        {
                            type = typeof(IdentifierNode),
                            name = "eval",
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 9
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 13
                                }
                            }
                        },
                        @params = new TestNode[0],
                        body = new TestNode
                        {
                            type = typeof(BlockStatementNode),
                            body = new TestNode[0],
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 16
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 19
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 19
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 19
                    }
                }
            });

            Program.test("function arguments() { }", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(FunctionDeclarationNode),
                        id = new TestNode
                        {
                            type = typeof(IdentifierNode),
                            name = "arguments",
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 9
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 18
                                }
                            }
                        },
                        @params = new TestNode[0],
                        body = new TestNode
                        {
                            type = typeof(BlockStatementNode),
                            body = new TestNode[0],
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 21
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 24
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 24
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 24
                    }
                }
            });

            Program.test("function test(t, t) { }", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(FunctionDeclarationNode),
                        id = new TestNode
                        {
                            type = typeof(IdentifierNode),
                            name = "test",
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 9
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 13
                                }
                            }
                        },
                        @params = new TestNode[]
                        {
                            new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "t",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 14
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 15
                                    }
                                }
                            },
                            new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "t",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 17
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 18
                                    }
                                }
                            }
                        },
                        body = new TestNode
                        {
                            type = typeof(BlockStatementNode),
                            body = new TestNode[0],
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 20
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 23
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 23
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 23
                    }
                }
            });

            Program.test("(function test(t, t) { })", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(FunctionExpressionNode),
                            id = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "test",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 10
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 14
                                    }
                                }
                            },
                            @params = new TestNode[]
                            {
                                new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "t",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 15
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 16
                                        }
                                    }
                                },
                                new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "t",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 18
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 19
                                        }
                                    }
                                }
                            },
                            body = new TestNode
                            {
                                type = typeof(BlockStatementNode),
                                body = new TestNode[0],
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 21
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 24
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 1
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 24
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 25
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 25
                    }
                }
            });

            Program.test("function eval() { function inner() { \"use strict\" } }", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(FunctionDeclarationNode),
                        id = new TestNode
                        {
                            type = typeof(IdentifierNode),
                            name = "eval",
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 9
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 13
                                }
                            }
                        },
                        @params = new TestNode[0],
                        body = new TestNode
                        {
                            type = typeof(BlockStatementNode),
                            body = new TestNode[]
                            {
                                new TestNode
                                {
                                    type = typeof(FunctionDeclarationNode),
                                    id = new TestNode
                                    {
                                        type = typeof(IdentifierNode),
                                        name = "inner",
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 27
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 32
                                            }
                                        }
                                    },
                                    @params = new TestNode[0],
                                    body = new TestNode
                                    {
                                        type = typeof(BlockStatementNode),
                                        body = new TestNode[]
                                        {
                                            new TestNode
                                            {
                                                type = typeof(ExpressionStatementNode),
                                                expression = new TestNode
                                                {
                                                    type = typeof(LiteralNode),
                                                    value = "use strict",
                                                    loc = new TestNode
                                                    {
                                                        start = new TestNode
                                                        {
                                                            line = 1,
                                                            column = 37
                                                        },
                                                        end = new TestNode
                                                        {
                                                            line = 1,
                                                            column = 49
                                                        }
                                                    }
                                                },
                                                loc = new TestNode
                                                {
                                                    start = new TestNode
                                                    {
                                                        line = 1,
                                                        column = 37
                                                    },
                                                    end = new TestNode
                                                    {
                                                        line = 1,
                                                        column = 49
                                                    }
                                                }
                                            }
                                        },
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 35
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 51
                                            }
                                        }
                                    },
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 18
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 51
                                        }
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 16
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 53
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 53
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 53
                    }
                }
            });

            Program.test("function hello(a) { sayHi(); }", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(FunctionDeclarationNode),
                        id = new TestNode
                        {
                            type = typeof(IdentifierNode),
                            name = "hello",
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 9
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 14
                                }
                            }
                        },
                        @params = new TestNode[]
                        {
                            new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "a",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 15
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 16
                                    }
                                }
                            }
                        },
                        body = new TestNode
                        {
                            type = typeof(BlockStatementNode),
                            body = new TestNode[]
                            {
                                new TestNode
                                {
                                    type = typeof(ExpressionStatementNode),
                                    expression = new TestNode
                                    {
                                        type = typeof(CallExpressionNode),
                                        callee = new TestNode
                                        {
                                            type = typeof(IdentifierNode),
                                            name = "sayHi",
                                            loc = new TestNode
                                            {
                                                start = new TestNode
                                                {
                                                    line = 1,
                                                    column = 20
                                                },
                                                end = new TestNode
                                                {
                                                    line = 1,
                                                    column = 25
                                                }
                                            }
                                        },
                                        arguments = new TestNode[0],
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 20
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 27
                                            }
                                        }
                                    },
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 20
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 28
                                        }
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 18
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 30
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 30
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 30
                    }
                }
            });

            Program.test("function hello(a, b) { sayHi(); }", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(FunctionDeclarationNode),
                        id = new TestNode
                        {
                            type = typeof(IdentifierNode),
                            name = "hello",
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 9
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 14
                                }
                            }
                        },
                        @params = new TestNode[]
                        {
                            new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "a",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 15
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 16
                                    }
                                }
                            },
                            new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "b",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 18
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 19
                                    }
                                }
                            }
                        },
                        body = new TestNode
                        {
                            type = typeof(BlockStatementNode),
                            body = new TestNode[]
                            {
                                new TestNode
                                {
                                    type = typeof(ExpressionStatementNode),
                                    expression = new TestNode
                                    {
                                        type = typeof(CallExpressionNode),
                                        callee = new TestNode
                                        {
                                            type = typeof(IdentifierNode),
                                            name = "sayHi",
                                            loc = new TestNode
                                            {
                                                start = new TestNode
                                                {
                                                    line = 1,
                                                    column = 23
                                                },
                                                end = new TestNode
                                                {
                                                    line = 1,
                                                    column = 28
                                                }
                                            }
                                        },
                                        arguments = new TestNode[0],
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 23
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 30
                                            }
                                        }
                                    },
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 23
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 31
                                        }
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 21
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 33
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 33
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 33
                    }
                }
            });

            Program.test("function hello(...rest) { }", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(FunctionDeclarationNode),
                        id = new TestNode
                        {
                            type = typeof(IdentifierNode),
                            name = "hello",
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 9
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 14
                                }
                            }
                        },
                        @params = new TestNode[]
                        {
                            new TestNode
                            {
                                type = typeof(RestElementNode),
                                argument = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "rest",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 18
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 22
                                        }
                                    }
                                }
                            }
                        },
                        body = new TestNode
                        {
                            type = typeof(BlockStatementNode),
                            body = new TestNode[0],
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 24
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 27
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 27
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 27
                    }
                }
            }, new TestOptions
            {
                ecmaVersion = 6,
                locations = true
            });

            Program.test("function hello(a, ...rest) { }", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(FunctionDeclarationNode),
                        id = new TestNode
                        {
                            type = typeof(IdentifierNode),
                            name = "hello",
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 9
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 14
                                }
                            }
                        },
                        @params = new TestNode[]
                        {
                            new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "a",
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 15
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 16
                                    }
                                }
                            },
                            new TestNode
                            {
                                type = typeof(RestElementNode),
                                argument = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "rest",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 21
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 25
                                        }
                                    }
                                }
                            }
                        },
                        body = new TestNode
                        {
                            type = typeof(BlockStatementNode),
                            body = new TestNode[0],
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 27
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 30
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 30
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 30
                    }
                }
            }, new TestOptions
            {
                ecmaVersion = 6,
                locations = true
            });

            Program.test("var hi = function() { sayHi() };", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(VariableDeclarationNode),
                        declarations = new TestNode[]
                        {
                            new TestNode
                            {
                                type = typeof(VariableDeclaratorNode),
                                id = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "hi",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 4
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 6
                                        }
                                    }
                                },
                                init = new TestNode
                                {
                                    type = typeof(FunctionExpressionNode),
                                    id = null,
                                    @params = new TestNode[0],
                                    body = new TestNode
                                    {
                                        type = typeof(BlockStatementNode),
                                        body = new TestNode[]
                                        {
                                            new TestNode
                                            {
                                                type = typeof(ExpressionStatementNode),
                                                expression = new TestNode
                                                {
                                                    type = typeof(CallExpressionNode),
                                                    callee = new TestNode
                                                    {
                                                        type = typeof(IdentifierNode),
                                                        name = "sayHi",
                                                        loc = new TestNode
                                                        {
                                                            start = new TestNode
                                                            {
                                                                line = 1,
                                                                column = 22
                                                            },
                                                            end = new TestNode
                                                            {
                                                                line = 1,
                                                                column = 27
                                                            }
                                                        }
                                                    },
                                                    arguments = new TestNode[0],
                                                    loc = new TestNode
                                                    {
                                                        start = new TestNode
                                                        {
                                                            line = 1,
                                                            column = 22
                                                        },
                                                        end = new TestNode
                                                        {
                                                            line = 1,
                                                            column = 29
                                                        }
                                                    }
                                                },
                                                loc = new TestNode
                                                {
                                                    start = new TestNode
                                                    {
                                                        line = 1,
                                                        column = 22
                                                    },
                                                    end = new TestNode
                                                    {
                                                        line = 1,
                                                        column = 29
                                                    }
                                                }
                                            }
                                        },
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 20
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 31
                                            }
                                        }
                                    },
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 9
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 31
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 4
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 31
                                    }
                                }
                            }
                        },
                        kind = PropertyKind.Var,
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 32
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 32
                    }
                }
            });

            Program.test("var hi = function (...r) { sayHi() };", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(VariableDeclarationNode),
                        declarations = new TestNode[]
                        {
                            new TestNode
                            {
                                type = typeof(VariableDeclaratorNode),
                                id = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "hi",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 4
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 6
                                        }
                                    }
                                },
                                init = new TestNode
                                {
                                    type = typeof(FunctionExpressionNode),
                                    id = null,
                                    @params = new TestNode[]
                                    {
                                        new TestNode
                                        {
                                            type = typeof(RestElementNode),
                                            argument = new TestNode
                                            {
                                                type = typeof(IdentifierNode),
                                                name = "r",
                                                loc = new TestNode
                                                {
                                                    start = new TestNode
                                                    {
                                                        line = 1,
                                                        column = 22
                                                    },
                                                    end = new TestNode
                                                    {
                                                        line = 1,
                                                        column = 23
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    body = new TestNode
                                    {
                                        type = typeof(BlockStatementNode),
                                        body = new TestNode[]
                                        {
                                            new TestNode
                                            {
                                                type = typeof(ExpressionStatementNode),
                                                expression = new TestNode
                                                {
                                                    type = typeof(CallExpressionNode),
                                                    callee = new TestNode
                                                    {
                                                        type = typeof(IdentifierNode),
                                                        name = "sayHi",
                                                        loc = new TestNode
                                                        {
                                                            start = new TestNode
                                                            {
                                                                line = 1,
                                                                column = 27
                                                            },
                                                            end = new TestNode
                                                            {
                                                                line = 1,
                                                                column = 32
                                                            }
                                                        }
                                                    },
                                                    arguments = new TestNode[0],
                                                    loc = new TestNode
                                                    {
                                                        start = new TestNode
                                                        {
                                                            line = 1,
                                                            column = 27
                                                        },
                                                        end = new TestNode
                                                        {
                                                            line = 1,
                                                            column = 34
                                                        }
                                                    }
                                                },
                                                loc = new TestNode
                                                {
                                                    start = new TestNode
                                                    {
                                                        line = 1,
                                                        column = 27
                                                    },
                                                    end = new TestNode
                                                    {
                                                        line = 1,
                                                        column = 34
                                                    }
                                                }
                                            }
                                        },
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 25
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 36
                                            }
                                        }
                                    },
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 9
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 36
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 4
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 36
                                    }
                                }
                            }
                        },
                        kind = PropertyKind.Var,
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 37
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 37
                    }
                }
            }, new TestOptions
            {
                ecmaVersion = 6,
                locations = true
            });

            Program.test("var hi = function eval() { };", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(VariableDeclarationNode),
                        declarations = new TestNode[]
                        {
                            new TestNode
                            {
                                type = typeof(VariableDeclaratorNode),
                                id = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "hi",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 4
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 6
                                        }
                                    }
                                },
                                init = new TestNode
                                {
                                    type = typeof(FunctionExpressionNode),
                                    id = new TestNode
                                    {
                                        type = typeof(IdentifierNode),
                                        name = "eval",
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 18
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 22
                                            }
                                        }
                                    },
                                    @params = new TestNode[0],
                                    body = new TestNode
                                    {
                                        type = typeof(BlockStatementNode),
                                        body = new TestNode[0],
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 25
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 28
                                            }
                                        }
                                    },
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 9
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 28
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 4
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 28
                                    }
                                }
                            }
                        },
                        kind = PropertyKind.Var,
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 29
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 29
                    }
                }
            });

            Program.test("var hi = function arguments() { };", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(VariableDeclarationNode),
                        declarations = new TestNode[]
                        {
                            new TestNode
                            {
                                type = typeof(VariableDeclaratorNode),
                                id = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "hi",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 4
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 6
                                        }
                                    }
                                },
                                init = new TestNode
                                {
                                    type = typeof(FunctionExpressionNode),
                                    id = new TestNode
                                    {
                                        type = typeof(IdentifierNode),
                                        name = "arguments",
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 18
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 27
                                            }
                                        }
                                    },
                                    @params = new TestNode[0],
                                    body = new TestNode
                                    {
                                        type = typeof(BlockStatementNode),
                                        body = new TestNode[0],
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 30
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 33
                                            }
                                        }
                                    },
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 9
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 33
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 4
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 33
                                    }
                                }
                            }
                        },
                        kind = PropertyKind.Var,
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 34
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 34
                    }
                }
            });

            Program.test("var hello = function hi() { sayHi() };", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(VariableDeclarationNode),
                        declarations = new TestNode[]
                        {
                            new TestNode
                            {
                                type = typeof(VariableDeclaratorNode),
                                id = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "hello",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 4
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 9
                                        }
                                    }
                                },
                                init = new TestNode
                                {
                                    type = typeof(FunctionExpressionNode),
                                    id = new TestNode
                                    {
                                        type = typeof(IdentifierNode),
                                        name = "hi",
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 21
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 23
                                            }
                                        }
                                    },
                                    @params = new TestNode[0],
                                    body = new TestNode
                                    {
                                        type = typeof(BlockStatementNode),
                                        body = new TestNode[]
                                        {
                                            new TestNode
                                            {
                                                type = typeof(ExpressionStatementNode),
                                                expression = new TestNode
                                                {
                                                    type = typeof(CallExpressionNode),
                                                    callee = new TestNode
                                                    {
                                                        type = typeof(IdentifierNode),
                                                        name = "sayHi",
                                                        loc = new TestNode
                                                        {
                                                            start = new TestNode
                                                            {
                                                                line = 1,
                                                                column = 28
                                                            },
                                                            end = new TestNode
                                                            {
                                                                line = 1,
                                                                column = 33
                                                            }
                                                        }
                                                    },
                                                    arguments = new TestNode[0],
                                                    loc = new TestNode
                                                    {
                                                        start = new TestNode
                                                        {
                                                            line = 1,
                                                            column = 28
                                                        },
                                                        end = new TestNode
                                                        {
                                                            line = 1,
                                                            column = 35
                                                        }
                                                    }
                                                },
                                                loc = new TestNode
                                                {
                                                    start = new TestNode
                                                    {
                                                        line = 1,
                                                        column = 28
                                                    },
                                                    end = new TestNode
                                                    {
                                                        line = 1,
                                                        column = 35
                                                    }
                                                }
                                            }
                                        },
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 26
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 37
                                            }
                                        }
                                    },
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 12
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 37
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 4
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 37
                                    }
                                }
                            }
                        },
                        kind = PropertyKind.Var,
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 38
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 38
                    }
                }
            });

            Program.test("(function(){})", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(FunctionExpressionNode),
                            id = null,
                            @params = new TestNode[0],
                            body = new TestNode
                            {
                                type = typeof(BlockStatementNode),
                                body = new TestNode[0],
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 11
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 13
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 1
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 13
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 14
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 14
                    }
                }
            });

            Program.test("{ x\n++y }", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(BlockStatementNode),
                        body = new TestNode[]
                        {
                            new TestNode
                            {
                                type = typeof(ExpressionStatementNode),
                                expression = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "x",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 2
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 3
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 2
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 3
                                    }
                                }
                            },
                            new TestNode
                            {
                                type = typeof(ExpressionStatementNode),
                                expression = new TestNode
                                {
                                    type = typeof(UpdateExpressionNode),
                                    @operator = "++",
                                    prefix = true,
                                    argument = new TestNode
                                    {
                                        type = typeof(IdentifierNode),
                                        name = "y",
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 2,
                                                column = 2
                                            },
                                            end = new TestNode
                                            {
                                                line = 2,
                                                column = 3
                                            }
                                        }
                                    },
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 2,
                                            column = 0
                                        },
                                        end = new TestNode
                                        {
                                            line = 2,
                                            column = 3
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 2,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 2,
                                        column = 3
                                    }
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 2,
                                column = 5
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 2,
                        column = 5
                    }
                }
            });

            Program.test("{ x\n--y }", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(BlockStatementNode),
                        body = new TestNode[]
                        {
                            new TestNode
                            {
                                type = typeof(ExpressionStatementNode),
                                expression = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "x",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 2
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 3
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 2
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 3
                                    }
                                }
                            },
                            new TestNode
                            {
                                type = typeof(ExpressionStatementNode),
                                expression = new TestNode
                                {
                                    type = typeof(UpdateExpressionNode),
                                    @operator = "--",
                                    prefix = true,
                                    argument = new TestNode
                                    {
                                        type = typeof(IdentifierNode),
                                        name = "y",
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 2,
                                                column = 2
                                            },
                                            end = new TestNode
                                            {
                                                line = 2,
                                                column = 3
                                            }
                                        }
                                    },
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 2,
                                            column = 0
                                        },
                                        end = new TestNode
                                        {
                                            line = 2,
                                            column = 3
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 2,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 2,
                                        column = 3
                                    }
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 2,
                                column = 5
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 2,
                        column = 5
                    }
                }
            });

            Program.test("var x /* comment */;", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(VariableDeclarationNode),
                        declarations = new TestNode[]
                        {
                            new TestNode
                            {
                                type = typeof(VariableDeclaratorNode),
                                id = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "x",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 4
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 5
                                        }
                                    }
                                },
                                init = null,
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 4
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 5
                                    }
                                }
                            }
                        },
                        kind = PropertyKind.Var,
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 20
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 20
                    }
                }
            });

            Program.test("{ var x = 14, y = 3\nz; }", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(BlockStatementNode),
                        body = new TestNode[]
                        {
                            new TestNode
                            {
                                type = typeof(VariableDeclarationNode),
                                declarations = new TestNode[]
                                {
                                    new TestNode
                                    {
                                        type = typeof(VariableDeclaratorNode),
                                        id = new TestNode
                                        {
                                            type = typeof(IdentifierNode),
                                            name = "x",
                                            loc = new TestNode
                                            {
                                                start = new TestNode
                                                {
                                                    line = 1,
                                                    column = 6
                                                },
                                                end = new TestNode
                                                {
                                                    line = 1,
                                                    column = 7
                                                }
                                            }
                                        },
                                        init = new TestNode
                                        {
                                            type = typeof(LiteralNode),
                                            value = 14,
                                            loc = new TestNode
                                            {
                                                start = new TestNode
                                                {
                                                    line = 1,
                                                    column = 10
                                                },
                                                end = new TestNode
                                                {
                                                    line = 1,
                                                    column = 12
                                                }
                                            }
                                        },
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 6
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 12
                                            }
                                        }
                                    },
                                    new TestNode
                                    {
                                        type = typeof(VariableDeclaratorNode),
                                        id = new TestNode
                                        {
                                            type = typeof(IdentifierNode),
                                            name = "y",
                                            loc = new TestNode
                                            {
                                                start = new TestNode
                                                {
                                                    line = 1,
                                                    column = 14
                                                },
                                                end = new TestNode
                                                {
                                                    line = 1,
                                                    column = 15
                                                }
                                            }
                                        },
                                        init = new TestNode
                                        {
                                            type = typeof(LiteralNode),
                                            value = 3,
                                            loc = new TestNode
                                            {
                                                start = new TestNode
                                                {
                                                    line = 1,
                                                    column = 18
                                                },
                                                end = new TestNode
                                                {
                                                    line = 1,
                                                    column = 19
                                                }
                                            }
                                        },
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 14
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 19
                                            }
                                        }
                                    }
                                },
                                kind = PropertyKind.Var,
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 2
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 19
                                    }
                                }
                            },
                            new TestNode
                            {
                                type = typeof(ExpressionStatementNode),
                                expression = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "z",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 2,
                                            column = 0
                                        },
                                        end = new TestNode
                                        {
                                            line = 2,
                                            column = 1
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 2,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 2,
                                        column = 2
                                    }
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 2,
                                column = 4
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 2,
                        column = 4
                    }
                }
            });

            Program.test("while (true) { continue\nthere; }", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(WhileStatementNode),
                        test = new TestNode
                        {
                            type = typeof(LiteralNode),
                            value = true,
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 7
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 11
                                }
                            }
                        },
                        body = new TestNode
                        {
                            type = typeof(BlockStatementNode),
                            body = new TestNode[]
                            {
                                new TestNode
                                {
                                    type = typeof(ContinueStatementNode),
                                    label = null,
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 15
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 23
                                        }
                                    }
                                },
                                new TestNode
                                {
                                    type = typeof(ExpressionStatementNode),
                                    expression = new TestNode
                                    {
                                        type = typeof(IdentifierNode),
                                        name = "there",
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 2,
                                                column = 0
                                            },
                                            end = new TestNode
                                            {
                                                line = 2,
                                                column = 5
                                            }
                                        }
                                    },
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 2,
                                            column = 0
                                        },
                                        end = new TestNode
                                        {
                                            line = 2,
                                            column = 6
                                        }
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 13
                                },
                                end = new TestNode
                                {
                                    line = 2,
                                    column = 8
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 2,
                                column = 8
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 2,
                        column = 8
                    }
                }
            });

            Program.test("while (true) { continue // Comment\nthere; }", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(WhileStatementNode),
                        test = new TestNode
                        {
                            type = typeof(LiteralNode),
                            value = true,
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 7
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 11
                                }
                            }
                        },
                        body = new TestNode
                        {
                            type = typeof(BlockStatementNode),
                            body = new TestNode[]
                            {
                                new TestNode
                                {
                                    type = typeof(ContinueStatementNode),
                                    label = null,
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 15
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 23
                                        }
                                    }
                                },
                                new TestNode
                                {
                                    type = typeof(ExpressionStatementNode),
                                    expression = new TestNode
                                    {
                                        type = typeof(IdentifierNode),
                                        name = "there",
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 2,
                                                column = 0
                                            },
                                            end = new TestNode
                                            {
                                                line = 2,
                                                column = 5
                                            }
                                        }
                                    },
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 2,
                                            column = 0
                                        },
                                        end = new TestNode
                                        {
                                            line = 2,
                                            column = 6
                                        }
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 13
                                },
                                end = new TestNode
                                {
                                    line = 2,
                                    column = 8
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 2,
                                column = 8
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 2,
                        column = 8
                    }
                }
            });

            Program.test("while (true) { continue /* Multiline\nComment */there; }", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(WhileStatementNode),
                        test = new TestNode
                        {
                            type = typeof(LiteralNode),
                            value = true,
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 7
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 11
                                }
                            }
                        },
                        body = new TestNode
                        {
                            type = typeof(BlockStatementNode),
                            body = new TestNode[]
                            {
                                new TestNode
                                {
                                    type = typeof(ContinueStatementNode),
                                    label = null,
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 15
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 23
                                        }
                                    }
                                },
                                new TestNode
                                {
                                    type = typeof(ExpressionStatementNode),
                                    expression = new TestNode
                                    {
                                        type = typeof(IdentifierNode),
                                        name = "there",
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 2,
                                                column = 10
                                            },
                                            end = new TestNode
                                            {
                                                line = 2,
                                                column = 15
                                            }
                                        }
                                    },
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 2,
                                            column = 10
                                        },
                                        end = new TestNode
                                        {
                                            line = 2,
                                            column = 16
                                        }
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 13
                                },
                                end = new TestNode
                                {
                                    line = 2,
                                    column = 18
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 2,
                                column = 18
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 2,
                        column = 18
                    }
                }
            });

            Program.test("while (true) { break\nthere; }", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(WhileStatementNode),
                        test = new TestNode
                        {
                            type = typeof(LiteralNode),
                            value = true,
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 7
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 11
                                }
                            }
                        },
                        body = new TestNode
                        {
                            type = typeof(BlockStatementNode),
                            body = new TestNode[]
                            {
                                new TestNode
                                {
                                    type = typeof(BreakStatementNode),
                                    label = null,
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 15
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 20
                                        }
                                    }
                                },
                                new TestNode
                                {
                                    type = typeof(ExpressionStatementNode),
                                    expression = new TestNode
                                    {
                                        type = typeof(IdentifierNode),
                                        name = "there",
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 2,
                                                column = 0
                                            },
                                            end = new TestNode
                                            {
                                                line = 2,
                                                column = 5
                                            }
                                        }
                                    },
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 2,
                                            column = 0
                                        },
                                        end = new TestNode
                                        {
                                            line = 2,
                                            column = 6
                                        }
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 13
                                },
                                end = new TestNode
                                {
                                    line = 2,
                                    column = 8
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 2,
                                column = 8
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 2,
                        column = 8
                    }
                }
            });

            Program.test("while (true) { break // Comment\nthere; }", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(WhileStatementNode),
                        test = new TestNode
                        {
                            type = typeof(LiteralNode),
                            value = true,
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 7
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 11
                                }
                            }
                        },
                        body = new TestNode
                        {
                            type = typeof(BlockStatementNode),
                            body = new TestNode[]
                            {
                                new TestNode
                                {
                                    type = typeof(BreakStatementNode),
                                    label = null,
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 15
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 20
                                        }
                                    }
                                },
                                new TestNode
                                {
                                    type = typeof(ExpressionStatementNode),
                                    expression = new TestNode
                                    {
                                        type = typeof(IdentifierNode),
                                        name = "there",
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 2,
                                                column = 0
                                            },
                                            end = new TestNode
                                            {
                                                line = 2,
                                                column = 5
                                            }
                                        }
                                    },
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 2,
                                            column = 0
                                        },
                                        end = new TestNode
                                        {
                                            line = 2,
                                            column = 6
                                        }
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 13
                                },
                                end = new TestNode
                                {
                                    line = 2,
                                    column = 8
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 2,
                                column = 8
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 2,
                        column = 8
                    }
                }
            });

            Program.test("while (true) { break /* Multiline\nComment */there; }", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(WhileStatementNode),
                        test = new TestNode
                        {
                            type = typeof(LiteralNode),
                            value = true,
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 7
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 11
                                }
                            }
                        },
                        body = new TestNode
                        {
                            type = typeof(BlockStatementNode),
                            body = new TestNode[]
                            {
                                new TestNode
                                {
                                    type = typeof(BreakStatementNode),
                                    label = null,
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 15
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 20
                                        }
                                    }
                                },
                                new TestNode
                                {
                                    type = typeof(ExpressionStatementNode),
                                    expression = new TestNode
                                    {
                                        type = typeof(IdentifierNode),
                                        name = "there",
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 2,
                                                column = 10
                                            },
                                            end = new TestNode
                                            {
                                                line = 2,
                                                column = 15
                                            }
                                        }
                                    },
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 2,
                                            column = 10
                                        },
                                        end = new TestNode
                                        {
                                            line = 2,
                                            column = 16
                                        }
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 13
                                },
                                end = new TestNode
                                {
                                    line = 2,
                                    column = 18
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 2,
                                column = 18
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 2,
                        column = 18
                    }
                }
            });

            Program.test("(function(){ return\nx; })", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(FunctionExpressionNode),
                            id = null,
                            @params = new TestNode[0],
                            body = new TestNode
                            {
                                type = typeof(BlockStatementNode),
                                body = new TestNode[]
                                {
                                    new TestNode
                                    {
                                        type = typeof(ReturnStatementNode),
                                        argument = null,
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 13
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 19
                                            }
                                        }
                                    },
                                    new TestNode
                                    {
                                        type = typeof(ExpressionStatementNode),
                                        expression = new TestNode
                                        {
                                            type = typeof(IdentifierNode),
                                            name = "x",
                                            loc = new TestNode
                                            {
                                                start = new TestNode
                                                {
                                                    line = 2,
                                                    column = 0
                                                },
                                                end = new TestNode
                                                {
                                                    line = 2,
                                                    column = 1
                                                }
                                            }
                                        },
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 2,
                                                column = 0
                                            },
                                            end = new TestNode
                                            {
                                                line = 2,
                                                column = 2
                                            }
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 11
                                    },
                                    end = new TestNode
                                    {
                                        line = 2,
                                        column = 4
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 1
                                },
                                end = new TestNode
                                {
                                    line = 2,
                                    column = 4
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 2,
                                column = 5
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 2,
                        column = 5
                    }
                }
            });

            Program.test("(function(){ return // Comment\nx; })", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(FunctionExpressionNode),
                            id = null,
                            @params = new TestNode[0],
                            body = new TestNode
                            {
                                type = typeof(BlockStatementNode),
                                body = new TestNode[]
                                {
                                    new TestNode
                                    {
                                        type = typeof(ReturnStatementNode),
                                        argument = null,
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 13
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 19
                                            }
                                        }
                                    },
                                    new TestNode
                                    {
                                        type = typeof(ExpressionStatementNode),
                                        expression = new TestNode
                                        {
                                            type = typeof(IdentifierNode),
                                            name = "x",
                                            loc = new TestNode
                                            {
                                                start = new TestNode
                                                {
                                                    line = 2,
                                                    column = 0
                                                },
                                                end = new TestNode
                                                {
                                                    line = 2,
                                                    column = 1
                                                }
                                            }
                                        },
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 2,
                                                column = 0
                                            },
                                            end = new TestNode
                                            {
                                                line = 2,
                                                column = 2
                                            }
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 11
                                    },
                                    end = new TestNode
                                    {
                                        line = 2,
                                        column = 4
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 1
                                },
                                end = new TestNode
                                {
                                    line = 2,
                                    column = 4
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 2,
                                column = 5
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 2,
                        column = 5
                    }
                }
            });

            Program.test("(function(){ return/* Multiline\nComment */x; })", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(FunctionExpressionNode),
                            id = null,
                            @params = new TestNode[0],
                            body = new TestNode
                            {
                                type = typeof(BlockStatementNode),
                                body = new TestNode[]
                                {
                                    new TestNode
                                    {
                                        type = typeof(ReturnStatementNode),
                                        argument = null,
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 13
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 19
                                            }
                                        }
                                    },
                                    new TestNode
                                    {
                                        type = typeof(ExpressionStatementNode),
                                        expression = new TestNode
                                        {
                                            type = typeof(IdentifierNode),
                                            name = "x",
                                            loc = new TestNode
                                            {
                                                start = new TestNode
                                                {
                                                    line = 2,
                                                    column = 10
                                                },
                                                end = new TestNode
                                                {
                                                    line = 2,
                                                    column = 11
                                                }
                                            }
                                        },
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 2,
                                                column = 10
                                            },
                                            end = new TestNode
                                            {
                                                line = 2,
                                                column = 12
                                            }
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 11
                                    },
                                    end = new TestNode
                                    {
                                        line = 2,
                                        column = 14
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 1
                                },
                                end = new TestNode
                                {
                                    line = 2,
                                    column = 14
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 2,
                                column = 15
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 2,
                        column = 15
                    }
                }
            });

            Program.test("{ throw error\nerror; }", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(BlockStatementNode),
                        body = new TestNode[]
                        {
                            new TestNode
                            {
                                type = typeof(ThrowStatementNode),
                                argument = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "error",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 8
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 13
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 2
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 13
                                    }
                                }
                            },
                            new TestNode
                            {
                                type = typeof(ExpressionStatementNode),
                                expression = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "error",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 2,
                                            column = 0
                                        },
                                        end = new TestNode
                                        {
                                            line = 2,
                                            column = 5
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 2,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 2,
                                        column = 6
                                    }
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 2,
                                column = 8
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 2,
                        column = 8
                    }
                }
            });

            Program.test("{ throw error// Comment\nerror; }", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(BlockStatementNode),
                        body = new TestNode[]
                        {
                            new TestNode
                            {
                                type = typeof(ThrowStatementNode),
                                argument = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "error",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 8
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 13
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 2
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 13
                                    }
                                }
                            },
                            new TestNode
                            {
                                type = typeof(ExpressionStatementNode),
                                expression = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "error",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 2,
                                            column = 0
                                        },
                                        end = new TestNode
                                        {
                                            line = 2,
                                            column = 5
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 2,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 2,
                                        column = 6
                                    }
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 2,
                                column = 8
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 2,
                        column = 8
                    }
                }
            });

            Program.test("{ throw error/* Multiline\nComment */error; }", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(BlockStatementNode),
                        body = new TestNode[]
                        {
                            new TestNode
                            {
                                type = typeof(ThrowStatementNode),
                                argument = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "error",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 8
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 13
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 2
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 13
                                    }
                                }
                            },
                            new TestNode
                            {
                                type = typeof(ExpressionStatementNode),
                                expression = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "error",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 2,
                                            column = 10
                                        },
                                        end = new TestNode
                                        {
                                            line = 2,
                                            column = 15
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 2,
                                        column = 10
                                    },
                                    end = new TestNode
                                    {
                                        line = 2,
                                        column = 16
                                    }
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 2,
                                column = 18
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 2,
                        column = 18
                    }
                }
            });

            Program.test("", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[0],
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 0
                    }
                }
            });

            Program.test("foo: if (true) break foo;", new TestNode
            {
                type = typeof(ProgramNode),
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 25
                    }
                },
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(LabelledStatementNode),
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 25
                            }
                        },
                        body = new TestNode
                        {
                            type = typeof(IfStatementNode),
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 5
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 25
                                }
                            },
                            test = new TestNode
                            {
                                type = typeof(LiteralNode),
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 9
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 13
                                    }
                                },
                                value = true
                            },
                            consequent = new TestNode
                            {
                                type = typeof(BreakStatementNode),
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 15
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 25
                                    }
                                },
                                label =  new TestNode {
                                    type = typeof(IdentifierNode),
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 21
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 24
                                        }
                                    },
                                    name = "foo"
                                }
                            },
                            alternate = null
                        },
                        label =  new TestNode {
                            type = typeof(IdentifierNode),
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 3
                                }
                            },
                            name = "foo"
                        }
                    }
                }
            });

            Program.test("a: { b: switch(x) {} }", new TestNode
            {
                type = typeof(ProgramNode),
                start = 0,
                end = 22,
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(LabelledStatementNode),
                        start = 0,
                        end = 22,
                        body = new TestNode
                        {
                            type = typeof(BlockStatementNode),
                            start = 3,
                            end = 22,
                            body = new TestNode[]
                            {
                                new TestNode
                                {
                                    type = typeof(LabelledStatementNode),
                                    start = 5,
                                    end = 20,
                                    body = new TestNode
                                    {
                                        type = typeof(SwitchStatementNode),
                                        start = 8,
                                        end = 20,
                                        discriminant = new TestNode
                                        {
                                            type = typeof(IdentifierNode),
                                            start = 15,
                                            end = 16,
                                            name = "x"
                                        },
                                        cases = new TestNode[0]
                                    },
                                    label =  new TestNode {
                                        type = typeof(IdentifierNode),
                                        start = 5,
                                        end = 6,
                                        name = "b"
                                    }
                                }
                            }
                        },
                        label =  new TestNode {
                            type = typeof(IdentifierNode),
                            start = 0,
                            end = 1,
                            name = "a"
                        }
                    }
                }
            });

            Program.test("(function () {\n 'use strict';\n '\0';\n}())", new TestNode
            {
                type = typeof(ProgramNode),
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 4,
                        column = 4
                    }
                },
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 4,
                                column = 4
                            }
                        },
                        expression = new TestNode
                        {
                            type = typeof(CallExpressionNode),
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 1
                                },
                                end = new TestNode
                                {
                                    line = 4,
                                    column = 3
                                }
                            },
                            callee = new TestNode
                            {
                                type = typeof(FunctionExpressionNode),
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 1
                                    },
                                    end = new TestNode
                                    {
                                        line = 4,
                                        column = 1
                                    }
                                },
                                id = null,
                                @params = new TestNode[0],
                                body = new TestNode
                                {
                                    type = typeof(BlockStatementNode),
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 13
                                        },
                                        end = new TestNode
                                        {
                                            line = 4,
                                            column = 1
                                        }
                                    },
                                    body = new TestNode[]
                                    {
                                        new TestNode
                                        {
                                            type = typeof(ExpressionStatementNode),
                                            loc = new TestNode
                                            {
                                                start = new TestNode
                                                {
                                                    line = 2,
                                                    column = 1
                                                },
                                                end = new TestNode
                                                {
                                                    line = 2,
                                                    column = 14
                                                }
                                            },
                                            expression = new TestNode
                                            {
                                                type = typeof(LiteralNode),
                                                loc = new TestNode
                                                {
                                                    start = new TestNode
                                                    {
                                                        line = 2,
                                                        column = 1
                                                    },
                                                    end = new TestNode
                                                    {
                                                        line = 2,
                                                        column = 13
                                                    }
                                                },
                                                value = "use strict"
                                            }
                                        },
                                        new TestNode
                                        {
                                            type = typeof(ExpressionStatementNode),
                                            loc = new TestNode
                                            {
                                                start = new TestNode
                                                {
                                                    line = 3,
                                                    column = 1
                                                },
                                                end = new TestNode
                                                {
                                                    line = 3,
                                                    column = 5
                                                }
                                            },
                                            expression = new TestNode
                                            {
                                                type = typeof(LiteralNode),
                                                loc = new TestNode
                                                {
                                                    start = new TestNode
                                                    {
                                                        line = 3,
                                                        column = 1
                                                    },
                                                    end = new TestNode
                                                    {
                                                        line = 3,
                                                        column = 4
                                                    }
                                                },
                                                value = "\u0000"
                                            }
                                        }
                                    }
                                }
                            },
                            arguments = new TestNode[0],
                        }
                    }
                }
            });

            Program.test("123..toString(10)", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(CallExpressionNode),
                            callee = new TestNode
                            {
                                type = typeof(MemberExpressionNode),
                                @object = new TestNode
                                {
                                    type = typeof(LiteralNode),
                                    value = 123
                                },
                                property = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "toString"
                                },
                                computed = false,
                            },
                            arguments = new TestNode[]
                            {
                                new TestNode
                                {
                                    type = typeof(LiteralNode),
                                    value = 10
                                }
                            },
                        }
                    }
                }
            });

            Program.test("123.+2", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(BinaryExpressionNode),
                            left = new TestNode
                            {
                                type = typeof(LiteralNode),
                                value = 123
                            },
                            @operator = "+",
                            right = new TestNode
                            {
                                type = typeof(LiteralNode),
                                value = 2
                            },
                        }
                    }
                }
            });

            Program.test("a\u2028b", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(IdentifierNode),
                            name = "a"
                        }
                    },
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(IdentifierNode),
                            name = "b"
                        }
                    }
                }
            });

            Program.test("'a\\u0026b'", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(LiteralNode),
                            value = "a\u0026b"
                        }
                    }
                }
            });

            Program.test("foo: 10; foo: 20;", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(LabelledStatementNode),
                        body = new TestNode
                        {
                            type = typeof(ExpressionStatementNode),
                            expression = new TestNode
                            {
                                type = typeof(LiteralNode),
                                value = 10,
                                raw = "10"
                            }
                        },
                        label =  new TestNode {
                            type = typeof(IdentifierNode),
                            name = "foo"
                        }
                    },
                    new TestNode
                    {
                        type = typeof(LabelledStatementNode),
                        body = new TestNode
                        {
                            type = typeof(ExpressionStatementNode),
                            expression = new TestNode
                            {
                                type = typeof(LiteralNode),
                                value = 20,
                                raw = "20"
                            }
                        },
                        label =  new TestNode {
                            type = typeof(IdentifierNode),
                            name = "foo"
                        }
                    }
                }
            });

            Program.test("if(1)/  foo/", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(IfStatementNode),
                        test = new TestNode
                        {
                            type = typeof(LiteralNode),
                            value = 1,
                            raw = "1"
                        },
                        consequent = new TestNode
                        {
                            type = typeof(ExpressionStatementNode),
                            expression = new TestNode
                            {
                                type = typeof(LiteralNode),
                                raw = "/  foo/"
                            }
                        },
                        alternate = null
                    }
                }
            });

            Program.test("price_9̶9̶_89", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(IdentifierNode),
                            name = "price_9̶9̶_89",
                        }
                    }
                }
            });

            // `\0` is valid even in strict mode
            Program.test("function hello() { 'use strict'; \"\\0\"; }", new TestNode
            {
            });

            // option tests

            Program.test("var a = 1;", new TestNode
            {
                type = typeof(ProgramNode),
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 10
                    },
                    source = "test.js"
                },
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(VariableDeclarationNode),
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 10
                            },
                            source = "test.js"
                        },
                        declarations = new TestNode[]
                        {
                            new TestNode
                            {
                                type = typeof(VariableDeclaratorNode),
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 4
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 9
                                    },
                                    source = "test.js"
                                },
                                id = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 4
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 5
                                        },
                                        source = "test.js"
                                    },
                                    name = "a"
                                },
                                init = new TestNode
                                {
                                    type = typeof(LiteralNode),
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 8
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 9
                                        },
                                        source = "test.js"
                                    },
                                    value = 1,
                                    raw = "1"
                                }
                            }
                        },
                        kind = PropertyKind.Var
                    }
                }
            }, new TestOptions
            {
                locations = true,
                sourceFile = "test.js"
            });

            Program.test("a.in / b", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(BinaryExpressionNode),
                            left = new TestNode
                            {
                                type = typeof(MemberExpressionNode),
                                @object = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "a"
                                },
                                property = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "in"
                                },
                                computed = false
                            },
                            @operator = "/",
                            right = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "b"
                            }
                        }
                    }
                }
            });

            // A number of slash-disambiguation corner cases
            Program.test("return {} / 2", new TestNode
            {
            }, new TestOptions
            {
                allowReturnOutsideFunction = true
            });
            Program.test("return\n{}\n/foo/", new TestNode
            {
            }, new TestOptions
            {
                allowReturnOutsideFunction = true
            });
            Program.test("+{} / 2", new TestNode
            {
            });
            Program.test("{}\n/foo/", new TestNode
            {
            });
            Program.test("x++\n{}\n/foo/", new TestNode
            {
            });
            Program.test("{{}\n/foo/}", new TestNode
            {
            });
            Program.test("while (1) /foo/", new TestNode
            {
            });
            Program.test("while (1) {} /foo/", new TestNode
            {
            });
            Program.test("(1) / 2", new TestNode
            {
            });
            Program.test("({a: [1]}+[]) / 2", new TestNode
            {
            });
            Program.test("{[1]}\n/foo/", new TestNode
            {
            });
            Program.test("switch(a) { case 1: {}\n/foo/ }", new TestNode
            {
            });
            Program.test("({1: {} / 2})", new TestNode
            {
            });
            Program.test("+x++ / 2", new TestNode
            {
            });
            Program.test("foo.in\n{}\n/foo/", new TestNode
            {
            });
            Program.test("var x = function f() {} / 3;", new TestNode
            {
            });
            Program.test("+function f() {} / 3;", new TestNode
            {
            });
            Program.test("foo: function x() {} /regexp/", new TestNode
            {
            });
            Program.test("x = {foo: function x() {} / divide}", new TestNode
            {
            });
            Program.test("foo; function f() {} /regexp/", new TestNode
            {
            });
            Program.test("{function f() {} /regexp/}", new TestNode
            {
            });
            Program.test("function fn() {return\nfunction foo() {}\n/42/}", new TestNode
            {
            });
            Program.test("var x\n/foo/", new TestNode
            {
            });

            Program.test("{}/=/", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(BlockStatementNode),
                        body = new TestNode[0]
                    },
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(LiteralNode),
                            raw = "/=/"
                        }
                    }
                }
            });

            Program.test("foo <!--bar\n+baz", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(BinaryExpressionNode),
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "foo"
                            },
                            @operator = "+",
                            right = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "baz"
                            }
                        }
                    }
                }
            });

            Program.test("x = y-->10;\n --> nothing", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(AssignmentExpressionNode),
                            @operator = "=",
                            left = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "x"
                            },
                            right = new TestNode
                            {
                                type = typeof(BinaryExpressionNode),
                                left = new TestNode
                                {
                                    type = typeof(UpdateExpressionNode),
                                    @operator = "--",
                                    prefix = false,
                                    argument = new TestNode
                                    {
                                        type = typeof(IdentifierNode),
                                        name = "y"
                                    }
                                },
                                @operator = ">",
                                right = new TestNode
                                {
                                    type = typeof(LiteralNode),
                                    value = 10
                                }
                            }
                        }
                    }
                }
            });

            Program.test("'use strict';\nobject.static();", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(LiteralNode),
                            value = "use strict",
                            raw = "'use strict'"
                        }
                    },
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(CallExpressionNode),
                            callee = new TestNode
                            {
                                type = typeof(MemberExpressionNode),
                                @object = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "object"
                                },
                                property = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "static"
                                },
                                computed = false
                            },
                            arguments = new TestNode[0]
                        }
                    }
                }
            });

            // Failure tests

            Program.testFail("{",
                "Unexpected token (1:1)");

            Program.testFail("}",
                "Unexpected token (1:0)");

            Program.testFail("3ea",
                "Invalid number (1:0)");

            Program.testFail("3in []",
                "Identifier directly after number (1:1)");

            Program.testFail("3e",
                "Invalid number (1:0)");

            Program.testFail("3e+",
                "Invalid number (1:0)");

            Program.testFail("3e-",
                "Invalid number (1:0)");

            Program.testFail("3x",
                "Identifier directly after number (1:1)");

            Program.testFail("3x0",
                "Identifier directly after number (1:1)");

            Program.testFail("0x",
                "Expected number in radix 16 (1:2)");

            Program.testFail("'use strict'; 09",
                "Invalid number (1:14)");

            Program.testFail("'use strict'; 018",
                "Invalid number (1:14)");

            Program.testFail("01a",
                "Identifier directly after number (1:2)");

            Program.testFail("3in[]",
                "Identifier directly after number (1:1)");

            Program.testFail("0x3in[]",
                "Identifier directly after number (1:3)");

            Program.testFail("\"Hello\nWorld\"",
                "Unterminated string constant (1:0)");

            Program.testFail("x\\",
                "Expecting Unicode escape sequence \\uXXXX (1:2)");

            Program.testFail("x\\u005c",
                "Invalid Unicode escape (1:1)");

            Program.testFail("x\\u002a",
                "Invalid Unicode escape (1:1)");

            Program.testFail("/",
                "Unterminated regular expression (1:1)");

            Program.testFail("/test",
                "Unterminated regular expression (1:1)");

            Program.testFail("var x = /[a-z]/\\ux",
                "Bad character escape sequence (1:17)");

            Program.testFail("3 = 4",
                "Assigning to rvalue (1:0)");

            Program.testFail("func() = 4",
                "Assigning to rvalue (1:0)");

            Program.testFail("(1 + 1) = 10",
                "Parenthesized pattern (1:0)");

            Program.testFail("1++",
                "Assigning to rvalue (1:0)");

            Program.testFail("1--",
                "Assigning to rvalue (1:0)");

            Program.testFail("++1",
                "Assigning to rvalue (1:2)");

            Program.testFail("--1",
                "Assigning to rvalue (1:2)");

            Program.testFail("for((1 + 1) in list) process(x);",
                "Parenthesized pattern (1:4)");

            Program.testFail("[",
                "Unexpected token (1:1)");

            Program.testFail("[,",
                "Unexpected token (1:2)");

            Program.testFail("1 + {",
                "Unexpected token (1:5)");

            Program.testFail("1 + { t:t ",
                "Unexpected token (1:10)");

            Program.testFail("1 + { t:t,",
                "Unexpected token (1:10)");

            Program.testFail("var x = /\n/",
                "Unterminated regular expression (1:9)");

            Program.testFail("var x = \"\n",
                "Unterminated string constant (1:8)");

            Program.testFail("var if = 42",
                "Unexpected keyword 'if' (1:4)");

            Program.testFail("i + 2 = 42",
                "Assigning to rvalue (1:0)");

            Program.testFail("+i = 42",
                "Assigning to rvalue (1:0)");

            Program.testFail("1 + (",
                "Unexpected token (1:5)");

            Program.testFail("\n\n\n{",
                "Unexpected token (4:1)");

            Program.testFail("\n/* Some multiline\ncomment */\n)",
                "Unexpected token (4:0)");

            Program.testFail("{ set 1 }",
                "Unexpected token (1:6)");

            Program.testFail("{ get 2 }",
                "Unexpected token (1:6)");

            Program.testFail("({ set: s(if) { } })",
                "Unexpected token (1:10)");

            Program.testFail("({ set s(.) { } })",
                "Unexpected token (1:9)");

            Program.testFail("({ set: s() { } })",
                "Unexpected token (1:12)");

            Program.testFail("({ set: s(a, b) { } })",
                "Unexpected token (1:16)");

            Program.testFail("({ get: g(d) { } })",
                "Unexpected token (1:13)");

            Program.testFail("({ get i() { }, i: 42 })",
                "Redefinition of property (1:16)");

            Program.testFail("({ i: 42, get i() { } })",
                "Redefinition of property (1:14)");

            Program.testFail("({ set i(x) { }, i: 42 })",
                "Redefinition of property (1:17)");

            Program.testFail("({ i: 42, set i(x) { } })",
                "Redefinition of property (1:14)");

            Program.testFail("({ get i() { }, get i() { } })",
                "Redefinition of property (1:20)");

            Program.testFail("({ set i(x) { }, set i(x) { } })",
                "Redefinition of property (1:21)");

            Program.testFail("'use strict'; ({ __proto__: 1, __proto__: 2 })",
                "Redefinition of property (1:31)");

            Program.testFail("function t(...) { }",
                "Unexpected token (1:11)");

            Program.testFail("function t(...) { }",
                "Unexpected token (1:14)",
                new TestOptions
                {
                    ecmaVersion = 6
                });

            Program.testFail("function t(...rest, b) { }",
                "Comma is not permitted after the rest element (1:18)",
                new TestOptions
                {
                    ecmaVersion = 6
                });

            Program.testFail("function t(if) { }",
                "Unexpected keyword 'if' (1:11)");

            Program.testFail("function t(true) { }",
                "Unexpected keyword 'true' (1:11)");

            Program.testFail("function t(false) { }",
                "Unexpected keyword 'false' (1:11)");

            Program.testFail("function t(null) { }",
                "Unexpected keyword 'null' (1:11)");

            Program.testFail("function null() { }",
                "Unexpected keyword 'null' (1:9)");

            Program.testFail("function true() { }",
                "Unexpected keyword 'true' (1:9)");

            Program.testFail("function false() { }",
                "Unexpected keyword 'false' (1:9)");

            Program.testFail("function if() { }",
                "Unexpected keyword 'if' (1:9)");

            Program.testFail("a b;",
                "Unexpected token (1:2)");

            Program.testFail("if.a;",
                "Unexpected token (1:2)");

            Program.testFail("a if;",
                "Unexpected token (1:2)");

            Program.testFail("a class;",
                "Unexpected token (1:2)");

            Program.testFail("break\n",
                "Unsyntactic break (1:0)");

            Program.testFail("break 1;",
                "Unexpected token (1:6)");

            Program.testFail("continue\n",
                "Unsyntactic continue (1:0)");

            Program.testFail("continue 2;",
                "Unexpected token (1:9)");

            Program.testFail("throw",
                "Unexpected token (1:5)");

            Program.testFail("throw;",
                "Unexpected token (1:5)");

            Program.testFail("for (var i, i2 in {});",
                "Unexpected token (1:15)");

            Program.testFail("for ((i in {}));",
                "Unexpected token (1:14)");

            Program.testFail("for (i + 1 in {});",
                "Assigning to rvalue (1:5)");

            Program.testFail("for (+i in {});",
                "Assigning to rvalue (1:5)");

            Program.testFail("if(false)",
                "Unexpected token (1:9)");

            Program.testFail("if(false) doThis(); else",
                "Unexpected token (1:24)");

            Program.testFail("do",
                "Unexpected token (1:2)");

            Program.testFail("while(false)",
                "Unexpected token (1:12)");

            Program.testFail("for(;;)",
                "Unexpected token (1:7)");

            Program.testFail("with(x)",
                "Unexpected token (1:7)");

            Program.testFail("try { }",
                "Missing catch or finally clause (1:0)");

            Program.testFail("‿ = 10",
                "Unexpected character '‿' (1:0)");

            Program.testFail("if(true) let a = 1;",
                "Unexpected token (1:13)");

            Program.testFail("switch (c) { default: default: }",
                "Multiple default clauses (1:22)");

            Program.testFail("new X().\"s\"",
                "Unexpected token (1:8)");

            Program.testFail("/*",
                "Unterminated comment (1:0)");

            Program.testFail("/*\n\n\n",
                "Unterminated comment (1:0)");

            Program.testFail("/**",
                "Unterminated comment (1:0)");

            Program.testFail("/*\n\n*",
                "Unterminated comment (1:0)");

            Program.testFail("/*hello",
                "Unterminated comment (1:0)");

            Program.testFail("/*hello  *",
                "Unterminated comment (1:0)");

            Program.testFail("\n]",
                "Unexpected token (2:0)");

            Program.testFail("\r]",
                "Unexpected token (2:0)");

            Program.testFail("\r\n]",
                "Unexpected token (2:0)");

            Program.testFail("\n\r]",
                "Unexpected token (3:0)");

            Program.testFail("//\r\n]",
                "Unexpected token (2:0)");

            Program.testFail("//\n\r]",
                "Unexpected token (3:0)");

            Program.testFail("/a\\\n/",
                "Unterminated regular expression (1:1)");

            Program.testFail("//\r \n]",
                "Unexpected token (3:0)");

            Program.testFail("/*\r\n*/]",
                "Unexpected token (2:2)");

            Program.testFail("/*\n\r*/]",
                "Unexpected token (3:2)");

            Program.testFail("/*\r \n*/]",
                "Unexpected token (3:2)");

            Program.testFail("\\\\",
                "Expecting Unicode escape sequence \\uXXXX (1:1)");

            Program.testFail("\\u005c",
                "Invalid Unicode escape (1:0)");

            Program.testFail("\\x",
                "Expecting Unicode escape sequence \\uXXXX (1:1)");

            Program.testFail("\\u0000",
                "Invalid Unicode escape (1:0)");

            Program.testFail("‌ = []",
                "Unexpected character '‌' (1:0)");

            Program.testFail("‍ = []",
                "Unexpected character '‍' (1:0)");

            Program.testFail("\"\\",
                "Unterminated string constant (1:0)");

            Program.testFail("\"\\u",
                "Bad character escape sequence (1:3)");

            Program.testFail("return",
                "'return' outside of function (1:0)");

            Program.testFail("break",
                "Unsyntactic break (1:0)");

            Program.testFail("continue",
                "Unsyntactic continue (1:0)");

            Program.testFail("switch (x) { default: continue; }",
                "Unsyntactic continue (1:22)");

            Program.testFail("do { x } *",
                "Unexpected token (1:9)");

            Program.testFail("while (true) { break x; }",
                "Unsyntactic break (1:15)");

            Program.testFail("while (true) { continue x; }",
                "Unsyntactic continue (1:15)");

            Program.testFail("x: while (true) { (function () { break x; }); }",
                "Unsyntactic break (1:33)");

            Program.testFail("x: while (true) { (function () { continue x; }); }",
                "Unsyntactic continue (1:33)");

            Program.testFail("x: while (true) { (function () { break; }); }",
                "Unsyntactic break (1:33)");

            Program.testFail("x: while (true) { (function () { continue; }); }",
                "Unsyntactic continue (1:33)");

            Program.testFail("x: while (true) { x: while (true) { } }",
                "Label 'x' is already declared (1:18)");

            Program.testFail("(function () { 'use strict'; delete i; }())",
                "Deleting local variable in strict mode (1:29)");

            Program.testFail("function x() { '\\12'; 'use strict'; }", "Octal literal in strict mode (1:16)");

            Program.testFail("(function () { 'use strict'; with (i); }())",
                "'with' in strict mode (1:29)");

            Program.testFail("function hello() {'use strict'; ({ i: 42, i: 42 }) }",
                "Redefinition of property (1:42)");

            Program.testFail("function hello() {'use strict'; ({ hasOwnProperty: 42, hasOwnProperty: 42 }) }",
                "Redefinition of property (1:55)");

            Program.testFail("function hello() {'use strict'; var eval = 10; }",
                "Binding eval in strict mode (1:36)");

            Program.testFail("function hello() {'use strict'; var arguments = 10; }",
                "Binding arguments in strict mode (1:36)");

            Program.testFail("function hello() {'use strict'; try { } catch (eval) { } }",
                "Binding eval in strict mode (1:47)");

            Program.testFail("function hello() {'use strict'; try { } catch (arguments) { } }",
                "Binding arguments in strict mode (1:47)");

            Program.testFail("function hello() {'use strict'; eval = 10; }",
                "Assigning to eval in strict mode (1:32)");

            Program.testFail("function hello() {'use strict'; arguments = 10; }",
                "Assigning to arguments in strict mode (1:32)");

            Program.testFail("function hello() {'use strict'; ++eval; }",
                "Assigning to eval in strict mode (1:34)");

            Program.testFail("function hello() {'use strict'; --eval; }",
                "Assigning to eval in strict mode (1:34)");

            Program.testFail("function hello() {'use strict'; ++arguments; }",
                "Assigning to arguments in strict mode (1:34)");

            Program.testFail("function hello() {'use strict'; --arguments; }",
                "Assigning to arguments in strict mode (1:34)");

            Program.testFail("function hello() {'use strict'; eval++; }",
                "Assigning to eval in strict mode (1:32)");

            Program.testFail("function hello() {'use strict'; eval--; }",
                "Assigning to eval in strict mode (1:32)");

            Program.testFail("function hello() {'use strict'; arguments++; }",
                "Assigning to arguments in strict mode (1:32)");

            Program.testFail("function hello() {'use strict'; arguments--; }",
                "Assigning to arguments in strict mode (1:32)");

            Program.testFail("function hello() {'use strict'; function eval() { } }",
                "Binding eval in strict mode (1:41)");

            Program.testFail("function hello() {'use strict'; function arguments() { } }",
                "Binding arguments in strict mode (1:41)");

            Program.testFail("function eval() {'use strict'; }",
                "Binding eval in strict mode (1:9)");

            Program.testFail("function arguments() {'use strict'; }",
                "Binding arguments in strict mode (1:9)");

            Program.testFail("function hello() {'use strict'; (function eval() { }()) }",
                "Binding eval in strict mode (1:42)");

            Program.testFail("function hello() {'use strict'; (function arguments() { }()) }",
                "Binding arguments in strict mode (1:42)");

            Program.testFail("(function eval() {'use strict'; })()",
                "Binding eval in strict mode (1:10)");

            Program.testFail("(function arguments() {'use strict'; })()",
                "Binding arguments in strict mode (1:10)");

            Program.testFail("function hello() {'use strict'; ({ s: function eval() { } }); }",
                "Binding eval in strict mode (1:47)");

            Program.testFail("(function package() {'use strict'; })()",
                "Binding package in strict mode (1:10)");

            Program.testFail("function hello() {'use strict'; ({ i: 10, set s(eval) { } }); }",
                "Binding eval in strict mode (1:48)");

            Program.testFail("function hello() {'use strict'; ({ set s(eval) { } }); }",
                "Binding eval in strict mode (1:41)");

            Program.testFail("function hello() {'use strict'; ({ s: function s(eval) { } }); }",
                "Binding eval in strict mode (1:49)");

            Program.testFail("function hello(eval) {'use strict';}",
                "Binding eval in strict mode (1:15)");

            Program.testFail("function hello(arguments) {'use strict';}",
                "Binding arguments in strict mode (1:15)");

            Program.testFail("function hello() { 'use strict'; function inner(eval) {} }",
                "Binding eval in strict mode (1:48)");

            Program.testFail("function hello() { 'use strict'; function inner(arguments) {} }",
                "Binding arguments in strict mode (1:48)");

            Program.testFail("function hello() { 'use strict'; \"\\1\"; }",
                "Octal literal in strict mode (1:34)");

            Program.testFail("function hello() { 'use strict'; \"\\00\"; }",
                "Octal literal in strict mode (1:34)");

            Program.testFail("function hello() { 'use strict'; \"\\000\"; }",
                "Octal literal in strict mode (1:34)");

            Program.testFail("function hello() { 'use strict'; 021; }",
                "Invalid number (1:33)");

            Program.testFail("function hello() { 'use strict'; ({ \"\\1\": 42 }); }",
                "Octal literal in strict mode (1:37)");

            Program.testFail("function hello() { 'use strict'; ({ 021: 42 }); }",
                "Invalid number (1:36)");

            Program.testFail("function hello() { \"use strict\"; function inner() { \"octal directive\\1\"; } }",
                "Octal literal in strict mode (1:68)");

            Program.testFail("function hello() { \"use strict\"; var implements; }",
                "The keyword 'implements' is reserved (1:37)");

            Program.testFail("function hello() { \"use strict\"; var interface; }",
                "The keyword 'interface' is reserved (1:37)");

            Program.testFail("function hello() { \"use strict\"; var package; }",
                "The keyword 'package' is reserved (1:37)");

            Program.testFail("function hello() { \"use strict\"; var private; }",
                "The keyword 'private' is reserved (1:37)");

            Program.testFail("function hello() { \"use strict\"; var protected; }",
                "The keyword 'protected' is reserved (1:37)");

            Program.testFail("function hello() { \"use strict\"; var public; }",
                "The keyword 'public' is reserved (1:37)");

            Program.testFail("function hello() { \"use strict\"; var static; }",
                "The keyword 'static' is reserved (1:37)");

            Program.testFail("function hello(static) { \"use strict\"; }",
                "Binding static in strict mode (1:15)");

            Program.testFail("function static() { \"use strict\"; }",
                "Binding static in strict mode (1:9)");

            Program.testFail("\"use strict\"; function static() { }",
                "The keyword 'static' is reserved (1:23)");

            Program.testFail("function a(t, t) { \"use strict\"; }",
                "Argument name clash (1:14)");

            Program.testFail("function a(eval) { \"use strict\"; }",
                "Binding eval in strict mode (1:11)");

            Program.testFail("function a(package) { \"use strict\"; }",
                "Binding package in strict mode (1:11)");

            Program.testFail("function a() { \"use strict\"; function b(t, t) { }; }",
                "Argument name clash (1:43)");

            Program.testFail("(function a(t, t) { \"use strict\"; })",
                "Argument name clash (1:15)");

            Program.testFail("function a() { \"use strict\"; (function b(t, t) { }); }",
                "Argument name clash (1:44)");

            Program.testFail("(function a(eval) { \"use strict\"; })",
                "Binding eval in strict mode (1:12)");

            Program.testFail("(function a(package) { \"use strict\"; })",
                "Binding package in strict mode (1:12)");

            Program.testFail("\"use strict\";function foo(){\"use strict\";}function bar(){var v = 015}",
                "Invalid number (1:65)");

            Program.testFail("var this = 10;", "Unexpected keyword 'this' (1:4)");

            Program.testFail("throw\n10;", "Illegal newline after throw (1:5)");


            // ECMA < 6 mode should work as before

            Program.testFail("const a;", "The keyword 'const' is reserved (1:0)");

            Program.testFail("let x;", "Unexpected token (1:4)");

            Program.testFail("const a = 1;", "The keyword 'const' is reserved (1:0)");

            Program.testFail("let a = 1;", "Unexpected token (1:4)");

            Program.testFail("for(const x = 0;;);", "The keyword 'const' is reserved (1:4)");

            Program.testFail("for(let x = 0;;);", "Unexpected token (1:8)");

            Program.testFail("function a(b = c) {}", "Unexpected token (1:13)");

            Program.testFail("switch (x) { something }", "Unexpected token (1:13)");

            Program.testFail("`abc`", "Unexpected character '`' (1:0)", new TestOptions
            {
                ecmaVersion = 5
            });

            Program.test("let++", new TestNode
            {
                type = typeof(ProgramNode),
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 5
                    }
                },
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 5
                            }
                        },
                        expression = new TestNode
                        {
                            type = typeof(UpdateExpressionNode),
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 0
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 5
                                }
                            },
                            @operator = "++",
                            prefix = false,
                            argument = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 0
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 3
                                    }
                                },
                                name = "let"
                            }
                        }
                    }
                }
            });

            // ECMA 6 support

            Program.test("let x", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(VariableDeclarationNode),
                        declarations = new TestNode[]
                        {
                            new TestNode
                            {
                                type = typeof(VariableDeclaratorNode),
                                id = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "x",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 4
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 5
                                        }
                                    }
                                },
                                init = null,
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 4
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 5
                                    }
                                }
                            }
                        },
                        kind = PropertyKind.Let,
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 5
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 5
                    }
                }
            }, new TestOptions
            {
                ecmaVersion = 6,
                locations = true
            });

            Program.test("let x, y;", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(VariableDeclarationNode),
                        declarations = new TestNode[]
                        {
                            new TestNode
                            {
                                type = typeof(VariableDeclaratorNode),
                                id = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "x",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 4
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 5
                                        }
                                    }
                                },
                                init = null,
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 4
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 5
                                    }
                                }
                            },
                            new TestNode
                            {
                                type = typeof(VariableDeclaratorNode),
                                id = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "y",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 7
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 8
                                        }
                                    }
                                },
                                init = null,
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 7
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 8
                                    }
                                }
                            }
                        },
                        kind = PropertyKind.Let,
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 9
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 9
                    }
                }
            }, new TestOptions
            {
                ecmaVersion = 6,
                locations = true
            });

            Program.test("let x = 42", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(VariableDeclarationNode),
                        declarations = new TestNode[]
                        {
                            new TestNode
                            {
                                type = typeof(VariableDeclaratorNode),
                                id = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "x",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 4
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 5
                                        }
                                    }
                                },
                                init = new TestNode
                                {
                                    type = typeof(LiteralNode),
                                    value = 42,
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 8
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 10
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 4
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 10
                                    }
                                }
                            }
                        },
                        kind = PropertyKind.Let,
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 10
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 10
                    }
                }
            }, new TestOptions
            {
                ecmaVersion = 6,
                locations = true
            });

            Program.test("let eval = 42, arguments = 42", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(VariableDeclarationNode),
                        declarations = new TestNode[]
                        {
                            new TestNode
                            {
                                type = typeof(VariableDeclaratorNode),
                                id = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "eval",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 4
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 8
                                        }
                                    }
                                },
                                init = new TestNode
                                {
                                    type = typeof(LiteralNode),
                                    value = 42,
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 11
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 13
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 4
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 13
                                    }
                                }
                            },
                            new TestNode
                            {
                                type = typeof(VariableDeclaratorNode),
                                id = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "arguments",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 15
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 24
                                        }
                                    }
                                },
                                init = new TestNode
                                {
                                    type = typeof(LiteralNode),
                                    value = 42,
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 27
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 29
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 15
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 29
                                    }
                                }
                            }
                        },
                        kind = PropertyKind.Let,
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 29
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 29
                    }
                }
            }, new TestOptions
            {
                ecmaVersion = 6,
                locations = true
            });

            Program.test("let x = 14, y = 3, z = 1977", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(VariableDeclarationNode),
                        declarations = new TestNode[]
                        {
                            new TestNode
                            {
                                type = typeof(VariableDeclaratorNode),
                                id = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "x",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 4
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 5
                                        }
                                    }
                                },
                                init = new TestNode
                                {
                                    type = typeof(LiteralNode),
                                    value = 14,
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 8
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 10
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 4
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 10
                                    }
                                }
                            },
                            new TestNode
                            {
                                type = typeof(VariableDeclaratorNode),
                                id = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "y",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 12
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 13
                                        }
                                    }
                                },
                                init = new TestNode
                                {
                                    type = typeof(LiteralNode),
                                    value = 3,
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 16
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 17
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 12
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 17
                                    }
                                }
                            },
                            new TestNode
                            {
                                type = typeof(VariableDeclaratorNode),
                                id = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "z",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 19
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 20
                                        }
                                    }
                                },
                                init = new TestNode
                                {
                                    type = typeof(LiteralNode),
                                    value = 1977,
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 23
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 27
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 19
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 27
                                    }
                                }
                            }
                        },
                        kind = PropertyKind.Let,
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 27
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 27
                    }
                }
            }, new TestOptions
            {
                ecmaVersion = 6,
                locations = true
            });

            Program.test("for(let x = 0;;);", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ForStatementNode),
                        init = new TestNode
                        {
                            type = typeof(VariableDeclarationNode),
                            declarations = new TestNode[]
                            {
                                new TestNode
                                {
                                    type = typeof(VariableDeclaratorNode),
                                    id = new TestNode
                                    {
                                        type = typeof(IdentifierNode),
                                        name = "x",
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 8
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 9
                                            }
                                        }
                                    },
                                    init = new TestNode
                                    {
                                        type = typeof(LiteralNode),
                                        value = 0,
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 12
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 13
                                            }
                                        }
                                    },
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 8
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 13
                                        }
                                    }
                                }
                            },
                            kind = PropertyKind.Let,
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 4
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 13
                                }
                            }
                        },
                        test = null,
                        update = null,
                        body = new TestNode
                        {
                            type = typeof(EmptyStatementNode),
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 16
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 17
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 17
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 17
                    }
                }
            }, new TestOptions
            {
                ecmaVersion = 6,
                locations = true
            });

            Program.test("for(let x = 0, y = 1;;);", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ForStatementNode),
                        init = new TestNode
                        {
                            type = typeof(VariableDeclarationNode),
                            declarations = new TestNode[]
                            {
                                new TestNode
                                {
                                    type = typeof(VariableDeclaratorNode),
                                    id = new TestNode
                                    {
                                        type = typeof(IdentifierNode),
                                        name = "x",
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 8
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 9
                                            }
                                        }
                                    },
                                    init = new TestNode
                                    {
                                        type = typeof(LiteralNode),
                                        value = 0,
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 12
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 13
                                            }
                                        }
                                    },
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 8
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 13
                                        }
                                    }
                                },
                                new TestNode
                                {
                                    type = typeof(VariableDeclaratorNode),
                                    id = new TestNode
                                    {
                                        type = typeof(IdentifierNode),
                                        name = "y",
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 15
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 16
                                            }
                                        }
                                    },
                                    init = new TestNode
                                    {
                                        type = typeof(LiteralNode),
                                        value = 1,
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 19
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 20
                                            }
                                        }
                                    },
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 15
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 20
                                        }
                                    }
                                }
                            },
                            kind = PropertyKind.Let,
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 4
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 20
                                }
                            }
                        },
                        test = null,
                        update = null,
                        body = new TestNode
                        {
                            type = typeof(EmptyStatementNode),
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 23
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 24
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 24
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 24
                    }
                }
            }, new TestOptions
            {
                ecmaVersion = 6,
                locations = true
            });

            Program.test("for (let x in list) process(x);", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ForInStatementNode),
                        left = new TestNode
                        {
                            type = typeof(VariableDeclarationNode),
                            declarations = new TestNode[]
                            {
                                new TestNode
                                {
                                    type = typeof(VariableDeclaratorNode),
                                    id = new TestNode
                                    {
                                        type = typeof(IdentifierNode),
                                        name = "x",
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 9
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 10
                                            }
                                        }
                                    },
                                    init = null,
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 9
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 10
                                        }
                                    }
                                }
                            },
                            kind = PropertyKind.Let,
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 5
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 10
                                }
                            }
                        },
                        right = new TestNode
                        {
                            type = typeof(IdentifierNode),
                            name = "list",
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 14
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 18
                                }
                            }
                        },
                        body = new TestNode
                        {
                            type = typeof(ExpressionStatementNode),
                            expression = new TestNode
                            {
                                type = typeof(CallExpressionNode),
                                callee = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "process",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 20
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 27
                                        }
                                    }
                                },
                                arguments = new TestNode[]
                                {
                                    new TestNode
                                    {
                                        type = typeof(IdentifierNode),
                                        name = "x",
                                        loc = new TestNode
                                        {
                                            start = new TestNode
                                            {
                                                line = 1,
                                                column = 28
                                            },
                                            end = new TestNode
                                            {
                                                line = 1,
                                                column = 29
                                            }
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 20
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 30
                                    }
                                }
                            },
                            loc = new TestNode
                            {
                                start = new TestNode
                                {
                                    line = 1,
                                    column = 20
                                },
                                end = new TestNode
                                {
                                    line = 1,
                                    column = 31
                                }
                            }
                        },
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 31
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 31
                    }
                }
            }, new TestOptions
            {
                ecmaVersion = 6,
                locations = true
            });

            Program.test("const x = 42", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(VariableDeclarationNode),
                        declarations = new TestNode[]
                        {
                            new TestNode
                            {
                                type = typeof(VariableDeclaratorNode),
                                id = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "x",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 6
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 7
                                        }
                                    }
                                },
                                init = new TestNode
                                {
                                    type = typeof(LiteralNode),
                                    value = 42,
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 10
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 12
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 6
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 12
                                    }
                                }
                            }
                        },
                        kind = PropertyKind.Const,
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 12
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 12
                    }
                }
            }, new TestOptions
            {
                ecmaVersion = 6,
                locations = true
            });

            Program.test("const eval = 42, arguments = 42", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(VariableDeclarationNode),
                        declarations = new TestNode[]
                        {
                            new TestNode
                            {
                                type = typeof(VariableDeclaratorNode),
                                id = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "eval",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 6
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 10
                                        }
                                    }
                                },
                                init = new TestNode
                                {
                                    type = typeof(LiteralNode),
                                    value = 42,
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 13
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 15
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 6
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 15
                                    }
                                }
                            },
                            new TestNode
                            {
                                type = typeof(VariableDeclaratorNode),
                                id = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "arguments",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 17
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 26
                                        }
                                    }
                                },
                                init = new TestNode
                                {
                                    type = typeof(LiteralNode),
                                    value = 42,
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 29
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 31
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 17
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 31
                                    }
                                }
                            }
                        },
                        kind = PropertyKind.Const,
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 31
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 31
                    }
                }
            }, new TestOptions
            {
                ecmaVersion = 6,
                locations = true
            });

            Program.test("const x = 14, y = 3, z = 1977", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(VariableDeclarationNode),
                        declarations = new TestNode[]
                        {
                            new TestNode
                            {
                                type = typeof(VariableDeclaratorNode),
                                id = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "x",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 6
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 7
                                        }
                                    }
                                },
                                init = new TestNode
                                {
                                    type = typeof(LiteralNode),
                                    value = 14,
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 10
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 12
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 6
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 12
                                    }
                                }
                            },
                            new TestNode
                            {
                                type = typeof(VariableDeclaratorNode),
                                id = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "y",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 14
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 15
                                        }
                                    }
                                },
                                init = new TestNode
                                {
                                    type = typeof(LiteralNode),
                                    value = 3,
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 18
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 19
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 14
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 19
                                    }
                                }
                            },
                            new TestNode
                            {
                                type = typeof(VariableDeclaratorNode),
                                id = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "z",
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 21
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 22
                                        }
                                    }
                                },
                                init = new TestNode
                                {
                                    type = typeof(LiteralNode),
                                    value = 1977,
                                    loc = new TestNode
                                    {
                                        start = new TestNode
                                        {
                                            line = 1,
                                            column = 25
                                        },
                                        end = new TestNode
                                        {
                                            line = 1,
                                            column = 29
                                        }
                                    }
                                },
                                loc = new TestNode
                                {
                                    start = new TestNode
                                    {
                                        line = 1,
                                        column = 21
                                    },
                                    end = new TestNode
                                    {
                                        line = 1,
                                        column = 29
                                    }
                                }
                            }
                        },
                        kind = PropertyKind.Const,
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 29
                            }
                        }
                    }
                },
                loc = new TestNode
                {
                    start = new TestNode
                    {
                        line = 1,
                        column = 0
                    },
                    end = new TestNode
                    {
                        line = 1,
                        column = 29
                    }
                }
            }, new TestOptions
            {
                ecmaVersion = 6,
                locations = true
            });

            Program.testFail("const a;", "Unexpected token (1:7)", new TestOptions
            {
                ecmaVersion = 6
            });

            Program.test("for(const x = 0;;);", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ForStatementNode),
                        init = new TestNode
                        {
                            type = typeof(VariableDeclarationNode),
                            declarations = new TestNode[]
                            {
                                new TestNode
                                {
                                    type = typeof(VariableDeclaratorNode),
                                    id = new TestNode
                                    {
                                        type = typeof(IdentifierNode),
                                        name = "x",
                                        range = new int[]
                                        {
                                            10,
                                            11
                                        }
                                    },
                                    init = new TestNode
                                    {
                                        type = typeof(LiteralNode),
                                        value = 0,
                                        range = new int[]
                                        {
                                            14,
                                            15
                                        }
                                    },
                                    range = new int[]
                                    {
                                        10,
                                        15
                                    }
                                }
                            },
                            kind = PropertyKind.Const,
                            range = new int[]
                            {
                                4,
                                15
                            }
                        },
                        test = null,
                        update = null,
                        body = new TestNode
                        {
                            type = typeof(EmptyStatementNode),
                            range = new int[]
                            {
                                18,
                                19
                            }
                        },
                        range = new int[]
                        {
                            0,
                            19
                        }
                    }
                },
                range = new int[]
                {
                    0,
                    19
                }
            }, new TestOptions
            {
                ecmaVersion = 6,
                ranges = true
            });

            Program.testFail("for(x of a);", "Unexpected token (1:6)");

            Program.testFail("for(var x of a);", "Unexpected token (1:10)");

            // Assertion Tests
            //Program.test(function TestComments() {
            //    // Bear class
            //    function Bear(x,y,z) {
            //      this.position = [x||0,y||0,z||0]
            //    }
            //
            //    Bear.prototype.roar = function(message) {
            //      return 'RAWWW: ' + message; // Whatever
            //    };
            //
            //    function Cat() {
            //    /* 1
            //       2
            //       3*/
            //    }
            //
            //    Cat.prototype.roar = function(message) {
            //      return 'MEOOWW: ' + /*stuff*/ message;
            //    };
            //}.toString().replace(/\r\n/g, '\n'), new TestNode {}, new TestNode {
            //  onComment = [
            //    new TestNode {type = typeof(LineNode), value: " Bear class"},
            //    new TestNode {type = typeof(LineNode), value: " Whatever"},
            //    new TestNode {type = typeof(BlockNode),  value: [
            //            " 1",
            //      "       2",
            //      "       3"
            //}.join('\n')},
            //    new TestNode {type = typeof(BlockNode), value: "stuff"}
            //}
            //});

            Program.test("<!--\n;", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(EmptyStatementNode)
                    }
                }
            });

            Program.test("\nfunction plop() {\n'use strict';\n/* Comment */\n}", new TestNode
            {
            }, new TestOptions
            {
                locations = true,
                onComment = new TestNode[]
                {
                    new TestNode
                    {
                        type = "Block",
                        value = " Comment ",
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 4,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 4,
                                column = 13
                            }
                        }
                    }
                }
            });

            Program.test("// line comment", new TestNode
            {
            }, new TestOptions
            {
                locations = true,
                onComment = new TestNode[]
                {
                    new TestNode
                    {
                        type = "Line",
                        value = " line comment",
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 15
                            }
                        }
                    }
                }
            });

            Program.test("<!-- HTML comment", new TestNode
            {
            }, new TestOptions
            {
                locations = true,
                onComment = new TestNode[]
                {
                    new TestNode
                    {
                        type = "Line",
                        value = " HTML comment",
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 1,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 1,
                                column = 17
                            }
                        }
                    }
                }
            });

            Program.test(";\n--> HTML comment", new TestNode
            {
            }, new TestOptions
            {
                locations = true,
                onComment = new TestNode[]
                {
                    new TestNode
                    {
                        type = "Line",
                        value = " HTML comment",
                        loc = new TestNode
                        {
                            start = new TestNode
                            {
                                line = 2,
                                column = 0
                            },
                            end = new TestNode
                            {
                                line = 2,
                                column = 16
                            }
                        }
                    }
                }
            });

            Program.test("function f(f) { 'use strict'; }", new TestNode
            {
            });

            // https://github.com/acornjs/acorn/issues/180
            Program.test("#!/usr/bin/node\n;", new TestNode
            {
            }, new TestOptions
            {
                allowHashBang = true,
                onComment = new TestNode[]
                {
                    new TestNode
                    {
                        type = "Line",
                        value = "/usr/bin/node",
                        start = 0,
                        end = 15
                    }
                }
            });

            // https://github.com/acornjs/acorn/issues/204
            Program.test("(function () {} / 1)", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(BinaryExpressionNode),
                            left = new TestNode
                            {
                                type = typeof(FunctionExpressionNode),
                                id = null,
                                @params = new TestNode[0],
                                body = new TestNode
                                {
                                    type = typeof(BlockStatementNode),
                                    body = new TestNode[0]
                                }
                            },
                            @operator = "/",
                            right = new TestNode
                            {
                                type = typeof(LiteralNode),
                                value = 1
                            }
                        }
                    }
                }
            });

            Program.test("function f() {} / 1 /", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(FunctionDeclarationNode),
                        id = new TestNode
                        {
                            type = typeof(IdentifierNode),
                            name = "f"
                        },
                        @params = new TestNode[0],
                        body = new TestNode
                        {
                            type = typeof(BlockStatementNode),
                            body = new TestNode[0]
                        }
                    },
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(LiteralNode),
                            regex = new TestNode
                            {
                                pattern = " 1 ",
                                flags = ""
                            }
                        }
                    }
                }
            });

            // https://github.com/acornjs/acorn/issues/320

            Program.test("do /x/; while (false);", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(DoWhileStatementNode),
                        body = new TestNode
                        {
                            type = typeof(ExpressionStatementNode),
                            expression = new TestNode
                            {
                                type = typeof(LiteralNode),
                                raw = "/x/",
                                regex = new TestNode
                                {
                                    pattern = "x",
                                    flags = ""
                                }
                            }
                        },
                        test = new TestNode
                        {
                            type = typeof(LiteralNode),
                            value = false,
                            raw = "false"
                        }
                    }
                }
            });

            var semicolons = new List<int>();
            Program.testAssert("var x\nreturn\n10", node =>
            {
                var result = string.Join(' ', semicolons);
                semicolons.Clear();
                if (result != "5 12 15")
                {
                    return "Unexpected result for onInsertedSemicolon: " + result;
                }

                return null;
            }, new TestOptions
            {
                onInsertedSemicolon = (parser, lastTokenEnd, lastTokenEndLocation) => semicolons.Add(lastTokenEnd),
                allowReturnOutsideFunction = true,
                loose = false
            });

            var trailingCommas = new List<int>();
            Program.testAssert("[1,2,] + {foo: 1,}", node =>
            {
                var result = string.Join(' ', trailingCommas);
                trailingCommas.Clear();
                if (result != "4 16")
                {
                    return "Unexpected result for onTrailingComma: " + result;
                }

                return null;
            }, new TestOptions
            {
                onTrailingComma = (parser, lastTokenEnd, lastTokenEndLocation) => trailingCommas.Add(lastTokenEnd),
                loose = false
            });

            // https://github.com/acornjs/acorn/issues/275

            Program.testFail("({ get prop(x) {} })", "getter should have no params (1:11)");
            Program.testFail("({ set prop() {} })", "setter should have exactly one param (1:11)");
            Program.testFail("({ set prop(x, y) {} })", "setter should have exactly one param (1:11)");

            // https://github.com/acornjs/acorn/issues/363

            Program.test("/[a-z]/gim", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(LiteralNode),
                            regex = new TestNode
                            {
                                pattern = "[a-z]",
                                flags = "gim"
                            }
                        }
                    }
                }
            });
            Program.testFail("/[a-z]/u", "Invalid regular expression flag (1:1)");
            Program.testFail("/[a-z]/y", "Invalid regular expression flag (1:1)");
            Program.testFail("/[a-z]/s", "Invalid regular expression flag (1:1)");
            Program.testFail("/a/gg", "Duplicate regular expression flag (1:1)");

            Program.testFail("function(){}", "Unexpected token (1:8)");

            Program.test("0123. in/foo/i", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(BinaryExpressionNode),
                            left = new TestNode
                            {
                                type = typeof(BinaryExpressionNode),
                                left = new TestNode
                                {
                                    type = typeof(MemberExpressionNode),
                                    @object = new TestNode
                                    {
                                        type = typeof(LiteralNode),
                                        value = 83,
                                        raw = "0123"
                                    },
                                    property = new TestNode
                                    {
                                        type = typeof(IdentifierNode),
                                        name = "in"
                                    },
                                    computed = false
                                },
                                @operator = "/",
                                right = new TestNode
                                {
                                    type = typeof(IdentifierNode),
                                    name = "foo"
                                }
                            },
                            @operator = "/",
                            right = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                name = "i"
                            }
                        }
                    }
                }
            });

            Program.test("0128", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(LiteralNode),
                            value = 128,
                            raw = "0128"
                        }
                    }
                }
            });

            Program.testFail("07.5", "Unexpected token (1:2)");

            Program.test("08.5", new TestNode
            {
                type = typeof(ProgramNode),
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        expression = new TestNode
                        {
                            type = typeof(LiteralNode),
                            value = 8.5,
                            raw = "08.5"
                        }
                    }
                }
            });

            Program.test("undefined", new TestNode
            {
            }, new TestOptions
            {
                ecmaVersion = 8
            });

            Program.testFail("\\u{74}rue", "Escape sequence in keyword true (1:0)", new TestOptions
            {
                ecmaVersion = 6
            });
            Program.testFail("export { X \\u0061s Y }", "Unexpected token (1:11)", new TestOptions
            {
                ecmaVersion = 7,
                sourceType = SourceType.Module
            });
            Program.testFail("import X fro\\u006d 'x'", "Unexpected token (1:9)", new TestOptions
            {
                ecmaVersion = 7,
                sourceType = SourceType.Module
            });
            Program.testFail("le\\u0074 x = 5", "Unexpected token (1:9)", new TestOptions
            {
                ecmaVersion = 6
            });
            Program.testFail("(function* () { y\\u0069eld 10 })", "Can not use 'yield' as identifier inside a generator (1:16)", new TestOptions
            {
                ecmaVersion = 6
            });
            Program.testFail("(async function() { aw\\u0061it x })", "Can not use 'await' as identifier inside an async function (1:20)", new TestOptions
            {
                ecmaVersion = 8
            });
            Program.testFail("(\\u0061sync function() { await x })", "Unexpected token (1:12)", new TestOptions
            {
                ecmaVersion = 8
            });
            Program.testFail("(\\u0061sync () => { await x })", "Unexpected token (1:15)", new TestOptions
            {
                ecmaVersion = 8
            });
            Program.testFail("\\u0061sync x => { await x }", "Unexpected token (1:11)", new TestOptions
            {
                ecmaVersion = 8
            });
            Program.testFail("class X { \\u0061sync x() { await x } }", "Unexpected token (1:21)", new TestOptions
            {
                ecmaVersion = 8
            });
            Program.testFail("class X { static \\u0061sync x() { await x } }", "Unexpected token (1:28)", new TestOptions
            {
                ecmaVersion = 8
            });
            Program.testFail("({ ge\\u0074 x() {} })", "Unexpected token (1:12)");
            Program.testFail("export \\u0061sync function y() { await x }", "Unexpected token (1:7)", new TestOptions
            {
                ecmaVersion = 8,
                sourceType = SourceType.Module
            });
            Program.testFail("export default \\u0061sync function () { await x }", "Unexpected token (1:26)", new TestOptions
            {
                ecmaVersion = 8,
                sourceType = SourceType.Module
            });
            Program.test("(\\u0061sync ())", new TestNode
            {
                type = typeof(ProgramNode),
                start = 0,
                end = 15,
                body = new TestNode[]
                {
                    new TestNode
                    {
                        type = typeof(ExpressionStatementNode),
                        start = 0,
                        end = 15,
                        expression = new TestNode
                        {
                            type = typeof(CallExpressionNode),
                            start = 1,
                            end = 14,
                            callee = new TestNode
                            {
                                type = typeof(IdentifierNode),
                                start = 1,
                                end = 11,
                                name = "async"
                            },
                            arguments = new TestNode[0]
                        }
                    }
                },
                sourceType = SourceType.Script
            }, new TestOptions
            {
                ecmaVersion = 8
            });
            Program.testFail("({ \\u0061sync x() { await x } })", "Unexpected token (1:14)", new TestOptions
            {
                ecmaVersion = 8
            });
            Program.testFail("for (x \\u006ff y) {}", "Unexpected token (1:7)", new TestOptions
            {
                ecmaVersion = 6
            });
            Program.testFail("function x () { new.ta\\u0072get }", "The only valid meta property for new is new.target (1:20)", new TestOptions
            {
                ecmaVersion = 6
            });
            Program.testFail("class X { st\\u0061tic y() {} }", "Unexpected token (1:22)", new TestOptions
            {
                ecmaVersion = 6
            });

            Program.testFail("(x=1)=2", "Parenthesized pattern (1:0)");

            Program.test("(foo = [])[0] = 4;", new TestNode
            {
            });

            Program.test("for ((foo = []).bar in {}) {}", new TestNode
            {
            });

            Program.test("((b), a=1)", new TestNode
            {
            });

            Program.test("(x) = 1", new TestNode
            {
            });

            Program.test("try {} catch (foo) { var foo; }", new TestNode
            {
            }, new TestOptions
            {
                ecmaVersion = 6
            });
            Program.testFail("try {} catch (foo) { let foo; }", "Identifier 'foo' has already been declared (1:25)", new TestOptions
            {
                ecmaVersion = 6
            });
            Program.test("try {} catch (foo) { try {} catch (_) { var foo; } }", new TestNode
            {
            }, new TestOptions
            {
                ecmaVersion = 6
            });
            Program.testFail("try {} catch ([foo]) { var foo; }", "Identifier 'foo' has already been declared (1:27)", new TestOptions
            {
                ecmaVersion = 6
            });
            Program.testFail("try {} catch ({ foo }) { var foo; }", "Identifier 'foo' has already been declared (1:29)", new TestOptions
            {
                ecmaVersion = 6
            });
            Program.testFail("try {} catch ([foo, foo]) {}", "Identifier 'foo' has already been declared (1:20)", new TestOptions
            {
                ecmaVersion = 6
            });
            Program.testFail("try {} catch ({ a: foo, b: { c: [foo] } }) {}", "Identifier 'foo' has already been declared (1:33)", new TestOptions
            {
                ecmaVersion = 6
            });
            Program.testFail("let foo; try {} catch (foo) {} let foo;", "Identifier 'foo' has already been declared (1:35)", new TestOptions
            {
                ecmaVersion = 6
            });
            Program.testFail("try {} catch (foo) { function foo() {} }", "Identifier 'foo' has already been declared (1:30)");
            Program.test("try {} catch (foo) { if (1) function foo() {} }", new TestNode
            {
            }, new TestOptions
            {
                ecmaVersion = 6
            });

            Program.test("try {} catch (foo) {} var foo;", new TestNode
            {
            });
            Program.test("try {} catch (foo) {} let foo;", new TestNode
            {
            }, new TestOptions
            {
                ecmaVersion = 6
            });
            Program.test("try {} catch (foo) { { let foo; } }", new TestNode
            {
            }, new TestOptions
            {
                ecmaVersion = 6
            });
            Program.test("try {} catch (foo) { function x() { var foo; } }", new TestNode
            {
            }, new TestOptions
            {
                ecmaVersion = 6
            });
            Program.test("try {} catch (foo) { function x(foo) {} }", new TestNode
            {
            }, new TestOptions
            {
                ecmaVersion = 6
            });

            Program.test("'use strict'; let foo = function foo() {}", new TestNode
            {
            }, new TestOptions
            {
                ecmaVersion = 6
            });

            Program.test("/**/ --> comment\n", new TestNode
            {
            });
            Program.test("x.class++", new TestNode
            {
            });

            Program.test("var x = (1 + 2)", new TestNode(), new TestOptions
            {
                locations = true,
                loose = false,
                onToken = new[]
                {
                    new TestNode
                    {
                        type = TokenType.Var,
                        value = "var",
                        loc = new TestNode
                        {
                            start = new Position(1, 0),
                            end = new Position(1, 3)
                        },
                    },
                    new TestNode
                    {
                        type = TokenType.Name,
                        value = "x",
                        loc = new TestNode
                        {
                            start = new Position(1, 4),
                            end = new Position(1, 5)
                        }
                    },
                    new TestNode
                    {
                        type = TokenType.Equal,
                        value = "=",
                        loc = new TestNode
                        {
                            start = new Position(1, 6),
                            end = new Position(1, 7)
                        }
                    },
                    new TestNode
                    {
                        type = TokenType.ParenLeft,
                        value = null,
                        loc = new TestNode
                        {
                            start = new Position(1, 8),
                            end = new Position(1, 9)
                        }
                    },
                    new TestNode
                    {
                        type = TokenType.Number,
                        value = 1,
                        loc = new TestNode
                        {
                            start = new Position(1, 9),
                            end = new Position(1, 10)
                        }
                    },
                    new TestNode
                    {
                        type = TokenType.PlusMinus,
                        value = "+",
                        loc = new TestNode
                        {
                            start = new Position(1, 11),
                            end = new Position(1, 12)
                        }
                    },
                    new TestNode
                    {
                        type = TokenType.Number,
                        value = 2,
                        loc = new TestNode
                        {
                            start = new Position(1, 13),
                            end = new Position(1, 14)
                        }
                    },
                    new TestNode
                    {
                        type = TokenType.ParenRight,
                        value = null,
                        loc = new TestNode
                        {
                            start = new Position(1, 14),
                            end = new Position(1, 15)
                        }
                    },
                    new TestNode
                    {
                        type = TokenType.Eof,
                        value = null,
                        loc = new TestNode
                        {
                            start = new Position(1, 15),
                            end = new Position(1, 15)
                        }
                    }
                }
            });
        }
    }
}